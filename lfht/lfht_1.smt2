(set-logic HORN)
(declare-fun invariant (Real Real Real Bool Real Real Bool Real Real Bool Real Real Bool Real Real Bool Real Real Bool Real Real Real) Bool)

;; Initial state
(assert
  (forall ((state.K Real) (state.old Real) (state.new Real) (state.ht!0!assimilated Bool) (state.ht!0!num_entries Real) (state.ht!0!num_to_migrate Real) (state.ht!1!assimilated Bool) (state.ht!1!num_entries Real) (state.ht!1!num_to_migrate Real) (state.ht!2!assimilated Bool) (state.ht!2!num_entries Real) (state.ht!2!num_to_migrate Real) (state.ht!3!assimilated Bool) (state.ht!3!num_entries Real) (state.ht!3!num_to_migrate Real) (state.ht!4!assimilated Bool) (state.ht!4!num_entries Real) (state.ht!4!num_to_migrate Real) (state.ht!5!assimilated Bool) (state.ht!5!num_entries Real) (state.ht!5!num_to_migrate Real) (state.pc Real))
    (=> (let ((l0 (= |state.pc| 0))) (let ((l1 (= |state.K| 32))) (let ((l2 (= |state.ht!0!assimilated| false))) (let ((l3 (= |state.ht!0!num_entries| 0))) (let ((l4 (= |state.ht!0!num_to_migrate| 0))) (let ((l5 (= |state.ht!1!assimilated| false))) (let ((l6 (= |state.ht!1!num_entries| 0))) (let ((l7 (= |state.ht!1!num_to_migrate| 0))) (let ((l8 (= |state.ht!2!assimilated| false))) (let ((l9 (= |state.ht!2!num_entries| 0))) (let ((l10 (= |state.ht!2!num_to_migrate| 0))) (let ((l11 (= |state.ht!3!assimilated| false))) (let ((l12 (= |state.ht!3!num_entries| 0))) (let ((l13 (= |state.ht!3!num_to_migrate| 0))) (let ((l14 (= |state.ht!4!assimilated| false))) (let ((l15 (= |state.ht!4!num_entries| 0))) (let ((l16 (= |state.ht!4!num_to_migrate| 0))) (let ((l17 (= |state.ht!5!assimilated| false))) (let ((l18 (= |state.ht!5!num_entries| 0))) (let ((l19 (= |state.ht!5!num_to_migrate| 0))) (let ((l20 (= |state.old| 1))) (let ((l21 (= |state.new| 1))) (let ((l22 (and l0 l1 l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l19 l20 l21))) l22)))))))))))))))))))))))
        (invariant state.K state.old state.new state.ht!0!assimilated state.ht!0!num_entries state.ht!0!num_to_migrate state.ht!1!assimilated state.ht!1!num_entries state.ht!1!num_to_migrate state.ht!2!assimilated state.ht!2!num_entries state.ht!2!num_to_migrate state.ht!3!assimilated state.ht!3!num_entries state.ht!3!num_to_migrate state.ht!4!assimilated state.ht!4!num_entries state.ht!4!num_to_migrate state.ht!5!assimilated state.ht!5!num_entries state.ht!5!num_to_migrate state.pc))
  )
)

;; Transition relation
(assert
  (forall ((state.K Real) (next.K Real) (state.old Real) (next.old Real) (state.new Real) (next.new Real) (state.ht!0!assimilated Bool) (next.ht!0!assimilated Bool) (state.ht!0!num_entries Real) (next.ht!0!num_entries Real) (state.ht!0!num_to_migrate Real) (next.ht!0!num_to_migrate Real) (state.ht!1!assimilated Bool) (next.ht!1!assimilated Bool) (state.ht!1!num_entries Real) (next.ht!1!num_entries Real) (state.ht!1!num_to_migrate Real) (next.ht!1!num_to_migrate Real) (state.ht!2!assimilated Bool) (next.ht!2!assimilated Bool) (state.ht!2!num_entries Real) (next.ht!2!num_entries Real) (state.ht!2!num_to_migrate Real) (next.ht!2!num_to_migrate Real) (state.ht!3!assimilated Bool) (next.ht!3!assimilated Bool) (state.ht!3!num_entries Real) (next.ht!3!num_entries Real) (state.ht!3!num_to_migrate Real) (next.ht!3!num_to_migrate Real) (state.ht!4!assimilated Bool) (next.ht!4!assimilated Bool) (state.ht!4!num_entries Real) (next.ht!4!num_entries Real) (state.ht!4!num_to_migrate Real) (next.ht!4!num_to_migrate Real) (state.ht!5!assimilated Bool) (next.ht!5!assimilated Bool) (state.ht!5!num_entries Real) (next.ht!5!num_entries Real) (state.ht!5!num_to_migrate Real) (next.ht!5!num_to_migrate Real) (state.pc Real) (next.pc Real))
    (=> (and (invariant state.K state.old state.new state.ht!0!assimilated state.ht!0!num_entries state.ht!0!num_to_migrate state.ht!1!assimilated state.ht!1!num_entries state.ht!1!num_to_migrate state.ht!2!assimilated state.ht!2!num_entries state.ht!2!num_to_migrate state.ht!3!assimilated state.ht!3!num_entries state.ht!3!num_to_migrate state.ht!4!assimilated state.ht!4!num_entries state.ht!4!num_to_migrate state.ht!5!assimilated state.ht!5!num_entries state.ht!5!num_to_migrate state.pc)
             (let ((l0 (= |state.pc| 0))) (let ((l1 (= |state.old| |state.new|))) (let ((l2 (not l1))) (let ((l3 (= |state.old| 6))) (let ((l4 (= |state.old| 5))) (let ((l5 (= |state.old| 4))) (let ((l6 (= |state.old| 3))) (let ((l7 (= |state.old| 2))) (let ((l8 (ite l7 |state.ht!1!assimilated| |state.ht!0!assimilated|))) (let ((l9 (ite l6 |state.ht!2!assimilated| l8))) (let ((l10 (ite l5 |state.ht!3!assimilated| l9))) (let ((l11 (ite l4 |state.ht!4!assimilated| l10))) (let ((l12 (ite l3 |state.ht!5!assimilated| l11))) (let ((l13 (not l12))) (let ((l14 (= |state.old| 1))) (let ((l15 (ite l7 |state.ht!1!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l16 (ite l6 |state.ht!2!num_to_migrate| l15))) (let ((l17 (ite l5 |state.ht!3!num_to_migrate| l16))) (let ((l18 (ite l4 |state.ht!4!num_to_migrate| l17))) (let ((l19 (ite l3 |state.ht!5!num_to_migrate| l18))) (let ((l20 (<= l19 8))) (let ((l21 (= |state.new| 6))) (let ((l22 (= |state.new| 5))) (let ((l23 (= |state.new| 4))) (let ((l24 (= |state.new| 3))) (let ((l25 (= |state.new| 2))) (let ((l26 (ite l25 |state.ht!1!assimilated| |state.ht!0!assimilated|))) (let ((l27 (ite l24 |state.ht!2!assimilated| l26))) (let ((l28 (ite l23 |state.ht!3!assimilated| l27))) (let ((l29 (ite l22 |state.ht!4!assimilated| l28))) (let ((l30 (ite l21 |state.ht!5!assimilated| l29))) (let ((l31 (ite l21 l30 |state.ht!5!assimilated|))) (let ((l32 (ite l22 l30 |state.ht!4!assimilated|))) (let ((l33 (ite l23 l30 |state.ht!3!assimilated|))) (let ((l34 (ite l24 l30 |state.ht!2!assimilated|))) (let ((l35 (ite l25 l30 |state.ht!1!assimilated|))) (let ((l36 (= |state.new| 1))) (let ((l37 (ite l36 l30 |state.ht!0!assimilated|))) (let ((l38 (ite l7 l35 l37))) (let ((l39 (ite l6 l34 l38))) (let ((l40 (ite l5 l33 l39))) (let ((l41 (ite l4 l32 l40))) (let ((l42 (ite l3 l31 l41))) (let ((l43 (ite l14 l42 l37))) (let ((l44 (ite l14 l20 l43))) (let ((l45 (= |next.ht!0!assimilated| l44))) (let ((l46 (ite l25 |state.ht!1!num_entries| |state.ht!0!num_entries|))) (let ((l47 (ite l24 |state.ht!2!num_entries| l46))) (let ((l48 (ite l23 |state.ht!3!num_entries| l47))) (let ((l49 (ite l22 |state.ht!4!num_entries| l48))) (let ((l50 (ite l21 |state.ht!5!num_entries| l49))) (let ((l51 (< 8 l19))) (let ((l52 (ite l51 8 l19))) (let ((l53 (+ l50 l52))) (let ((l54 (ite l21 l53 |state.ht!5!num_entries|))) (let ((l55 (ite l22 l53 |state.ht!4!num_entries|))) (let ((l56 (ite l23 l53 |state.ht!3!num_entries|))) (let ((l57 (ite l24 l53 |state.ht!2!num_entries|))) (let ((l58 (ite l25 l53 |state.ht!1!num_entries|))) (let ((l59 (ite l36 l53 |state.ht!0!num_entries|))) (let ((l60 (ite l7 l58 l59))) (let ((l61 (ite l6 l57 l60))) (let ((l62 (ite l5 l56 l61))) (let ((l63 (ite l4 l55 l62))) (let ((l64 (ite l3 l54 l63))) (let ((l65 (ite l14 l64 l59))) (let ((l66 (ite l14 l64 l65))) (let ((l67 (= |next.ht!0!num_entries| l66))) (let ((l68 (- l19 l52))) (let ((l69 (ite l25 |state.ht!1!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l70 (ite l24 |state.ht!2!num_to_migrate| l69))) (let ((l71 (ite l23 |state.ht!3!num_to_migrate| l70))) (let ((l72 (ite l22 |state.ht!4!num_to_migrate| l71))) (let ((l73 (ite l21 |state.ht!5!num_to_migrate| l72))) (let ((l74 (ite l36 l73 |state.ht!0!num_to_migrate|))) (let ((l75 (ite l14 l68 l74))) (let ((l76 (ite l14 l68 l75))) (let ((l77 (= |next.ht!0!num_to_migrate| l76))) (let ((l78 (ite l7 l42 l35))) (let ((l79 (ite l7 l20 l78))) (let ((l80 (= |next.ht!1!assimilated| l79))) (let ((l81 (ite l7 l64 l58))) (let ((l82 (ite l7 l64 l81))) (let ((l83 (= |next.ht!1!num_entries| l82))) (let ((l84 (ite l25 l73 |state.ht!1!num_to_migrate|))) (let ((l85 (ite l7 l68 l84))) (let ((l86 (ite l7 l68 l85))) (let ((l87 (= |next.ht!1!num_to_migrate| l86))) (let ((l88 (ite l6 l42 l34))) (let ((l89 (ite l6 l20 l88))) (let ((l90 (= |next.ht!2!assimilated| l89))) (let ((l91 (ite l6 l64 l57))) (let ((l92 (ite l6 l64 l91))) (let ((l93 (= |next.ht!2!num_entries| l92))) (let ((l94 (ite l24 l73 |state.ht!2!num_to_migrate|))) (let ((l95 (ite l6 l68 l94))) (let ((l96 (ite l6 l68 l95))) (let ((l97 (= |next.ht!2!num_to_migrate| l96))) (let ((l98 (ite l5 l42 l33))) (let ((l99 (ite l5 l20 l98))) (let ((l100 (= |next.ht!3!assimilated| l99))) (let ((l101 (ite l5 l64 l56))) (let ((l102 (ite l5 l64 l101))) (let ((l103 (= |next.ht!3!num_entries| l102))) (let ((l104 (ite l23 l73 |state.ht!3!num_to_migrate|))) (let ((l105 (ite l5 l68 l104))) (let ((l106 (ite l5 l68 l105))) (let ((l107 (= |next.ht!3!num_to_migrate| l106))) (let ((l108 (ite l4 l42 l32))) (let ((l109 (ite l4 l20 l108))) (let ((l110 (= |next.ht!4!assimilated| l109))) (let ((l111 (ite l4 l64 l55))) (let ((l112 (ite l4 l64 l111))) (let ((l113 (= |next.ht!4!num_entries| l112))) (let ((l114 (ite l22 l73 |state.ht!4!num_to_migrate|))) (let ((l115 (ite l4 l68 l114))) (let ((l116 (ite l4 l68 l115))) (let ((l117 (= |next.ht!4!num_to_migrate| l116))) (let ((l118 (ite l3 l42 l31))) (let ((l119 (ite l3 l20 l118))) (let ((l120 (= |next.ht!5!assimilated| l119))) (let ((l121 (ite l3 l64 l54))) (let ((l122 (ite l3 l64 l121))) (let ((l123 (= |next.ht!5!num_entries| l122))) (let ((l124 (ite l21 l73 |state.ht!5!num_to_migrate|))) (let ((l125 (ite l3 l68 l124))) (let ((l126 (ite l3 l68 l125))) (let ((l127 (= |next.ht!5!num_to_migrate| l126))) (let ((l128 (= |next.pc| 1))) (let ((l129 (= |next.K| |state.K|))) (let ((l130 (= |next.new| |state.new|))) (let ((l131 (= |next.old| |state.old|))) (let ((l132 (and l0 l2 l13 l45 l67 l77 l80 l83 l87 l90 l93 l97 l100 l103 l107 l110 l113 l117 l120 l123 l127 l128 l129 l130 l131))) (let ((l133 (or l1 l12))) (let ((l134 (= |next.ht!0!assimilated| |state.ht!0!assimilated|))) (let ((l135 (= |next.ht!0!num_entries| |state.ht!0!num_entries|))) (let ((l136 (= |next.ht!0!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l137 (= |next.ht!1!assimilated| |state.ht!1!assimilated|))) (let ((l138 (= |next.ht!1!num_entries| |state.ht!1!num_entries|))) (let ((l139 (= |next.ht!1!num_to_migrate| |state.ht!1!num_to_migrate|))) (let ((l140 (= |next.ht!2!assimilated| |state.ht!2!assimilated|))) (let ((l141 (= |next.ht!2!num_entries| |state.ht!2!num_entries|))) (let ((l142 (= |next.ht!2!num_to_migrate| |state.ht!2!num_to_migrate|))) (let ((l143 (= |next.ht!3!assimilated| |state.ht!3!assimilated|))) (let ((l144 (= |next.ht!3!num_entries| |state.ht!3!num_entries|))) (let ((l145 (= |next.ht!3!num_to_migrate| |state.ht!3!num_to_migrate|))) (let ((l146 (= |next.ht!4!assimilated| |state.ht!4!assimilated|))) (let ((l147 (= |next.ht!4!num_entries| |state.ht!4!num_entries|))) (let ((l148 (= |next.ht!4!num_to_migrate| |state.ht!4!num_to_migrate|))) (let ((l149 (= |next.ht!5!assimilated| |state.ht!5!assimilated|))) (let ((l150 (= |next.ht!5!num_entries| |state.ht!5!num_entries|))) (let ((l151 (= |next.ht!5!num_to_migrate| |state.ht!5!num_to_migrate|))) (let ((l152 (and l134 l135 l136 l137 l138 l139 l140 l141 l142 l143 l144 l145 l146 l147 l148 l149 l150 l151))) (let ((l153 (and l0 l133 l128 l129 l152 l130 l131))) (let ((l154 (= |state.pc| 1))) (let ((l155 (= |next.pc| 2))) (let ((l156 (= |next.ht!0!assimilated| l37))) (let ((l157 (+ l50 1))) (let ((l158 (ite l36 l157 |state.ht!0!num_entries|))) (let ((l159 (= |next.ht!0!num_entries| l158))) (let ((l160 (= |next.ht!0!num_to_migrate| l74))) (let ((l161 (= |next.ht!1!assimilated| l35))) (let ((l162 (ite l25 l157 |state.ht!1!num_entries|))) (let ((l163 (= |next.ht!1!num_entries| l162))) (let ((l164 (= |next.ht!1!num_to_migrate| l84))) (let ((l165 (= |next.ht!2!assimilated| l34))) (let ((l166 (ite l24 l157 |state.ht!2!num_entries|))) (let ((l167 (= |next.ht!2!num_entries| l166))) (let ((l168 (= |next.ht!2!num_to_migrate| l94))) (let ((l169 (= |next.ht!3!assimilated| l33))) (let ((l170 (ite l23 l157 |state.ht!3!num_entries|))) (let ((l171 (= |next.ht!3!num_entries| l170))) (let ((l172 (= |next.ht!3!num_to_migrate| l104))) (let ((l173 (= |next.ht!4!assimilated| l32))) (let ((l174 (ite l22 l157 |state.ht!4!num_entries|))) (let ((l175 (= |next.ht!4!num_entries| l174))) (let ((l176 (= |next.ht!4!num_to_migrate| l114))) (let ((l177 (= |next.ht!5!assimilated| l31))) (let ((l178 (ite l21 l157 |state.ht!5!num_entries|))) (let ((l179 (= |next.ht!5!num_entries| l178))) (let ((l180 (= |next.ht!5!num_to_migrate| l124))) (let ((l181 (and l154 l155 l129 l156 l159 l160 l161 l163 l164 l165 l167 l168 l169 l171 l172 l173 l175 l176 l177 l179 l180 l130 l131))) (let ((l182 (= |state.pc| 2))) (let ((l183 (/ 3 5))) (let ((l184 (* |state.K| l183))) (let ((l185 (<= l50 l184))) (let ((l186 (not l185))) (let ((l187 (< |state.new| 6))) (let ((l188 (* |state.K| 2))) (let ((l189 (= |next.K| l188))) (let ((l190 (= |next.old| |state.new|))) (let ((l191 (+ |state.new| 1))) (let ((l192 (= |next.new| l191))) (let ((l193 (= l191 6))) (let ((l194 (not l193))) (let ((l195 (= l191 5))) (let ((l196 (= l191 4))) (let ((l197 (= l191 3))) (let ((l198 (= l191 2))) (let ((l199 (ite l198 |state.ht!1!assimilated| |state.ht!0!assimilated|))) (let ((l200 (ite l197 |state.ht!2!assimilated| l199))) (let ((l201 (ite l196 |state.ht!3!assimilated| l200))) (let ((l202 (ite l195 |state.ht!4!assimilated| l201))) (let ((l203 (ite l193 |state.ht!5!assimilated| l202))) (let ((l204 (ite l193 l203 |state.ht!5!assimilated|))) (let ((l205 (ite l195 l203 |state.ht!4!assimilated|))) (let ((l206 (ite l196 l203 |state.ht!3!assimilated|))) (let ((l207 (ite l197 l203 |state.ht!2!assimilated|))) (let ((l208 (ite l198 l203 |state.ht!1!assimilated|))) (let ((l209 (= l191 1))) (let ((l210 (ite l209 l203 |state.ht!0!assimilated|))) (let ((l211 (ite l198 l208 l210))) (let ((l212 (ite l197 l207 l211))) (let ((l213 (ite l196 l206 l212))) (let ((l214 (ite l195 l205 l213))) (let ((l215 (ite l193 l204 l214))) (let ((l216 (ite l193 l215 l204))) (let ((l217 (and l194 l216))) (let ((l218 (not l195))) (let ((l219 (ite l195 l215 l205))) (let ((l220 (and l218 l219))) (let ((l221 (not l196))) (let ((l222 (ite l196 l215 l206))) (let ((l223 (and l221 l222))) (let ((l224 (not l197))) (let ((l225 (ite l197 l215 l207))) (let ((l226 (and l224 l225))) (let ((l227 (not l198))) (let ((l228 (ite l198 l215 l208))) (let ((l229 (and l227 l228))) (let ((l230 (not l209))) (let ((l231 (ite l209 l215 l210))) (let ((l232 (and l230 l231))) (let ((l233 (ite l25 l229 l232))) (let ((l234 (ite l24 l226 l233))) (let ((l235 (ite l23 l223 l234))) (let ((l236 (ite l22 l220 l235))) (let ((l237 (ite l21 l217 l236))) (let ((l238 (ite l36 l237 l232))) (let ((l239 (= |next.ht!0!assimilated| l238))) (let ((l240 (ite l193 0 |state.ht!5!num_entries|))) (let ((l241 (ite l195 0 |state.ht!4!num_entries|))) (let ((l242 (ite l196 0 |state.ht!3!num_entries|))) (let ((l243 (ite l197 0 |state.ht!2!num_entries|))) (let ((l244 (ite l198 0 |state.ht!1!num_entries|))) (let ((l245 (ite l209 0 |state.ht!0!num_entries|))) (let ((l246 (ite l198 l244 l245))) (let ((l247 (ite l197 l243 l246))) (let ((l248 (ite l196 l242 l247))) (let ((l249 (ite l195 l241 l248))) (let ((l250 (ite l193 l240 l249))) (let ((l251 (ite l193 l250 l240))) (let ((l252 (ite l195 l250 l241))) (let ((l253 (ite l196 l250 l242))) (let ((l254 (ite l197 l250 l243))) (let ((l255 (ite l198 l250 l244))) (let ((l256 (ite l209 l250 l245))) (let ((l257 (ite l198 l255 l256))) (let ((l258 (ite l197 l254 l257))) (let ((l259 (ite l196 l253 l258))) (let ((l260 (ite l195 l252 l259))) (let ((l261 (ite l193 l251 l260))) (let ((l262 (ite l193 l261 l251))) (let ((l263 (ite l195 l261 l252))) (let ((l264 (ite l196 l261 l253))) (let ((l265 (ite l197 l261 l254))) (let ((l266 (ite l198 l261 l255))) (let ((l267 (ite l209 l261 l256))) (let ((l268 (ite l25 l266 l267))) (let ((l269 (ite l24 l265 l268))) (let ((l270 (ite l23 l264 l269))) (let ((l271 (ite l22 l263 l270))) (let ((l272 (ite l21 l262 l271))) (let ((l273 (ite l36 l272 l267))) (let ((l274 (= |next.ht!0!num_entries| l273))) (let ((l275 (ite l198 |state.ht!1!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l276 (ite l197 |state.ht!2!num_to_migrate| l275))) (let ((l277 (ite l196 |state.ht!3!num_to_migrate| l276))) (let ((l278 (ite l195 |state.ht!4!num_to_migrate| l277))) (let ((l279 (ite l193 |state.ht!5!num_to_migrate| l278))) (let ((l280 (ite l193 l279 |state.ht!5!num_to_migrate|))) (let ((l281 (ite l193 0 l280))) (let ((l282 (ite l195 l279 |state.ht!4!num_to_migrate|))) (let ((l283 (ite l195 0 l282))) (let ((l284 (ite l196 l279 |state.ht!3!num_to_migrate|))) (let ((l285 (ite l196 0 l284))) (let ((l286 (ite l197 l279 |state.ht!2!num_to_migrate|))) (let ((l287 (ite l197 0 l286))) (let ((l288 (ite l198 l279 |state.ht!1!num_to_migrate|))) (let ((l289 (ite l198 0 l288))) (let ((l290 (ite l209 l279 |state.ht!0!num_to_migrate|))) (let ((l291 (ite l209 0 l290))) (let ((l292 (ite l198 l289 l291))) (let ((l293 (ite l197 l287 l292))) (let ((l294 (ite l196 l285 l293))) (let ((l295 (ite l195 l283 l294))) (let ((l296 (ite l193 l281 l295))) (let ((l297 (ite l209 l296 l291))) (let ((l298 (ite l36 l50 l297))) (let ((l299 (= |next.ht!0!num_to_migrate| l298))) (let ((l300 (ite l25 l237 l229))) (let ((l301 (= |next.ht!1!assimilated| l300))) (let ((l302 (ite l25 l272 l266))) (let ((l303 (= |next.ht!1!num_entries| l302))) (let ((l304 (ite l198 l296 l289))) (let ((l305 (ite l25 l50 l304))) (let ((l306 (= |next.ht!1!num_to_migrate| l305))) (let ((l307 (ite l24 l237 l226))) (let ((l308 (= |next.ht!2!assimilated| l307))) (let ((l309 (ite l24 l272 l265))) (let ((l310 (= |next.ht!2!num_entries| l309))) (let ((l311 (ite l197 l296 l287))) (let ((l312 (ite l24 l50 l311))) (let ((l313 (= |next.ht!2!num_to_migrate| l312))) (let ((l314 (ite l23 l237 l223))) (let ((l315 (= |next.ht!3!assimilated| l314))) (let ((l316 (ite l23 l272 l264))) (let ((l317 (= |next.ht!3!num_entries| l316))) (let ((l318 (ite l196 l296 l285))) (let ((l319 (ite l23 l50 l318))) (let ((l320 (= |next.ht!3!num_to_migrate| l319))) (let ((l321 (ite l22 l237 l220))) (let ((l322 (= |next.ht!4!assimilated| l321))) (let ((l323 (ite l22 l272 l263))) (let ((l324 (= |next.ht!4!num_entries| l323))) (let ((l325 (ite l195 l296 l283))) (let ((l326 (ite l22 l50 l325))) (let ((l327 (= |next.ht!4!num_to_migrate| l326))) (let ((l328 (ite l21 l237 l217))) (let ((l329 (= |next.ht!5!assimilated| l328))) (let ((l330 (ite l21 l272 l262))) (let ((l331 (= |next.ht!5!num_entries| l330))) (let ((l332 (ite l193 l296 l281))) (let ((l333 (ite l21 l50 l332))) (let ((l334 (= |next.ht!5!num_to_migrate| l333))) (let ((l335 (= |next.pc| 3))) (let ((l336 (and l182 l186 l187 l189 l190 l192 l239 l274 l299 l301 l303 l306 l308 l310 l313 l315 l317 l320 l322 l324 l327 l329 l331 l334 l335))) (let ((l337 (and l182 l185 l335 l129 l152 l130 l131))) (let ((l338 (not l187))) (let ((l339 (= |next.pc| 4))) (let ((l340 (and l182 l186 l338 l339 l129 l152 l130 l131))) (let ((l341 (= |state.pc| 3))) (let ((l342 (= |next.pc| 0))) (let ((l343 (and l341 l342 l129 l152 l130 l131))) (let ((l344 (= |state.pc| 4))) (let ((l345 (and l344 l339 l129 l152 l130 l131))) (let ((l346 (or l132 l153 l181 l336 l337 l340 l343 l345))) l346)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
        )
        (invariant next.K next.old next.new next.ht!0!assimilated next.ht!0!num_entries next.ht!0!num_to_migrate next.ht!1!assimilated next.ht!1!num_entries next.ht!1!num_to_migrate next.ht!2!assimilated next.ht!2!num_entries next.ht!2!num_to_migrate next.ht!3!assimilated next.ht!3!num_entries next.ht!3!num_to_migrate next.ht!4!assimilated next.ht!4!num_entries next.ht!4!num_to_migrate next.ht!5!assimilated next.ht!5!num_entries next.ht!5!num_to_migrate next.pc)
    )
  )
)

;; Property
(assert
  (forall ((state.K Real) (state.old Real) (state.new Real) (state.ht!0!assimilated Bool) (state.ht!0!num_entries Real) (state.ht!0!num_to_migrate Real) (state.ht!1!assimilated Bool) (state.ht!1!num_entries Real) (state.ht!1!num_to_migrate Real) (state.ht!2!assimilated Bool) (state.ht!2!num_entries Real) (state.ht!2!num_to_migrate Real) (state.ht!3!assimilated Bool) (state.ht!3!num_entries Real) (state.ht!3!num_to_migrate Real) (state.ht!4!assimilated Bool) (state.ht!4!num_entries Real) (state.ht!4!num_to_migrate Real) (state.ht!5!assimilated Bool) (state.ht!5!num_entries Real) (state.ht!5!num_to_migrate Real) (state.pc Real))
    (=> (invariant state.K state.old state.new state.ht!0!assimilated state.ht!0!num_entries state.ht!0!num_to_migrate state.ht!1!assimilated state.ht!1!num_entries state.ht!1!num_to_migrate state.ht!2!assimilated state.ht!2!num_entries state.ht!2!num_to_migrate state.ht!3!assimilated state.ht!3!num_entries state.ht!3!num_to_migrate state.ht!4!assimilated state.ht!4!num_entries state.ht!4!num_to_migrate state.ht!5!assimilated state.ht!5!num_entries state.ht!5!num_to_migrate state.pc)
        (let ((l0 (= |state.pc| 3))) (let ((l1 (not l0))) (let ((l2 (< 1 |state.old|))) (let ((l3 (not l2))) (let ((l4 (or l3 |state.ht!0!assimilated|))) (let ((l5 (< 2 |state.old|))) (let ((l6 (not l5))) (let ((l7 (or l6 |state.ht!1!assimilated|))) (let ((l8 (< 3 |state.old|))) (let ((l9 (not l8))) (let ((l10 (or l9 |state.ht!2!assimilated|))) (let ((l11 (< 4 |state.old|))) (let ((l12 (not l11))) (let ((l13 (or l12 |state.ht!3!assimilated|))) (let ((l14 (< 5 |state.old|))) (let ((l15 (not l14))) (let ((l16 (or l15 |state.ht!4!assimilated|))) (let ((l17 (< 6 |state.old|))) (let ((l18 (not l17))) (let ((l19 (or l18 |state.ht!5!assimilated|))) (let ((l20 (and l4 l7 l10 l13 l16 l19))) (let ((l21 (or l1 l20))) l21))))))))))))))))))))))
    )
  )
)

;; Check the property
(check-sat)

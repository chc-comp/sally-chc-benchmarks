(set-logic HORN)
(declare-fun invariant (Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Bool Real Real Bool Real Real Bool Real Real) Bool)

;; Initial state
(assert
  (forall ((state.pc!0 Real) (state.pc!1 Real) (state.pc!2 Real) (state.pc!3 Real) (state.pc!4 Real) (state.pc!5 Real) (state.pc!6 Real) (state.K Real) (state.old Real) (state.new Real) (state.pending Real) (state.did_not_pay Real) (state.paid_tax Real) (state.revenue Real) (state.posted Real) (state.ht!0!assimilated Bool) (state.ht!0!num_entries Real) (state.ht!0!num_to_migrate Real) (state.ht!1!assimilated Bool) (state.ht!1!num_entries Real) (state.ht!1!num_to_migrate Real) (state.ht!2!assimilated Bool) (state.ht!2!num_entries Real) (state.ht!2!num_to_migrate Real))
    (=> (let ((l0 (= |state.pc!0| 0))) (let ((l1 (= |state.pc!1| 0))) (let ((l2 (= |state.pc!2| 0))) (let ((l3 (= |state.pc!3| 0))) (let ((l4 (= |state.pc!4| 0))) (let ((l5 (= |state.pc!5| 0))) (let ((l6 (= |state.pc!6| 0))) (let ((l7 (= |state.pending| 0))) (let ((l8 (= |state.did_not_pay| 0))) (let ((l9 (= |state.paid_tax| 0))) (let ((l10 (= |state.posted| 0))) (let ((l11 (= |state.revenue| 0))) (let ((l12 (= |state.K| 32))) (let ((l13 (= |state.ht!0!assimilated| false))) (let ((l14 (= |state.ht!0!num_entries| 0))) (let ((l15 (= |state.ht!0!num_to_migrate| 0))) (let ((l16 (= |state.ht!1!assimilated| false))) (let ((l17 (= |state.ht!1!num_entries| 0))) (let ((l18 (= |state.ht!1!num_to_migrate| 0))) (let ((l19 (= |state.ht!2!assimilated| false))) (let ((l20 (= |state.ht!2!num_entries| 0))) (let ((l21 (= |state.ht!2!num_to_migrate| 0))) (let ((l22 (= |state.old| 1))) (let ((l23 (= |state.new| 1))) (let ((l24 (and l0 l1 l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l19 l20 l21 l22 l23))) (let ((l25 (= |state.pc!0| 1))) (let ((l26 (= |state.pc!0| 2))) (let ((l27 (= |state.pc!0| 3))) (let ((l28 (or l0 l25 l26 l27))) (let ((l29 (= |state.pc!1| 1))) (let ((l30 (= |state.pc!1| 2))) (let ((l31 (= |state.pc!1| 3))) (let ((l32 (or l1 l29 l30 l31))) (let ((l33 (= |state.pc!2| 1))) (let ((l34 (= |state.pc!2| 2))) (let ((l35 (= |state.pc!2| 3))) (let ((l36 (or l2 l33 l34 l35))) (let ((l37 (= |state.pc!3| 1))) (let ((l38 (= |state.pc!3| 2))) (let ((l39 (= |state.pc!3| 3))) (let ((l40 (or l3 l37 l38 l39))) (let ((l41 (= |state.pc!4| 1))) (let ((l42 (= |state.pc!4| 2))) (let ((l43 (= |state.pc!4| 3))) (let ((l44 (or l4 l41 l42 l43))) (let ((l45 (= |state.pc!5| 1))) (let ((l46 (= |state.pc!5| 2))) (let ((l47 (= |state.pc!5| 3))) (let ((l48 (or l5 l45 l46 l47))) (let ((l49 (= |state.pc!6| 1))) (let ((l50 (= |state.pc!6| 2))) (let ((l51 (= |state.pc!6| 3))) (let ((l52 (or l6 l49 l50 l51))) (let ((l53 (= |state.old| 2))) (let ((l54 (= |state.old| 3))) (let ((l55 (or l22 l53 l54))) (let ((l56 (= |state.new| 2))) (let ((l57 (= |state.new| 3))) (let ((l58 (or l23 l56 l57))) (let ((l59 (and l28 l32 l36 l40 l44 l48 l52 l55 l58))) (let ((l60 (and l24 l59))) l60)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
        (invariant state.pc!0 state.pc!1 state.pc!2 state.pc!3 state.pc!4 state.pc!5 state.pc!6 state.K state.old state.new state.pending state.did_not_pay state.paid_tax state.revenue state.posted state.ht!0!assimilated state.ht!0!num_entries state.ht!0!num_to_migrate state.ht!1!assimilated state.ht!1!num_entries state.ht!1!num_to_migrate state.ht!2!assimilated state.ht!2!num_entries state.ht!2!num_to_migrate))
  )
)

;; Transition relation
(assert
  (forall ((state.pc!0 Real) (next.pc!0 Real) (state.pc!1 Real) (next.pc!1 Real) (state.pc!2 Real) (next.pc!2 Real) (state.pc!3 Real) (next.pc!3 Real) (state.pc!4 Real) (next.pc!4 Real) (state.pc!5 Real) (next.pc!5 Real) (state.pc!6 Real) (next.pc!6 Real) (state.K Real) (next.K Real) (state.old Real) (next.old Real) (state.new Real) (next.new Real) (state.pending Real) (next.pending Real) (state.did_not_pay Real) (next.did_not_pay Real) (state.paid_tax Real) (next.paid_tax Real) (state.revenue Real) (next.revenue Real) (state.posted Real) (next.posted Real) (state.ht!0!assimilated Bool) (next.ht!0!assimilated Bool) (state.ht!0!num_entries Real) (next.ht!0!num_entries Real) (state.ht!0!num_to_migrate Real) (next.ht!0!num_to_migrate Real) (state.ht!1!assimilated Bool) (next.ht!1!assimilated Bool) (state.ht!1!num_entries Real) (next.ht!1!num_entries Real) (state.ht!1!num_to_migrate Real) (next.ht!1!num_to_migrate Real) (state.ht!2!assimilated Bool) (next.ht!2!assimilated Bool) (state.ht!2!num_entries Real) (next.ht!2!num_entries Real) (state.ht!2!num_to_migrate Real) (next.ht!2!num_to_migrate Real))
    (=> (and (invariant state.pc!0 state.pc!1 state.pc!2 state.pc!3 state.pc!4 state.pc!5 state.pc!6 state.K state.old state.new state.pending state.did_not_pay state.paid_tax state.revenue state.posted state.ht!0!assimilated state.ht!0!num_entries state.ht!0!num_to_migrate state.ht!1!assimilated state.ht!1!num_entries state.ht!1!num_to_migrate state.ht!2!assimilated state.ht!2!num_entries state.ht!2!num_to_migrate)
             (let ((l0 (= |state.pc!0| 0))) (let ((l1 (< |state.old| |state.new|))) (let ((l2 (= |state.old| 3))) (let ((l3 (= |state.old| 2))) (let ((l4 (ite l3 |state.ht!1!assimilated| |state.ht!0!assimilated|))) (let ((l5 (ite l2 |state.ht!2!assimilated| l4))) (let ((l6 (not l5))) (let ((l7 (= |state.old| 1))) (let ((l8 (ite l3 |state.ht!1!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l9 (ite l2 |state.ht!2!num_to_migrate| l8))) (let ((l10 (<= l9 8))) (let ((l11 (= |state.new| 3))) (let ((l12 (= |state.new| 2))) (let ((l13 (ite l12 |state.ht!1!assimilated| |state.ht!0!assimilated|))) (let ((l14 (ite l11 |state.ht!2!assimilated| l13))) (let ((l15 (ite l11 l14 |state.ht!2!assimilated|))) (let ((l16 (ite l12 l14 |state.ht!1!assimilated|))) (let ((l17 (= |state.new| 1))) (let ((l18 (ite l17 l14 |state.ht!0!assimilated|))) (let ((l19 (ite l3 l16 l18))) (let ((l20 (ite l2 l15 l19))) (let ((l21 (ite l7 l20 l18))) (let ((l22 (ite l7 l10 l21))) (let ((l23 (= |next.ht!0!assimilated| l22))) (let ((l24 (ite l12 |state.ht!1!num_entries| |state.ht!0!num_entries|))) (let ((l25 (ite l11 |state.ht!2!num_entries| l24))) (let ((l26 (< 8 l9))) (let ((l27 (ite l26 8 l9))) (let ((l28 (+ l25 l27))) (let ((l29 (ite l11 l28 |state.ht!2!num_entries|))) (let ((l30 (ite l12 l28 |state.ht!1!num_entries|))) (let ((l31 (ite l17 l28 |state.ht!0!num_entries|))) (let ((l32 (ite l3 l30 l31))) (let ((l33 (ite l2 l29 l32))) (let ((l34 (ite l7 l33 l31))) (let ((l35 (ite l7 l33 l34))) (let ((l36 (= |next.ht!0!num_entries| l35))) (let ((l37 (- l9 l27))) (let ((l38 (ite l12 |state.ht!1!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l39 (ite l11 |state.ht!2!num_to_migrate| l38))) (let ((l40 (ite l17 l39 |state.ht!0!num_to_migrate|))) (let ((l41 (ite l7 l37 l40))) (let ((l42 (ite l7 l37 l41))) (let ((l43 (= |next.ht!0!num_to_migrate| l42))) (let ((l44 (ite l3 l20 l16))) (let ((l45 (ite l3 l10 l44))) (let ((l46 (= |next.ht!1!assimilated| l45))) (let ((l47 (ite l3 l33 l30))) (let ((l48 (ite l3 l33 l47))) (let ((l49 (= |next.ht!1!num_entries| l48))) (let ((l50 (ite l12 l39 |state.ht!1!num_to_migrate|))) (let ((l51 (ite l3 l37 l50))) (let ((l52 (ite l3 l37 l51))) (let ((l53 (= |next.ht!1!num_to_migrate| l52))) (let ((l54 (ite l2 l20 l15))) (let ((l55 (ite l2 l10 l54))) (let ((l56 (= |next.ht!2!assimilated| l55))) (let ((l57 (ite l2 l33 l29))) (let ((l58 (ite l2 l33 l57))) (let ((l59 (= |next.ht!2!num_entries| l58))) (let ((l60 (ite l11 l39 |state.ht!2!num_to_migrate|))) (let ((l61 (ite l2 l37 l60))) (let ((l62 (ite l2 l37 l61))) (let ((l63 (= |next.ht!2!num_to_migrate| l62))) (let ((l64 (and l23 l36 l43 l46 l49 l53 l56 l59 l63))) (let ((l65 (+ |state.pending| 1))) (let ((l66 (= |next.pending| l65))) (let ((l67 (+ |state.paid_tax| 1))) (let ((l68 (= |next.paid_tax| l67))) (let ((l69 (+ |state.revenue| l27))) (let ((l70 (= |next.revenue| l69))) (let ((l71 (= |next.pc!0| 1))) (let ((l72 (= |next.K| |state.K|))) (let ((l73 (= |next.did_not_pay| |state.did_not_pay|))) (let ((l74 (= |next.new| |state.new|))) (let ((l75 (= |next.old| |state.old|))) (let ((l76 (= |next.posted| |state.posted|))) (let ((l77 (and l0 l1 l6 l64 l66 l68 l70 l71 l72 l73 l74 l75 l76))) (let ((l78 (not l1))) (let ((l79 (or l78 l5))) (let ((l80 (= |next.ht!0!assimilated| |state.ht!0!assimilated|))) (let ((l81 (= |next.ht!0!num_entries| |state.ht!0!num_entries|))) (let ((l82 (= |next.ht!0!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l83 (= |next.ht!1!assimilated| |state.ht!1!assimilated|))) (let ((l84 (= |next.ht!1!num_entries| |state.ht!1!num_entries|))) (let ((l85 (= |next.ht!1!num_to_migrate| |state.ht!1!num_to_migrate|))) (let ((l86 (= |next.ht!2!assimilated| |state.ht!2!assimilated|))) (let ((l87 (= |next.ht!2!num_entries| |state.ht!2!num_entries|))) (let ((l88 (= |next.ht!2!num_to_migrate| |state.ht!2!num_to_migrate|))) (let ((l89 (and l80 l81 l82 l83 l84 l85 l86 l87 l88))) (let ((l90 (= |next.paid_tax| |state.paid_tax|))) (let ((l91 (= |next.revenue| |state.revenue|))) (let ((l92 (and l0 l79 l71 l66 l72 l73 l89 l74 l75 l90 l76 l91))) (let ((l93 (= |state.pc!0| 1))) (let ((l94 (< l25 |state.K|))) (let ((l95 (- |state.pending| 1))) (let ((l96 (= |next.pending| l95))) (let ((l97 (+ |state.posted| 1))) (let ((l98 (= |next.posted| l97))) (let ((l99 (= |next.pc!0| 2))) (let ((l100 (= |next.ht!0!assimilated| l18))) (let ((l101 (+ l25 1))) (let ((l102 (ite l17 l101 |state.ht!0!num_entries|))) (let ((l103 (= |next.ht!0!num_entries| l102))) (let ((l104 (= |next.ht!0!num_to_migrate| l40))) (let ((l105 (= |next.ht!1!assimilated| l16))) (let ((l106 (ite l12 l101 |state.ht!1!num_entries|))) (let ((l107 (= |next.ht!1!num_entries| l106))) (let ((l108 (= |next.ht!1!num_to_migrate| l50))) (let ((l109 (= |next.ht!2!assimilated| l15))) (let ((l110 (ite l11 l101 |state.ht!2!num_entries|))) (let ((l111 (= |next.ht!2!num_entries| l110))) (let ((l112 (= |next.ht!2!num_to_migrate| l60))) (let ((l113 (and l100 l103 l104 l105 l107 l108 l109 l111 l112))) (let ((l114 (and l93 l94 l96 l98 l99 l72 l73 l113 l74 l75 l90 l91))) (let ((l115 (not l94))) (let ((l116 (- |state.did_not_pay| 1))) (let ((l117 (= |next.did_not_pay| l116))) (let ((l118 (= |next.pc!0| 0))) (let ((l119 (and l93 l115 l96 l117 l118 l72 l89 l74 l75 l90 l76 l91))) (let ((l120 (= |state.pc!0| 2))) (let ((l121 (/ 3 5))) (let ((l122 (* |state.K| l121))) (let ((l123 (<= l25 l122))) (let ((l124 (not l123))) (let ((l125 (< |state.new| 3))) (let ((l126 (* |state.K| 2))) (let ((l127 (= |next.K| l126))) (let ((l128 (= |next.old| |state.new|))) (let ((l129 (+ |state.new| 1))) (let ((l130 (= |next.new| l129))) (let ((l131 (= l129 3))) (let ((l132 (not l131))) (let ((l133 (= l129 2))) (let ((l134 (ite l133 |state.ht!1!assimilated| |state.ht!0!assimilated|))) (let ((l135 (ite l131 |state.ht!2!assimilated| l134))) (let ((l136 (ite l131 l135 |state.ht!2!assimilated|))) (let ((l137 (ite l133 l135 |state.ht!1!assimilated|))) (let ((l138 (= l129 1))) (let ((l139 (ite l138 l135 |state.ht!0!assimilated|))) (let ((l140 (ite l133 l137 l139))) (let ((l141 (ite l131 l136 l140))) (let ((l142 (ite l131 l141 l136))) (let ((l143 (and l132 l142))) (let ((l144 (not l133))) (let ((l145 (ite l133 l141 l137))) (let ((l146 (and l144 l145))) (let ((l147 (not l138))) (let ((l148 (ite l138 l141 l139))) (let ((l149 (and l147 l148))) (let ((l150 (ite l12 l146 l149))) (let ((l151 (ite l11 l143 l150))) (let ((l152 (ite l17 l151 l149))) (let ((l153 (= |next.ht!0!assimilated| l152))) (let ((l154 (ite l131 0 |state.ht!2!num_entries|))) (let ((l155 (ite l133 0 |state.ht!1!num_entries|))) (let ((l156 (ite l138 0 |state.ht!0!num_entries|))) (let ((l157 (ite l133 l155 l156))) (let ((l158 (ite l131 l154 l157))) (let ((l159 (ite l131 l158 l154))) (let ((l160 (ite l133 l158 l155))) (let ((l161 (ite l138 l158 l156))) (let ((l162 (ite l133 l160 l161))) (let ((l163 (ite l131 l159 l162))) (let ((l164 (ite l131 l163 l159))) (let ((l165 (ite l133 l163 l160))) (let ((l166 (ite l138 l163 l161))) (let ((l167 (ite l12 l165 l166))) (let ((l168 (ite l11 l164 l167))) (let ((l169 (ite l17 l168 l166))) (let ((l170 (= |next.ht!0!num_entries| l169))) (let ((l171 (ite l133 |state.ht!1!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l172 (ite l131 |state.ht!2!num_to_migrate| l171))) (let ((l173 (ite l131 l172 |state.ht!2!num_to_migrate|))) (let ((l174 (ite l131 0 l173))) (let ((l175 (ite l133 l172 |state.ht!1!num_to_migrate|))) (let ((l176 (ite l133 0 l175))) (let ((l177 (ite l138 l172 |state.ht!0!num_to_migrate|))) (let ((l178 (ite l138 0 l177))) (let ((l179 (ite l133 l176 l178))) (let ((l180 (ite l131 l174 l179))) (let ((l181 (ite l138 l180 l178))) (let ((l182 (ite l17 l25 l181))) (let ((l183 (= |next.ht!0!num_to_migrate| l182))) (let ((l184 (ite l12 l151 l146))) (let ((l185 (= |next.ht!1!assimilated| l184))) (let ((l186 (ite l12 l168 l165))) (let ((l187 (= |next.ht!1!num_entries| l186))) (let ((l188 (ite l133 l180 l176))) (let ((l189 (ite l12 l25 l188))) (let ((l190 (= |next.ht!1!num_to_migrate| l189))) (let ((l191 (ite l11 l151 l143))) (let ((l192 (= |next.ht!2!assimilated| l191))) (let ((l193 (ite l11 l168 l164))) (let ((l194 (= |next.ht!2!num_entries| l193))) (let ((l195 (ite l131 l180 l174))) (let ((l196 (ite l11 l25 l195))) (let ((l197 (= |next.ht!2!num_to_migrate| l196))) (let ((l198 (and l153 l170 l183 l185 l187 l190 l192 l194 l197))) (let ((l199 (= |next.did_not_pay| |state.pending|))) (let ((l200 (= |next.paid_tax| 0))) (let ((l201 (= |next.revenue| 0))) (let ((l202 (= |next.posted| 0))) (let ((l203 (= |next.pending| |state.pending|))) (let ((l204 (and l120 l124 l125 l127 l128 l130 l198 l199 l200 l201 l202 l118 l203))) (let ((l205 (and l120 l123 l118 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l206 (not l125))) (let ((l207 (= |next.pc!0| 3))) (let ((l208 (and l120 l124 l206 l207 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l209 (= |state.pc!0| 3))) (let ((l210 (and l209 l207 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l211 (or l77 l92 l114 l119 l204 l205 l208 l210))) (let ((l212 (= |next.pc!1| |state.pc!1|))) (let ((l213 (= |next.pc!2| |state.pc!2|))) (let ((l214 (= |next.pc!3| |state.pc!3|))) (let ((l215 (= |next.pc!4| |state.pc!4|))) (let ((l216 (= |next.pc!5| |state.pc!5|))) (let ((l217 (= |next.pc!6| |state.pc!6|))) (let ((l218 (and l211 l212 l213 l214 l215 l216 l217))) (let ((l219 (= |state.pc!1| 0))) (let ((l220 (= |next.pc!1| 1))) (let ((l221 (and l219 l1 l6 l64 l66 l68 l70 l220 l72 l73 l74 l75 l76))) (let ((l222 (and l219 l79 l220 l66 l72 l73 l89 l74 l75 l90 l76 l91))) (let ((l223 (= |state.pc!1| 1))) (let ((l224 (= |next.pc!1| 2))) (let ((l225 (and l223 l94 l96 l98 l224 l72 l73 l113 l74 l75 l90 l91))) (let ((l226 (= |next.pc!1| 0))) (let ((l227 (and l223 l115 l96 l117 l226 l72 l89 l74 l75 l90 l76 l91))) (let ((l228 (= |state.pc!1| 2))) (let ((l229 (and l228 l124 l125 l127 l128 l130 l198 l199 l200 l201 l202 l226 l203))) (let ((l230 (and l228 l123 l226 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l231 (= |next.pc!1| 3))) (let ((l232 (and l228 l124 l206 l231 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l233 (= |state.pc!1| 3))) (let ((l234 (and l233 l231 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l235 (or l221 l222 l225 l227 l229 l230 l232 l234))) (let ((l236 (= |next.pc!0| |state.pc!0|))) (let ((l237 (and l235 l236 l213 l214 l215 l216 l217))) (let ((l238 (= |state.pc!2| 0))) (let ((l239 (= |next.pc!2| 1))) (let ((l240 (and l238 l1 l6 l64 l66 l68 l70 l239 l72 l73 l74 l75 l76))) (let ((l241 (and l238 l79 l239 l66 l72 l73 l89 l74 l75 l90 l76 l91))) (let ((l242 (= |state.pc!2| 1))) (let ((l243 (= |next.pc!2| 2))) (let ((l244 (and l242 l94 l96 l98 l243 l72 l73 l113 l74 l75 l90 l91))) (let ((l245 (= |next.pc!2| 0))) (let ((l246 (and l242 l115 l96 l117 l245 l72 l89 l74 l75 l90 l76 l91))) (let ((l247 (= |state.pc!2| 2))) (let ((l248 (and l247 l124 l125 l127 l128 l130 l198 l199 l200 l201 l202 l245 l203))) (let ((l249 (and l247 l123 l245 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l250 (= |next.pc!2| 3))) (let ((l251 (and l247 l124 l206 l250 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l252 (= |state.pc!2| 3))) (let ((l253 (and l252 l250 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l254 (or l240 l241 l244 l246 l248 l249 l251 l253))) (let ((l255 (and l254 l236 l212 l214 l215 l216 l217))) (let ((l256 (= |state.pc!3| 0))) (let ((l257 (= |next.pc!3| 1))) (let ((l258 (and l256 l1 l6 l64 l66 l68 l70 l257 l72 l73 l74 l75 l76))) (let ((l259 (and l256 l79 l257 l66 l72 l73 l89 l74 l75 l90 l76 l91))) (let ((l260 (= |state.pc!3| 1))) (let ((l261 (= |next.pc!3| 2))) (let ((l262 (and l260 l94 l96 l98 l261 l72 l73 l113 l74 l75 l90 l91))) (let ((l263 (= |next.pc!3| 0))) (let ((l264 (and l260 l115 l96 l117 l263 l72 l89 l74 l75 l90 l76 l91))) (let ((l265 (= |state.pc!3| 2))) (let ((l266 (and l265 l124 l125 l127 l128 l130 l198 l199 l200 l201 l202 l263 l203))) (let ((l267 (and l265 l123 l263 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l268 (= |next.pc!3| 3))) (let ((l269 (and l265 l124 l206 l268 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l270 (= |state.pc!3| 3))) (let ((l271 (and l270 l268 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l272 (or l258 l259 l262 l264 l266 l267 l269 l271))) (let ((l273 (and l272 l236 l212 l213 l215 l216 l217))) (let ((l274 (= |state.pc!4| 0))) (let ((l275 (= |next.pc!4| 1))) (let ((l276 (and l274 l1 l6 l64 l66 l68 l70 l275 l72 l73 l74 l75 l76))) (let ((l277 (and l274 l79 l275 l66 l72 l73 l89 l74 l75 l90 l76 l91))) (let ((l278 (= |state.pc!4| 1))) (let ((l279 (= |next.pc!4| 2))) (let ((l280 (and l278 l94 l96 l98 l279 l72 l73 l113 l74 l75 l90 l91))) (let ((l281 (= |next.pc!4| 0))) (let ((l282 (and l278 l115 l96 l117 l281 l72 l89 l74 l75 l90 l76 l91))) (let ((l283 (= |state.pc!4| 2))) (let ((l284 (and l283 l124 l125 l127 l128 l130 l198 l199 l200 l201 l202 l281 l203))) (let ((l285 (and l283 l123 l281 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l286 (= |next.pc!4| 3))) (let ((l287 (and l283 l124 l206 l286 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l288 (= |state.pc!4| 3))) (let ((l289 (and l288 l286 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l290 (or l276 l277 l280 l282 l284 l285 l287 l289))) (let ((l291 (and l290 l236 l212 l213 l214 l216 l217))) (let ((l292 (= |state.pc!5| 0))) (let ((l293 (= |next.pc!5| 1))) (let ((l294 (and l292 l1 l6 l64 l66 l68 l70 l293 l72 l73 l74 l75 l76))) (let ((l295 (and l292 l79 l293 l66 l72 l73 l89 l74 l75 l90 l76 l91))) (let ((l296 (= |state.pc!5| 1))) (let ((l297 (= |next.pc!5| 2))) (let ((l298 (and l296 l94 l96 l98 l297 l72 l73 l113 l74 l75 l90 l91))) (let ((l299 (= |next.pc!5| 0))) (let ((l300 (and l296 l115 l96 l117 l299 l72 l89 l74 l75 l90 l76 l91))) (let ((l301 (= |state.pc!5| 2))) (let ((l302 (and l301 l124 l125 l127 l128 l130 l198 l199 l200 l201 l202 l299 l203))) (let ((l303 (and l301 l123 l299 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l304 (= |next.pc!5| 3))) (let ((l305 (and l301 l124 l206 l304 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l306 (= |state.pc!5| 3))) (let ((l307 (and l306 l304 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l308 (or l294 l295 l298 l300 l302 l303 l305 l307))) (let ((l309 (and l308 l236 l212 l213 l214 l215 l217))) (let ((l310 (= |state.pc!6| 0))) (let ((l311 (= |next.pc!6| 1))) (let ((l312 (and l310 l1 l6 l64 l66 l68 l70 l311 l72 l73 l74 l75 l76))) (let ((l313 (and l310 l79 l311 l66 l72 l73 l89 l74 l75 l90 l76 l91))) (let ((l314 (= |state.pc!6| 1))) (let ((l315 (= |next.pc!6| 2))) (let ((l316 (and l314 l94 l96 l98 l315 l72 l73 l113 l74 l75 l90 l91))) (let ((l317 (= |next.pc!6| 0))) (let ((l318 (and l314 l115 l96 l117 l317 l72 l89 l74 l75 l90 l76 l91))) (let ((l319 (= |state.pc!6| 2))) (let ((l320 (and l319 l124 l125 l127 l128 l130 l198 l199 l200 l201 l202 l317 l203))) (let ((l321 (and l319 l123 l317 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l322 (= |next.pc!6| 3))) (let ((l323 (and l319 l124 l206 l322 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l324 (= |state.pc!6| 3))) (let ((l325 (and l324 l322 l72 l73 l89 l74 l75 l90 l203 l76 l91))) (let ((l326 (or l312 l313 l316 l318 l320 l321 l323 l325))) (let ((l327 (and l326 l236 l212 l213 l214 l215 l216))) (let ((l328 (or l218 l237 l255 l273 l291 l309 l327))) (let ((l329 (or l0 l93 l120 l209))) (let ((l330 (or l219 l223 l228 l233))) (let ((l331 (or l238 l242 l247 l252))) (let ((l332 (or l256 l260 l265 l270))) (let ((l333 (or l274 l278 l283 l288))) (let ((l334 (or l292 l296 l301 l306))) (let ((l335 (or l310 l314 l319 l324))) (let ((l336 (or l7 l3 l2))) (let ((l337 (or l17 l12 l11))) (let ((l338 (and l329 l330 l331 l332 l333 l334 l335 l336 l337))) (let ((l339 (or l118 l71 l99 l207))) (let ((l340 (or l226 l220 l224 l231))) (let ((l341 (or l245 l239 l243 l250))) (let ((l342 (or l263 l257 l261 l268))) (let ((l343 (or l281 l275 l279 l286))) (let ((l344 (or l299 l293 l297 l304))) (let ((l345 (or l317 l311 l315 l322))) (let ((l346 (= |next.old| 1))) (let ((l347 (= |next.old| 2))) (let ((l348 (= |next.old| 3))) (let ((l349 (or l346 l347 l348))) (let ((l350 (= |next.new| 1))) (let ((l351 (= |next.new| 2))) (let ((l352 (= |next.new| 3))) (let ((l353 (or l350 l351 l352))) (let ((l354 (and l339 l340 l341 l342 l343 l344 l345 l349 l353))) (let ((l355 (and l328 l338 l354))) l355))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
        )
        (invariant next.pc!0 next.pc!1 next.pc!2 next.pc!3 next.pc!4 next.pc!5 next.pc!6 next.K next.old next.new next.pending next.did_not_pay next.paid_tax next.revenue next.posted next.ht!0!assimilated next.ht!0!num_entries next.ht!0!num_to_migrate next.ht!1!assimilated next.ht!1!num_entries next.ht!1!num_to_migrate next.ht!2!assimilated next.ht!2!num_entries next.ht!2!num_to_migrate)
    )
  )
)

;; Property
(assert
  (forall ((state.pc!0 Real) (state.pc!1 Real) (state.pc!2 Real) (state.pc!3 Real) (state.pc!4 Real) (state.pc!5 Real) (state.pc!6 Real) (state.K Real) (state.old Real) (state.new Real) (state.pending Real) (state.did_not_pay Real) (state.paid_tax Real) (state.revenue Real) (state.posted Real) (state.ht!0!assimilated Bool) (state.ht!0!num_entries Real) (state.ht!0!num_to_migrate Real) (state.ht!1!assimilated Bool) (state.ht!1!num_entries Real) (state.ht!1!num_to_migrate Real) (state.ht!2!assimilated Bool) (state.ht!2!num_entries Real) (state.ht!2!num_to_migrate Real))
    (=> (invariant state.pc!0 state.pc!1 state.pc!2 state.pc!3 state.pc!4 state.pc!5 state.pc!6 state.K state.old state.new state.pending state.did_not_pay state.paid_tax state.revenue state.posted state.ht!0!assimilated state.ht!0!num_entries state.ht!0!num_to_migrate state.ht!1!assimilated state.ht!1!num_entries state.ht!1!num_to_migrate state.ht!2!assimilated state.ht!2!num_entries state.ht!2!num_to_migrate)
        (let ((l0 (< 1 |state.old|))) (let ((l1 (not l0))) (let ((l2 (or l1 |state.ht!0!assimilated|))) (let ((l3 (< 2 |state.old|))) (let ((l4 (not l3))) (let ((l5 (or l4 |state.ht!1!assimilated|))) (let ((l6 (< 3 |state.old|))) (let ((l7 (not l6))) (let ((l8 (or l7 |state.ht!2!assimilated|))) (let ((l9 (and l2 l5 l8))) l9))))))))))
    )
  )
)

;; Check the property
(check-sat)

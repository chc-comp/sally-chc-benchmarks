(set-logic HORN)
(declare-fun invariant (Real Real Real Bool Real Real Bool Real Real Bool Real Real Bool Real Real Bool Real Real Bool Real Real Real Real) Bool)

;; Initial state
(assert
  (forall ((state.pc!0 Real) (state.pc!1 Real) (state.K Real) (state.ht!0!assimilated Bool) (state.ht!0!num_entries Real) (state.ht!0!num_to_migrate Real) (state.ht!1!assimilated Bool) (state.ht!1!num_entries Real) (state.ht!1!num_to_migrate Real) (state.ht!2!assimilated Bool) (state.ht!2!num_entries Real) (state.ht!2!num_to_migrate Real) (state.ht!3!assimilated Bool) (state.ht!3!num_entries Real) (state.ht!3!num_to_migrate Real) (state.ht!4!assimilated Bool) (state.ht!4!num_entries Real) (state.ht!4!num_to_migrate Real) (state.ht!5!assimilated Bool) (state.ht!5!num_entries Real) (state.ht!5!num_to_migrate Real) (state.new Real) (state.old Real))
    (=> (let ((l0 (= |state.pc!0| 0))) (let ((l1 (= |state.K| 32))) (let ((l2 (= |state.ht!0!assimilated| false))) (let ((l3 (= |state.ht!0!num_entries| 0))) (let ((l4 (= |state.ht!0!num_to_migrate| 0))) (let ((l5 (= |state.ht!1!assimilated| false))) (let ((l6 (= |state.ht!1!num_entries| 0))) (let ((l7 (= |state.ht!1!num_to_migrate| 0))) (let ((l8 (= |state.ht!2!assimilated| false))) (let ((l9 (= |state.ht!2!num_entries| 0))) (let ((l10 (= |state.ht!2!num_to_migrate| 0))) (let ((l11 (= |state.ht!3!assimilated| false))) (let ((l12 (= |state.ht!3!num_entries| 0))) (let ((l13 (= |state.ht!3!num_to_migrate| 0))) (let ((l14 (= |state.ht!4!assimilated| false))) (let ((l15 (= |state.ht!4!num_entries| 0))) (let ((l16 (= |state.ht!4!num_to_migrate| 0))) (let ((l17 (= |state.ht!5!assimilated| false))) (let ((l18 (= |state.ht!5!num_entries| 0))) (let ((l19 (= |state.ht!5!num_to_migrate| 0))) (let ((l20 (= |state.old| 1))) (let ((l21 (= |state.new| 1))) (let ((l22 (= |state.pc!1| 0))) (let ((l23 (and l0 l1 l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l19 l20 l21 l22))) l23))))))))))))))))))))))))
        (invariant state.pc!0 state.pc!1 state.K state.ht!0!assimilated state.ht!0!num_entries state.ht!0!num_to_migrate state.ht!1!assimilated state.ht!1!num_entries state.ht!1!num_to_migrate state.ht!2!assimilated state.ht!2!num_entries state.ht!2!num_to_migrate state.ht!3!assimilated state.ht!3!num_entries state.ht!3!num_to_migrate state.ht!4!assimilated state.ht!4!num_entries state.ht!4!num_to_migrate state.ht!5!assimilated state.ht!5!num_entries state.ht!5!num_to_migrate state.new state.old))
  )
)

;; Transition relation
(assert
  (forall ((state.pc!0 Real) (next.pc!0 Real) (state.pc!1 Real) (next.pc!1 Real) (state.K Real) (next.K Real) (state.ht!0!assimilated Bool) (next.ht!0!assimilated Bool) (state.ht!0!num_entries Real) (next.ht!0!num_entries Real) (state.ht!0!num_to_migrate Real) (next.ht!0!num_to_migrate Real) (state.ht!1!assimilated Bool) (next.ht!1!assimilated Bool) (state.ht!1!num_entries Real) (next.ht!1!num_entries Real) (state.ht!1!num_to_migrate Real) (next.ht!1!num_to_migrate Real) (state.ht!2!assimilated Bool) (next.ht!2!assimilated Bool) (state.ht!2!num_entries Real) (next.ht!2!num_entries Real) (state.ht!2!num_to_migrate Real) (next.ht!2!num_to_migrate Real) (state.ht!3!assimilated Bool) (next.ht!3!assimilated Bool) (state.ht!3!num_entries Real) (next.ht!3!num_entries Real) (state.ht!3!num_to_migrate Real) (next.ht!3!num_to_migrate Real) (state.ht!4!assimilated Bool) (next.ht!4!assimilated Bool) (state.ht!4!num_entries Real) (next.ht!4!num_entries Real) (state.ht!4!num_to_migrate Real) (next.ht!4!num_to_migrate Real) (state.ht!5!assimilated Bool) (next.ht!5!assimilated Bool) (state.ht!5!num_entries Real) (next.ht!5!num_entries Real) (state.ht!5!num_to_migrate Real) (next.ht!5!num_to_migrate Real) (state.new Real) (next.new Real) (state.old Real) (next.old Real))
    (=> (and (invariant state.pc!0 state.pc!1 state.K state.ht!0!assimilated state.ht!0!num_entries state.ht!0!num_to_migrate state.ht!1!assimilated state.ht!1!num_entries state.ht!1!num_to_migrate state.ht!2!assimilated state.ht!2!num_entries state.ht!2!num_to_migrate state.ht!3!assimilated state.ht!3!num_entries state.ht!3!num_to_migrate state.ht!4!assimilated state.ht!4!num_entries state.ht!4!num_to_migrate state.ht!5!assimilated state.ht!5!num_entries state.ht!5!num_to_migrate state.new state.old)
             (let ((l0 (= |state.pc!0| 0))) (let ((l1 (= |state.old| |state.new|))) (let ((l2 (not l1))) (let ((l3 (= |state.old| 6))) (let ((l4 (= |state.old| 5))) (let ((l5 (= |state.old| 4))) (let ((l6 (= |state.old| 3))) (let ((l7 (= |state.old| 2))) (let ((l8 (ite l7 |state.ht!1!assimilated| |state.ht!0!assimilated|))) (let ((l9 (ite l6 |state.ht!2!assimilated| l8))) (let ((l10 (ite l5 |state.ht!3!assimilated| l9))) (let ((l11 (ite l4 |state.ht!4!assimilated| l10))) (let ((l12 (ite l3 |state.ht!5!assimilated| l11))) (let ((l13 (not l12))) (let ((l14 (= |state.old| 1))) (let ((l15 (ite l7 |state.ht!1!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l16 (ite l6 |state.ht!2!num_to_migrate| l15))) (let ((l17 (ite l5 |state.ht!3!num_to_migrate| l16))) (let ((l18 (ite l4 |state.ht!4!num_to_migrate| l17))) (let ((l19 (ite l3 |state.ht!5!num_to_migrate| l18))) (let ((l20 (<= l19 8))) (let ((l21 (= |state.new| 6))) (let ((l22 (= |state.new| 5))) (let ((l23 (= |state.new| 4))) (let ((l24 (= |state.new| 3))) (let ((l25 (= |state.new| 2))) (let ((l26 (ite l25 |state.ht!1!assimilated| |state.ht!0!assimilated|))) (let ((l27 (ite l24 |state.ht!2!assimilated| l26))) (let ((l28 (ite l23 |state.ht!3!assimilated| l27))) (let ((l29 (ite l22 |state.ht!4!assimilated| l28))) (let ((l30 (ite l21 |state.ht!5!assimilated| l29))) (let ((l31 (ite l21 l30 |state.ht!5!assimilated|))) (let ((l32 (ite l22 l30 |state.ht!4!assimilated|))) (let ((l33 (ite l23 l30 |state.ht!3!assimilated|))) (let ((l34 (ite l24 l30 |state.ht!2!assimilated|))) (let ((l35 (ite l25 l30 |state.ht!1!assimilated|))) (let ((l36 (= |state.new| 1))) (let ((l37 (ite l36 l30 |state.ht!0!assimilated|))) (let ((l38 (ite l7 l35 l37))) (let ((l39 (ite l6 l34 l38))) (let ((l40 (ite l5 l33 l39))) (let ((l41 (ite l4 l32 l40))) (let ((l42 (ite l3 l31 l41))) (let ((l43 (ite l14 l42 l37))) (let ((l44 (ite l14 l20 l43))) (let ((l45 (= |next.ht!0!assimilated| l44))) (let ((l46 (ite l25 |state.ht!1!num_entries| |state.ht!0!num_entries|))) (let ((l47 (ite l24 |state.ht!2!num_entries| l46))) (let ((l48 (ite l23 |state.ht!3!num_entries| l47))) (let ((l49 (ite l22 |state.ht!4!num_entries| l48))) (let ((l50 (ite l21 |state.ht!5!num_entries| l49))) (let ((l51 (< 8 l19))) (let ((l52 (ite l51 8 l19))) (let ((l53 (+ l50 l52))) (let ((l54 (ite l21 l53 |state.ht!5!num_entries|))) (let ((l55 (ite l22 l53 |state.ht!4!num_entries|))) (let ((l56 (ite l23 l53 |state.ht!3!num_entries|))) (let ((l57 (ite l24 l53 |state.ht!2!num_entries|))) (let ((l58 (ite l25 l53 |state.ht!1!num_entries|))) (let ((l59 (ite l36 l53 |state.ht!0!num_entries|))) (let ((l60 (ite l7 l58 l59))) (let ((l61 (ite l6 l57 l60))) (let ((l62 (ite l5 l56 l61))) (let ((l63 (ite l4 l55 l62))) (let ((l64 (ite l3 l54 l63))) (let ((l65 (ite l14 l64 l59))) (let ((l66 (ite l14 l64 l65))) (let ((l67 (= |next.ht!0!num_entries| l66))) (let ((l68 (- l19 l52))) (let ((l69 (ite l25 |state.ht!1!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l70 (ite l24 |state.ht!2!num_to_migrate| l69))) (let ((l71 (ite l23 |state.ht!3!num_to_migrate| l70))) (let ((l72 (ite l22 |state.ht!4!num_to_migrate| l71))) (let ((l73 (ite l21 |state.ht!5!num_to_migrate| l72))) (let ((l74 (ite l36 l73 |state.ht!0!num_to_migrate|))) (let ((l75 (ite l14 l68 l74))) (let ((l76 (ite l14 l68 l75))) (let ((l77 (= |next.ht!0!num_to_migrate| l76))) (let ((l78 (ite l7 l42 l35))) (let ((l79 (ite l7 l20 l78))) (let ((l80 (= |next.ht!1!assimilated| l79))) (let ((l81 (ite l7 l64 l58))) (let ((l82 (ite l7 l64 l81))) (let ((l83 (= |next.ht!1!num_entries| l82))) (let ((l84 (ite l25 l73 |state.ht!1!num_to_migrate|))) (let ((l85 (ite l7 l68 l84))) (let ((l86 (ite l7 l68 l85))) (let ((l87 (= |next.ht!1!num_to_migrate| l86))) (let ((l88 (ite l6 l42 l34))) (let ((l89 (ite l6 l20 l88))) (let ((l90 (= |next.ht!2!assimilated| l89))) (let ((l91 (ite l6 l64 l57))) (let ((l92 (ite l6 l64 l91))) (let ((l93 (= |next.ht!2!num_entries| l92))) (let ((l94 (ite l24 l73 |state.ht!2!num_to_migrate|))) (let ((l95 (ite l6 l68 l94))) (let ((l96 (ite l6 l68 l95))) (let ((l97 (= |next.ht!2!num_to_migrate| l96))) (let ((l98 (ite l5 l42 l33))) (let ((l99 (ite l5 l20 l98))) (let ((l100 (= |next.ht!3!assimilated| l99))) (let ((l101 (ite l5 l64 l56))) (let ((l102 (ite l5 l64 l101))) (let ((l103 (= |next.ht!3!num_entries| l102))) (let ((l104 (ite l23 l73 |state.ht!3!num_to_migrate|))) (let ((l105 (ite l5 l68 l104))) (let ((l106 (ite l5 l68 l105))) (let ((l107 (= |next.ht!3!num_to_migrate| l106))) (let ((l108 (ite l4 l42 l32))) (let ((l109 (ite l4 l20 l108))) (let ((l110 (= |next.ht!4!assimilated| l109))) (let ((l111 (ite l4 l64 l55))) (let ((l112 (ite l4 l64 l111))) (let ((l113 (= |next.ht!4!num_entries| l112))) (let ((l114 (ite l22 l73 |state.ht!4!num_to_migrate|))) (let ((l115 (ite l4 l68 l114))) (let ((l116 (ite l4 l68 l115))) (let ((l117 (= |next.ht!4!num_to_migrate| l116))) (let ((l118 (ite l3 l42 l31))) (let ((l119 (ite l3 l20 l118))) (let ((l120 (= |next.ht!5!assimilated| l119))) (let ((l121 (ite l3 l64 l54))) (let ((l122 (ite l3 l64 l121))) (let ((l123 (= |next.ht!5!num_entries| l122))) (let ((l124 (ite l21 l73 |state.ht!5!num_to_migrate|))) (let ((l125 (ite l3 l68 l124))) (let ((l126 (ite l3 l68 l125))) (let ((l127 (= |next.ht!5!num_to_migrate| l126))) (let ((l128 (= |next.pc!0| 1))) (let ((l129 (= |next.K| |state.K|))) (let ((l130 (= |next.new| |state.new|))) (let ((l131 (= |next.old| |state.old|))) (let ((l132 (and l0 l2 l13 l45 l67 l77 l80 l83 l87 l90 l93 l97 l100 l103 l107 l110 l113 l117 l120 l123 l127 l128 l129 l130 l131))) (let ((l133 (or l1 l12))) (let ((l134 (= |next.ht!0!assimilated| |state.ht!0!assimilated|))) (let ((l135 (= |next.ht!0!num_entries| |state.ht!0!num_entries|))) (let ((l136 (= |next.ht!0!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l137 (= |next.ht!1!assimilated| |state.ht!1!assimilated|))) (let ((l138 (= |next.ht!1!num_entries| |state.ht!1!num_entries|))) (let ((l139 (= |next.ht!1!num_to_migrate| |state.ht!1!num_to_migrate|))) (let ((l140 (= |next.ht!2!assimilated| |state.ht!2!assimilated|))) (let ((l141 (= |next.ht!2!num_entries| |state.ht!2!num_entries|))) (let ((l142 (= |next.ht!2!num_to_migrate| |state.ht!2!num_to_migrate|))) (let ((l143 (= |next.ht!3!assimilated| |state.ht!3!assimilated|))) (let ((l144 (= |next.ht!3!num_entries| |state.ht!3!num_entries|))) (let ((l145 (= |next.ht!3!num_to_migrate| |state.ht!3!num_to_migrate|))) (let ((l146 (= |next.ht!4!assimilated| |state.ht!4!assimilated|))) (let ((l147 (= |next.ht!4!num_entries| |state.ht!4!num_entries|))) (let ((l148 (= |next.ht!4!num_to_migrate| |state.ht!4!num_to_migrate|))) (let ((l149 (= |next.ht!5!assimilated| |state.ht!5!assimilated|))) (let ((l150 (= |next.ht!5!num_entries| |state.ht!5!num_entries|))) (let ((l151 (= |next.ht!5!num_to_migrate| |state.ht!5!num_to_migrate|))) (let ((l152 (and l134 l135 l136 l137 l138 l139 l140 l141 l142 l143 l144 l145 l146 l147 l148 l149 l150 l151))) (let ((l153 (and l0 l133 l128 l129 l152 l130 l131))) (let ((l154 (= |state.pc!0| 1))) (let ((l155 (= |next.pc!0| 2))) (let ((l156 (= |next.ht!0!assimilated| l37))) (let ((l157 (+ l50 1))) (let ((l158 (ite l36 l157 |state.ht!0!num_entries|))) (let ((l159 (= |next.ht!0!num_entries| l158))) (let ((l160 (= |next.ht!0!num_to_migrate| l74))) (let ((l161 (= |next.ht!1!assimilated| l35))) (let ((l162 (ite l25 l157 |state.ht!1!num_entries|))) (let ((l163 (= |next.ht!1!num_entries| l162))) (let ((l164 (= |next.ht!1!num_to_migrate| l84))) (let ((l165 (= |next.ht!2!assimilated| l34))) (let ((l166 (ite l24 l157 |state.ht!2!num_entries|))) (let ((l167 (= |next.ht!2!num_entries| l166))) (let ((l168 (= |next.ht!2!num_to_migrate| l94))) (let ((l169 (= |next.ht!3!assimilated| l33))) (let ((l170 (ite l23 l157 |state.ht!3!num_entries|))) (let ((l171 (= |next.ht!3!num_entries| l170))) (let ((l172 (= |next.ht!3!num_to_migrate| l104))) (let ((l173 (= |next.ht!4!assimilated| l32))) (let ((l174 (ite l22 l157 |state.ht!4!num_entries|))) (let ((l175 (= |next.ht!4!num_entries| l174))) (let ((l176 (= |next.ht!4!num_to_migrate| l114))) (let ((l177 (= |next.ht!5!assimilated| l31))) (let ((l178 (ite l21 l157 |state.ht!5!num_entries|))) (let ((l179 (= |next.ht!5!num_entries| l178))) (let ((l180 (= |next.ht!5!num_to_migrate| l124))) (let ((l181 (and l156 l159 l160 l161 l163 l164 l165 l167 l168 l169 l171 l172 l173 l175 l176 l177 l179 l180))) (let ((l182 (and l154 l155 l129 l181 l130 l131))) (let ((l183 (= |state.pc!0| 2))) (let ((l184 (/ 3 5))) (let ((l185 (* |state.K| l184))) (let ((l186 (<= l50 l185))) (let ((l187 (not l186))) (let ((l188 (< |state.new| 6))) (let ((l189 (* |state.K| 2))) (let ((l190 (= |next.K| l189))) (let ((l191 (= |next.old| |state.new|))) (let ((l192 (+ |state.new| 1))) (let ((l193 (= |next.new| l192))) (let ((l194 (= l192 6))) (let ((l195 (not l194))) (let ((l196 (= l192 5))) (let ((l197 (= l192 4))) (let ((l198 (= l192 3))) (let ((l199 (= l192 2))) (let ((l200 (ite l199 |state.ht!1!assimilated| |state.ht!0!assimilated|))) (let ((l201 (ite l198 |state.ht!2!assimilated| l200))) (let ((l202 (ite l197 |state.ht!3!assimilated| l201))) (let ((l203 (ite l196 |state.ht!4!assimilated| l202))) (let ((l204 (ite l194 |state.ht!5!assimilated| l203))) (let ((l205 (ite l194 l204 |state.ht!5!assimilated|))) (let ((l206 (ite l196 l204 |state.ht!4!assimilated|))) (let ((l207 (ite l197 l204 |state.ht!3!assimilated|))) (let ((l208 (ite l198 l204 |state.ht!2!assimilated|))) (let ((l209 (ite l199 l204 |state.ht!1!assimilated|))) (let ((l210 (= l192 1))) (let ((l211 (ite l210 l204 |state.ht!0!assimilated|))) (let ((l212 (ite l199 l209 l211))) (let ((l213 (ite l198 l208 l212))) (let ((l214 (ite l197 l207 l213))) (let ((l215 (ite l196 l206 l214))) (let ((l216 (ite l194 l205 l215))) (let ((l217 (ite l194 l216 l205))) (let ((l218 (and l195 l217))) (let ((l219 (not l196))) (let ((l220 (ite l196 l216 l206))) (let ((l221 (and l219 l220))) (let ((l222 (not l197))) (let ((l223 (ite l197 l216 l207))) (let ((l224 (and l222 l223))) (let ((l225 (not l198))) (let ((l226 (ite l198 l216 l208))) (let ((l227 (and l225 l226))) (let ((l228 (not l199))) (let ((l229 (ite l199 l216 l209))) (let ((l230 (and l228 l229))) (let ((l231 (not l210))) (let ((l232 (ite l210 l216 l211))) (let ((l233 (and l231 l232))) (let ((l234 (ite l25 l230 l233))) (let ((l235 (ite l24 l227 l234))) (let ((l236 (ite l23 l224 l235))) (let ((l237 (ite l22 l221 l236))) (let ((l238 (ite l21 l218 l237))) (let ((l239 (ite l36 l238 l233))) (let ((l240 (= |next.ht!0!assimilated| l239))) (let ((l241 (ite l194 0 |state.ht!5!num_entries|))) (let ((l242 (ite l196 0 |state.ht!4!num_entries|))) (let ((l243 (ite l197 0 |state.ht!3!num_entries|))) (let ((l244 (ite l198 0 |state.ht!2!num_entries|))) (let ((l245 (ite l199 0 |state.ht!1!num_entries|))) (let ((l246 (ite l210 0 |state.ht!0!num_entries|))) (let ((l247 (ite l199 l245 l246))) (let ((l248 (ite l198 l244 l247))) (let ((l249 (ite l197 l243 l248))) (let ((l250 (ite l196 l242 l249))) (let ((l251 (ite l194 l241 l250))) (let ((l252 (ite l194 l251 l241))) (let ((l253 (ite l196 l251 l242))) (let ((l254 (ite l197 l251 l243))) (let ((l255 (ite l198 l251 l244))) (let ((l256 (ite l199 l251 l245))) (let ((l257 (ite l210 l251 l246))) (let ((l258 (ite l199 l256 l257))) (let ((l259 (ite l198 l255 l258))) (let ((l260 (ite l197 l254 l259))) (let ((l261 (ite l196 l253 l260))) (let ((l262 (ite l194 l252 l261))) (let ((l263 (ite l194 l262 l252))) (let ((l264 (ite l196 l262 l253))) (let ((l265 (ite l197 l262 l254))) (let ((l266 (ite l198 l262 l255))) (let ((l267 (ite l199 l262 l256))) (let ((l268 (ite l210 l262 l257))) (let ((l269 (ite l25 l267 l268))) (let ((l270 (ite l24 l266 l269))) (let ((l271 (ite l23 l265 l270))) (let ((l272 (ite l22 l264 l271))) (let ((l273 (ite l21 l263 l272))) (let ((l274 (ite l36 l273 l268))) (let ((l275 (= |next.ht!0!num_entries| l274))) (let ((l276 (ite l199 |state.ht!1!num_to_migrate| |state.ht!0!num_to_migrate|))) (let ((l277 (ite l198 |state.ht!2!num_to_migrate| l276))) (let ((l278 (ite l197 |state.ht!3!num_to_migrate| l277))) (let ((l279 (ite l196 |state.ht!4!num_to_migrate| l278))) (let ((l280 (ite l194 |state.ht!5!num_to_migrate| l279))) (let ((l281 (ite l194 l280 |state.ht!5!num_to_migrate|))) (let ((l282 (ite l194 0 l281))) (let ((l283 (ite l196 l280 |state.ht!4!num_to_migrate|))) (let ((l284 (ite l196 0 l283))) (let ((l285 (ite l197 l280 |state.ht!3!num_to_migrate|))) (let ((l286 (ite l197 0 l285))) (let ((l287 (ite l198 l280 |state.ht!2!num_to_migrate|))) (let ((l288 (ite l198 0 l287))) (let ((l289 (ite l199 l280 |state.ht!1!num_to_migrate|))) (let ((l290 (ite l199 0 l289))) (let ((l291 (ite l210 l280 |state.ht!0!num_to_migrate|))) (let ((l292 (ite l210 0 l291))) (let ((l293 (ite l199 l290 l292))) (let ((l294 (ite l198 l288 l293))) (let ((l295 (ite l197 l286 l294))) (let ((l296 (ite l196 l284 l295))) (let ((l297 (ite l194 l282 l296))) (let ((l298 (ite l210 l297 l292))) (let ((l299 (ite l36 l50 l298))) (let ((l300 (= |next.ht!0!num_to_migrate| l299))) (let ((l301 (ite l25 l238 l230))) (let ((l302 (= |next.ht!1!assimilated| l301))) (let ((l303 (ite l25 l273 l267))) (let ((l304 (= |next.ht!1!num_entries| l303))) (let ((l305 (ite l199 l297 l290))) (let ((l306 (ite l25 l50 l305))) (let ((l307 (= |next.ht!1!num_to_migrate| l306))) (let ((l308 (ite l24 l238 l227))) (let ((l309 (= |next.ht!2!assimilated| l308))) (let ((l310 (ite l24 l273 l266))) (let ((l311 (= |next.ht!2!num_entries| l310))) (let ((l312 (ite l198 l297 l288))) (let ((l313 (ite l24 l50 l312))) (let ((l314 (= |next.ht!2!num_to_migrate| l313))) (let ((l315 (ite l23 l238 l224))) (let ((l316 (= |next.ht!3!assimilated| l315))) (let ((l317 (ite l23 l273 l265))) (let ((l318 (= |next.ht!3!num_entries| l317))) (let ((l319 (ite l197 l297 l286))) (let ((l320 (ite l23 l50 l319))) (let ((l321 (= |next.ht!3!num_to_migrate| l320))) (let ((l322 (ite l22 l238 l221))) (let ((l323 (= |next.ht!4!assimilated| l322))) (let ((l324 (ite l22 l273 l264))) (let ((l325 (= |next.ht!4!num_entries| l324))) (let ((l326 (ite l196 l297 l284))) (let ((l327 (ite l22 l50 l326))) (let ((l328 (= |next.ht!4!num_to_migrate| l327))) (let ((l329 (ite l21 l238 l218))) (let ((l330 (= |next.ht!5!assimilated| l329))) (let ((l331 (ite l21 l273 l263))) (let ((l332 (= |next.ht!5!num_entries| l331))) (let ((l333 (ite l194 l297 l282))) (let ((l334 (ite l21 l50 l333))) (let ((l335 (= |next.ht!5!num_to_migrate| l334))) (let ((l336 (and l240 l275 l300 l302 l304 l307 l309 l311 l314 l316 l318 l321 l323 l325 l328 l330 l332 l335))) (let ((l337 (= |next.pc!0| 3))) (let ((l338 (and l183 l187 l188 l190 l191 l193 l336 l337))) (let ((l339 (and l183 l186 l337 l129 l152 l130 l131))) (let ((l340 (not l188))) (let ((l341 (= |next.pc!0| 4))) (let ((l342 (and l183 l187 l340 l341 l129 l152 l130 l131))) (let ((l343 (= |state.pc!0| 3))) (let ((l344 (= |next.pc!0| 0))) (let ((l345 (and l343 l344 l129 l152 l130 l131))) (let ((l346 (= |state.pc!0| 4))) (let ((l347 (and l346 l341 l129 l152 l130 l131))) (let ((l348 (or l132 l153 l182 l338 l339 l342 l345 l347))) (let ((l349 (= |next.pc!1| |state.pc!1|))) (let ((l350 (and l348 l349))) (let ((l351 (= |state.pc!1| 0))) (let ((l352 (= |next.pc!1| 1))) (let ((l353 (and l351 l2 l13 l45 l67 l77 l80 l83 l87 l90 l93 l97 l100 l103 l107 l110 l113 l117 l120 l123 l127 l352 l129 l130 l131))) (let ((l354 (and l351 l133 l352 l129 l152 l130 l131))) (let ((l355 (= |state.pc!1| 1))) (let ((l356 (= |next.pc!1| 2))) (let ((l357 (and l355 l356 l129 l181 l130 l131))) (let ((l358 (= |state.pc!1| 2))) (let ((l359 (= |next.pc!1| 3))) (let ((l360 (and l358 l187 l188 l190 l191 l193 l336 l359))) (let ((l361 (and l358 l186 l359 l129 l152 l130 l131))) (let ((l362 (= |next.pc!1| 4))) (let ((l363 (and l358 l187 l340 l362 l129 l152 l130 l131))) (let ((l364 (= |state.pc!1| 3))) (let ((l365 (= |next.pc!1| 0))) (let ((l366 (and l364 l365 l129 l152 l130 l131))) (let ((l367 (= |state.pc!1| 4))) (let ((l368 (and l367 l362 l129 l152 l130 l131))) (let ((l369 (or l353 l354 l357 l360 l361 l363 l366 l368))) (let ((l370 (= |next.pc!0| |state.pc!0|))) (let ((l371 (and l369 l370))) (let ((l372 (or l350 l371))) l372)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
        )
        (invariant next.pc!0 next.pc!1 next.K next.ht!0!assimilated next.ht!0!num_entries next.ht!0!num_to_migrate next.ht!1!assimilated next.ht!1!num_entries next.ht!1!num_to_migrate next.ht!2!assimilated next.ht!2!num_entries next.ht!2!num_to_migrate next.ht!3!assimilated next.ht!3!num_entries next.ht!3!num_to_migrate next.ht!4!assimilated next.ht!4!num_entries next.ht!4!num_to_migrate next.ht!5!assimilated next.ht!5!num_entries next.ht!5!num_to_migrate next.new next.old)
    )
  )
)

;; Property
(assert
  (forall ((state.pc!0 Real) (state.pc!1 Real) (state.K Real) (state.ht!0!assimilated Bool) (state.ht!0!num_entries Real) (state.ht!0!num_to_migrate Real) (state.ht!1!assimilated Bool) (state.ht!1!num_entries Real) (state.ht!1!num_to_migrate Real) (state.ht!2!assimilated Bool) (state.ht!2!num_entries Real) (state.ht!2!num_to_migrate Real) (state.ht!3!assimilated Bool) (state.ht!3!num_entries Real) (state.ht!3!num_to_migrate Real) (state.ht!4!assimilated Bool) (state.ht!4!num_entries Real) (state.ht!4!num_to_migrate Real) (state.ht!5!assimilated Bool) (state.ht!5!num_entries Real) (state.ht!5!num_to_migrate Real) (state.new Real) (state.old Real))
    (=> (invariant state.pc!0 state.pc!1 state.K state.ht!0!assimilated state.ht!0!num_entries state.ht!0!num_to_migrate state.ht!1!assimilated state.ht!1!num_entries state.ht!1!num_to_migrate state.ht!2!assimilated state.ht!2!num_entries state.ht!2!num_to_migrate state.ht!3!assimilated state.ht!3!num_entries state.ht!3!num_to_migrate state.ht!4!assimilated state.ht!4!num_entries state.ht!4!num_to_migrate state.ht!5!assimilated state.ht!5!num_entries state.ht!5!num_to_migrate state.new state.old)
        (let ((l0 (= |state.pc!0| 3))) (let ((l1 (not l0))) (let ((l2 (= |state.pc!1| 3))) (let ((l3 (not l2))) (let ((l4 (< 1 |state.old|))) (let ((l5 (not l4))) (let ((l6 (or l5 |state.ht!0!assimilated|))) (let ((l7 (< 2 |state.old|))) (let ((l8 (not l7))) (let ((l9 (or l8 |state.ht!1!assimilated|))) (let ((l10 (< 3 |state.old|))) (let ((l11 (not l10))) (let ((l12 (or l11 |state.ht!2!assimilated|))) (let ((l13 (< 4 |state.old|))) (let ((l14 (not l13))) (let ((l15 (or l14 |state.ht!3!assimilated|))) (let ((l16 (< 5 |state.old|))) (let ((l17 (not l16))) (let ((l18 (or l17 |state.ht!4!assimilated|))) (let ((l19 (< 6 |state.old|))) (let ((l20 (not l19))) (let ((l21 (or l20 |state.ht!5!assimilated|))) (let ((l22 (and l6 l9 l12 l15 l18 l21))) (let ((l23 (or l1 l3 l22))) l23))))))))))))))))))))))))
    )
  )
)

;; Check the property
(check-sat)

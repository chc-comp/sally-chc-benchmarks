(set-logic HORN)
(declare-fun invariant (Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Bool Bool Bool Bool Bool Bool Bool Bool Real Real Real Real Real Real Real) Bool)

;; Initial state
(assert
  (forall ((state.cx!0!0 Real) (state.cx!0!1 Real) (state.cx!0!2 Real) (state.cx!0!3 Real) (state.cx!1!0 Real) (state.cx!1!1 Real) (state.cx!1!2 Real) (state.cx!1!3 Real) (state.cx!2!0 Real) (state.cx!2!1 Real) (state.cx!2!2 Real) (state.cx!2!3 Real) (state.cx!3!0 Real) (state.cx!3!1 Real) (state.cx!3!2 Real) (state.cx!3!3 Real) (state.cy!0!0 Real) (state.cy!0!1 Real) (state.cy!0!2 Real) (state.cy!0!3 Real) (state.cy!1!0 Real) (state.cy!1!1 Real) (state.cy!1!2 Real) (state.cy!1!3 Real) (state.cy!2!0 Real) (state.cy!2!1 Real) (state.cy!2!2 Real) (state.cy!2!3 Real) (state.cy!3!0 Real) (state.cy!3!1 Real) (state.cy!3!2 Real) (state.cy!3!3 Real) (state.good_p!0 Bool) (state.good_p!1 Bool) (state.good_p!2 Bool) (state.good_p!3 Bool) (state.good_r!0 Bool) (state.good_r!1 Bool) (state.good_r!2 Bool) (state.good_r!3 Bool) (state.v!0 Real) (state.v!1 Real) (state.v!2 Real) (state.v!3 Real) (state.round Real) (state.source Real) (state.val Real))
    (=> (let ((l0 (= |state.round| 0))) (let ((l1 (= |state.cx!0!0| 0))) (let ((l2 (= |state.cx!0!1| 0))) (let ((l3 (= |state.cx!0!2| 0))) (let ((l4 (= |state.cx!0!3| 0))) (let ((l5 (= |state.cx!1!0| 0))) (let ((l6 (= |state.cx!1!1| 0))) (let ((l7 (= |state.cx!1!2| 0))) (let ((l8 (= |state.cx!1!3| 0))) (let ((l9 (= |state.cx!2!0| 0))) (let ((l10 (= |state.cx!2!1| 0))) (let ((l11 (= |state.cx!2!2| 0))) (let ((l12 (= |state.cx!2!3| 0))) (let ((l13 (= |state.cx!3!0| 0))) (let ((l14 (= |state.cx!3!1| 0))) (let ((l15 (= |state.cx!3!2| 0))) (let ((l16 (= |state.cx!3!3| 0))) (let ((l17 (= |state.cy!0!0| 0))) (let ((l18 (= |state.cy!0!1| 0))) (let ((l19 (= |state.cy!0!2| 0))) (let ((l20 (= |state.cy!0!3| 0))) (let ((l21 (= |state.cy!1!0| 0))) (let ((l22 (= |state.cy!1!1| 0))) (let ((l23 (= |state.cy!1!2| 0))) (let ((l24 (= |state.cy!1!3| 0))) (let ((l25 (= |state.cy!2!0| 0))) (let ((l26 (= |state.cy!2!1| 0))) (let ((l27 (= |state.cy!2!2| 0))) (let ((l28 (= |state.cy!2!3| 0))) (let ((l29 (= |state.cy!3!0| 0))) (let ((l30 (= |state.cy!3!1| 0))) (let ((l31 (= |state.cy!3!2| 0))) (let ((l32 (= |state.cy!3!3| 0))) (let ((l33 (= |state.source| 1))) (let ((l34 (= |state.source| 2))) (let ((l35 (= |state.source| 3))) (let ((l36 (= |state.source| 4))) (let ((l37 (or l33 l34 l35 l36))) (let ((l38 (= |state.val| 0))) (let ((l39 (not l38))) (let ((l40 (and |state.good_p!0| |state.good_p!1| |state.good_p!2| |state.good_p!3|))) (let ((l41 (not |state.good_r!0|))) (let ((l42 (and l41 |state.good_r!1| |state.good_r!2| |state.good_r!3|))) (let ((l43 (not |state.good_r!1|))) (let ((l44 (and l43 |state.good_r!0| |state.good_r!2| |state.good_r!3|))) (let ((l45 (not |state.good_r!2|))) (let ((l46 (and l45 |state.good_r!0| |state.good_r!1| |state.good_r!3|))) (let ((l47 (not |state.good_r!3|))) (let ((l48 (and l47 |state.good_r!0| |state.good_r!1| |state.good_r!2|))) (let ((l49 (or l42 l44 l46 l48))) (let ((l50 (and l0 l1 l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l19 l20 l21 l22 l23 l24 l25 l26 l27 l28 l29 l30 l31 l32 l37 l39 l40 l49))) l50)))))))))))))))))))))))))))))))))))))))))))))))))))
        (invariant state.cx!0!0 state.cx!0!1 state.cx!0!2 state.cx!0!3 state.cx!1!0 state.cx!1!1 state.cx!1!2 state.cx!1!3 state.cx!2!0 state.cx!2!1 state.cx!2!2 state.cx!2!3 state.cx!3!0 state.cx!3!1 state.cx!3!2 state.cx!3!3 state.cy!0!0 state.cy!0!1 state.cy!0!2 state.cy!0!3 state.cy!1!0 state.cy!1!1 state.cy!1!2 state.cy!1!3 state.cy!2!0 state.cy!2!1 state.cy!2!2 state.cy!2!3 state.cy!3!0 state.cy!3!1 state.cy!3!2 state.cy!3!3 state.good_p!0 state.good_p!1 state.good_p!2 state.good_p!3 state.good_r!0 state.good_r!1 state.good_r!2 state.good_r!3 state.v!0 state.v!1 state.v!2 state.v!3 state.round state.source state.val))
  )
)

;; Transition relation
(assert
  (forall ((state.cx!0!0 Real) (next.cx!0!0 Real) (state.cx!0!1 Real) (next.cx!0!1 Real) (state.cx!0!2 Real) (next.cx!0!2 Real) (state.cx!0!3 Real) (next.cx!0!3 Real) (state.cx!1!0 Real) (next.cx!1!0 Real) (state.cx!1!1 Real) (next.cx!1!1 Real) (state.cx!1!2 Real) (next.cx!1!2 Real) (state.cx!1!3 Real) (next.cx!1!3 Real) (state.cx!2!0 Real) (next.cx!2!0 Real) (state.cx!2!1 Real) (next.cx!2!1 Real) (state.cx!2!2 Real) (next.cx!2!2 Real) (state.cx!2!3 Real) (next.cx!2!3 Real) (state.cx!3!0 Real) (next.cx!3!0 Real) (state.cx!3!1 Real) (next.cx!3!1 Real) (state.cx!3!2 Real) (next.cx!3!2 Real) (state.cx!3!3 Real) (next.cx!3!3 Real) (state.cy!0!0 Real) (next.cy!0!0 Real) (state.cy!0!1 Real) (next.cy!0!1 Real) (state.cy!0!2 Real) (next.cy!0!2 Real) (state.cy!0!3 Real) (next.cy!0!3 Real) (state.cy!1!0 Real) (next.cy!1!0 Real) (state.cy!1!1 Real) (next.cy!1!1 Real) (state.cy!1!2 Real) (next.cy!1!2 Real) (state.cy!1!3 Real) (next.cy!1!3 Real) (state.cy!2!0 Real) (next.cy!2!0 Real) (state.cy!2!1 Real) (next.cy!2!1 Real) (state.cy!2!2 Real) (next.cy!2!2 Real) (state.cy!2!3 Real) (next.cy!2!3 Real) (state.cy!3!0 Real) (next.cy!3!0 Real) (state.cy!3!1 Real) (next.cy!3!1 Real) (state.cy!3!2 Real) (next.cy!3!2 Real) (state.cy!3!3 Real) (next.cy!3!3 Real) (state.good_p!0 Bool) (next.good_p!0 Bool) (state.good_p!1 Bool) (next.good_p!1 Bool) (state.good_p!2 Bool) (next.good_p!2 Bool) (state.good_p!3 Bool) (next.good_p!3 Bool) (state.good_r!0 Bool) (next.good_r!0 Bool) (state.good_r!1 Bool) (next.good_r!1 Bool) (state.good_r!2 Bool) (next.good_r!2 Bool) (state.good_r!3 Bool) (next.good_r!3 Bool) (state.v!0 Real) (next.v!0 Real) (state.v!1 Real) (next.v!1 Real) (state.v!2 Real) (next.v!2 Real) (state.v!3 Real) (next.v!3 Real) (state.round Real) (next.round Real) (state.source Real) (next.source Real) (state.val Real) (next.val Real))
    (=> (and (invariant state.cx!0!0 state.cx!0!1 state.cx!0!2 state.cx!0!3 state.cx!1!0 state.cx!1!1 state.cx!1!2 state.cx!1!3 state.cx!2!0 state.cx!2!1 state.cx!2!2 state.cx!2!3 state.cx!3!0 state.cx!3!1 state.cx!3!2 state.cx!3!3 state.cy!0!0 state.cy!0!1 state.cy!0!2 state.cy!0!3 state.cy!1!0 state.cy!1!1 state.cy!1!2 state.cy!1!3 state.cy!2!0 state.cy!2!1 state.cy!2!2 state.cy!2!3 state.cy!3!0 state.cy!3!1 state.cy!3!2 state.cy!3!3 state.good_p!0 state.good_p!1 state.good_p!2 state.good_p!3 state.good_r!0 state.good_r!1 state.good_r!2 state.good_r!3 state.v!0 state.v!1 state.v!2 state.v!3 state.round state.source state.val)
             (let ((l0 (= |next.source| |state.source|))) (let ((l1 (= |next.val| |state.val|))) (let ((l2 (= |state.round| 0))) (let ((l3 (not |state.good_p!0|))) (let ((l4 (= 1 |state.source|))) (let ((l5 (not l4))) (let ((l6 (= |next.cx!0!0| |state.val|))) (let ((l7 (= |next.cx!0!1| |state.val|))) (let ((l8 (= |next.cx!0!2| |state.val|))) (let ((l9 (and l6 l7 l8))) (let ((l10 (or l3 l5 l9))) (let ((l11 (not |state.good_p!1|))) (let ((l12 (= 2 |state.source|))) (let ((l13 (not l12))) (let ((l14 (= |next.cx!1!0| |state.val|))) (let ((l15 (= |next.cx!1!1| |state.val|))) (let ((l16 (= |next.cx!1!2| |state.val|))) (let ((l17 (and l14 l15 l16))) (let ((l18 (or l11 l13 l17))) (let ((l19 (not |state.good_p!2|))) (let ((l20 (= 3 |state.source|))) (let ((l21 (not l20))) (let ((l22 (= |next.cx!2!0| |state.val|))) (let ((l23 (= |next.cx!2!1| |state.val|))) (let ((l24 (= |next.cx!2!2| |state.val|))) (let ((l25 (and l22 l23 l24))) (let ((l26 (or l19 l21 l25))) (let ((l27 (not |state.good_p!3|))) (let ((l28 (= 4 |state.source|))) (let ((l29 (not l28))) (let ((l30 (= |next.cx!3!0| |state.val|))) (let ((l31 (= |next.cx!3!1| |state.val|))) (let ((l32 (= |next.cx!3!2| |state.val|))) (let ((l33 (and l30 l31 l32))) (let ((l34 (or l27 l29 l33))) (let ((l35 (= |next.cx!0!0| 0))) (let ((l36 (= |next.cx!0!1| 0))) (let ((l37 (= |next.cx!0!2| 0))) (let ((l38 (and l35 l36 l37))) (let ((l39 (or l3 l4 l38))) (let ((l40 (= |next.cx!1!0| 0))) (let ((l41 (= |next.cx!1!1| 0))) (let ((l42 (= |next.cx!1!2| 0))) (let ((l43 (and l40 l41 l42))) (let ((l44 (or l11 l12 l43))) (let ((l45 (= |next.cx!2!0| 0))) (let ((l46 (= |next.cx!2!1| 0))) (let ((l47 (= |next.cx!2!2| 0))) (let ((l48 (and l45 l46 l47))) (let ((l49 (or l19 l20 l48))) (let ((l50 (= |next.cx!3!0| 0))) (let ((l51 (= |next.cx!3!1| 0))) (let ((l52 (= |next.cx!3!2| 0))) (let ((l53 (and l50 l51 l52))) (let ((l54 (or l27 l28 l53))) (let ((l55 (and l10 l18 l26 l34 l39 l44 l49 l54))) (let ((l56 (= |next.round| 1))) (let ((l57 (= |next.cy!0!0| |state.cy!0!0|))) (let ((l58 (= |next.cy!0!1| |state.cy!0!1|))) (let ((l59 (= |next.cy!0!2| |state.cy!0!2|))) (let ((l60 (= |next.cy!1!0| |state.cy!1!0|))) (let ((l61 (= |next.cy!1!1| |state.cy!1!1|))) (let ((l62 (= |next.cy!1!2| |state.cy!1!2|))) (let ((l63 (= |next.cy!2!0| |state.cy!2!0|))) (let ((l64 (= |next.cy!2!1| |state.cy!2!1|))) (let ((l65 (= |next.cy!2!2| |state.cy!2!2|))) (let ((l66 (= |next.cy!3!0| |state.cy!3!0|))) (let ((l67 (= |next.cy!3!1| |state.cy!3!1|))) (let ((l68 (= |next.cy!3!2| |state.cy!3!2|))) (let ((l69 (and l57 l58 l59 l60 l61 l62 l63 l64 l65 l66 l67 l68))) (let ((l70 (= |next.good_p!0| |state.good_p!0|))) (let ((l71 (= |next.good_p!1| |state.good_p!1|))) (let ((l72 (= |next.good_p!2| |state.good_p!2|))) (let ((l73 (= |next.good_p!3| |state.good_p!3|))) (let ((l74 (and l70 l71 l72 l73))) (let ((l75 (= |next.good_r!0| |state.good_r!0|))) (let ((l76 (= |next.good_r!1| |state.good_r!1|))) (let ((l77 (= |next.good_r!2| |state.good_r!2|))) (let ((l78 (and l75 l76 l77))) (let ((l79 (= |next.v!0| |state.v!0|))) (let ((l80 (= |next.v!1| |state.v!1|))) (let ((l81 (= |next.v!2| |state.v!2|))) (let ((l82 (= |next.v!3| |state.v!3|))) (let ((l83 (and l79 l80 l81 l82))) (let ((l84 (and l2 l55 l56 l69 l74 l78 l83))) (let ((l85 (= |state.round| 1))) (let ((l86 (not |state.good_r!0|))) (let ((l87 (= |state.source| 4))) (let ((l88 (= |state.source| 3))) (let ((l89 (= |state.source| 2))) (let ((l90 (ite l89 |state.cx!1!0| |state.cx!0!0|))) (let ((l91 (ite l88 |state.cx!2!0| l90))) (let ((l92 (ite l87 |state.cx!3!0| l91))) (let ((l93 (= |next.cy!0!0| l92))) (let ((l94 (or l86 l93))) (let ((l95 (= |next.cy!1!0| l92))) (let ((l96 (or l86 l95))) (let ((l97 (= |next.cy!2!0| l92))) (let ((l98 (or l86 l97))) (let ((l99 (= |next.cy!3!0| l92))) (let ((l100 (or l86 l99))) (let ((l101 (not |state.good_r!1|))) (let ((l102 (ite l89 |state.cx!1!1| |state.cx!0!1|))) (let ((l103 (ite l88 |state.cx!2!1| l102))) (let ((l104 (ite l87 |state.cx!3!1| l103))) (let ((l105 (= |next.cy!0!1| l104))) (let ((l106 (or l101 l105))) (let ((l107 (= |next.cy!1!1| l104))) (let ((l108 (or l101 l107))) (let ((l109 (= |next.cy!2!1| l104))) (let ((l110 (or l101 l109))) (let ((l111 (= |next.cy!3!1| l104))) (let ((l112 (or l101 l111))) (let ((l113 (not |state.good_r!2|))) (let ((l114 (ite l89 |state.cx!1!2| |state.cx!0!2|))) (let ((l115 (ite l88 |state.cx!2!2| l114))) (let ((l116 (ite l87 |state.cx!3!2| l115))) (let ((l117 (= |next.cy!0!2| l116))) (let ((l118 (or l113 l117))) (let ((l119 (= |next.cy!1!2| l116))) (let ((l120 (or l113 l119))) (let ((l121 (= |next.cy!2!2| l116))) (let ((l122 (or l113 l121))) (let ((l123 (= |next.cy!3!2| l116))) (let ((l124 (or l113 l123))) (let ((l125 (and l94 l96 l98 l100 l106 l108 l110 l112 l118 l120 l122 l124))) (let ((l126 (= |next.round| 2))) (let ((l127 (= |next.cx!0!0| |state.cx!0!0|))) (let ((l128 (= |next.cx!0!1| |state.cx!0!1|))) (let ((l129 (= |next.cx!0!2| |state.cx!0!2|))) (let ((l130 (= |next.cx!1!0| |state.cx!1!0|))) (let ((l131 (= |next.cx!1!1| |state.cx!1!1|))) (let ((l132 (= |next.cx!1!2| |state.cx!1!2|))) (let ((l133 (= |next.cx!2!0| |state.cx!2!0|))) (let ((l134 (= |next.cx!2!1| |state.cx!2!1|))) (let ((l135 (= |next.cx!2!2| |state.cx!2!2|))) (let ((l136 (= |next.cx!3!0| |state.cx!3!0|))) (let ((l137 (= |next.cx!3!1| |state.cx!3!1|))) (let ((l138 (= |next.cx!3!2| |state.cx!3!2|))) (let ((l139 (and l127 l128 l129 l130 l131 l132 l133 l134 l135 l136 l137 l138))) (let ((l140 (and l85 l125 l126 l139 l74 l78 l83))) (let ((l141 (= |state.round| 2))) (let ((l142 (= |state.cy!0!1| |state.cy!0!2|))) (let ((l143 (ite l142 2 0))) (let ((l144 (= l143 0))) (let ((l145 (ite l144 |state.cy!0!0| |state.cy!0!2|))) (let ((l146 (= |state.cy!0!2| l145))) (let ((l147 (ite l146 1 2))) (let ((l148 (= l147 0))) (let ((l149 (= |state.cy!0!1| l145))) (let ((l150 (- l147 1))) (let ((l151 (ite l149 l150 l147))) (let ((l152 (= l151 0))) (let ((l153 (= |state.cy!0!0| l145))) (let ((l154 (- l151 1))) (let ((l155 (ite l153 l154 l151))) (let ((l156 (= l155 0))) (let ((l157 (or l148 l152 l156))) (let ((l158 (ite l157 l145 0))) (let ((l159 (= |next.v!0| l158))) (let ((l160 (or l3 l159))) (let ((l161 (= |state.cy!1!1| |state.cy!1!2|))) (let ((l162 (ite l161 2 0))) (let ((l163 (= l162 0))) (let ((l164 (ite l163 |state.cy!1!0| |state.cy!1!2|))) (let ((l165 (= |state.cy!1!2| l164))) (let ((l166 (ite l165 1 2))) (let ((l167 (= l166 0))) (let ((l168 (= |state.cy!1!1| l164))) (let ((l169 (- l166 1))) (let ((l170 (ite l168 l169 l166))) (let ((l171 (= l170 0))) (let ((l172 (= |state.cy!1!0| l164))) (let ((l173 (- l170 1))) (let ((l174 (ite l172 l173 l170))) (let ((l175 (= l174 0))) (let ((l176 (or l167 l171 l175))) (let ((l177 (ite l176 l164 0))) (let ((l178 (= |next.v!1| l177))) (let ((l179 (or l11 l178))) (let ((l180 (= |state.cy!2!1| |state.cy!2!2|))) (let ((l181 (ite l180 2 0))) (let ((l182 (= l181 0))) (let ((l183 (ite l182 |state.cy!2!0| |state.cy!2!2|))) (let ((l184 (= |state.cy!2!2| l183))) (let ((l185 (ite l184 1 2))) (let ((l186 (= l185 0))) (let ((l187 (= |state.cy!2!1| l183))) (let ((l188 (- l185 1))) (let ((l189 (ite l187 l188 l185))) (let ((l190 (= l189 0))) (let ((l191 (= |state.cy!2!0| l183))) (let ((l192 (- l189 1))) (let ((l193 (ite l191 l192 l189))) (let ((l194 (= l193 0))) (let ((l195 (or l186 l190 l194))) (let ((l196 (ite l195 l183 0))) (let ((l197 (= |next.v!2| l196))) (let ((l198 (or l19 l197))) (let ((l199 (= |state.cy!3!1| |state.cy!3!2|))) (let ((l200 (ite l199 2 0))) (let ((l201 (= l200 0))) (let ((l202 (ite l201 |state.cy!3!0| |state.cy!3!2|))) (let ((l203 (= |state.cy!3!2| l202))) (let ((l204 (ite l203 1 2))) (let ((l205 (= l204 0))) (let ((l206 (= |state.cy!3!1| l202))) (let ((l207 (- l204 1))) (let ((l208 (ite l206 l207 l204))) (let ((l209 (= l208 0))) (let ((l210 (= |state.cy!3!0| l202))) (let ((l211 (- l208 1))) (let ((l212 (ite l210 l211 l208))) (let ((l213 (= l212 0))) (let ((l214 (or l205 l209 l213))) (let ((l215 (ite l214 l202 0))) (let ((l216 (= |next.v!3| l215))) (let ((l217 (or l27 l216))) (let ((l218 (and l160 l179 l198 l217))) (let ((l219 (= |next.round| 3))) (let ((l220 (and l141 l218 l219 l139 l69 l74 l78))) (let ((l221 (= |state.round| 3))) (let ((l222 (= |next.round| |state.round|))) (let ((l223 (and l221 l139 l69 l74 l78 l222 l83))) (let ((l224 (or l84 l140 l220 l223))) (let ((l225 (and l0 l1 l224))) l225))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
        )
        (invariant next.cx!0!0 next.cx!0!1 next.cx!0!2 next.cx!0!3 next.cx!1!0 next.cx!1!1 next.cx!1!2 next.cx!1!3 next.cx!2!0 next.cx!2!1 next.cx!2!2 next.cx!2!3 next.cx!3!0 next.cx!3!1 next.cx!3!2 next.cx!3!3 next.cy!0!0 next.cy!0!1 next.cy!0!2 next.cy!0!3 next.cy!1!0 next.cy!1!1 next.cy!1!2 next.cy!1!3 next.cy!2!0 next.cy!2!1 next.cy!2!2 next.cy!2!3 next.cy!3!0 next.cy!3!1 next.cy!3!2 next.cy!3!3 next.good_p!0 next.good_p!1 next.good_p!2 next.good_p!3 next.good_r!0 next.good_r!1 next.good_r!2 next.good_r!3 next.v!0 next.v!1 next.v!2 next.v!3 next.round next.source next.val)
    )
  )
)

;; Property
(assert
  (forall ((state.cx!0!0 Real) (state.cx!0!1 Real) (state.cx!0!2 Real) (state.cx!0!3 Real) (state.cx!1!0 Real) (state.cx!1!1 Real) (state.cx!1!2 Real) (state.cx!1!3 Real) (state.cx!2!0 Real) (state.cx!2!1 Real) (state.cx!2!2 Real) (state.cx!2!3 Real) (state.cx!3!0 Real) (state.cx!3!1 Real) (state.cx!3!2 Real) (state.cx!3!3 Real) (state.cy!0!0 Real) (state.cy!0!1 Real) (state.cy!0!2 Real) (state.cy!0!3 Real) (state.cy!1!0 Real) (state.cy!1!1 Real) (state.cy!1!2 Real) (state.cy!1!3 Real) (state.cy!2!0 Real) (state.cy!2!1 Real) (state.cy!2!2 Real) (state.cy!2!3 Real) (state.cy!3!0 Real) (state.cy!3!1 Real) (state.cy!3!2 Real) (state.cy!3!3 Real) (state.good_p!0 Bool) (state.good_p!1 Bool) (state.good_p!2 Bool) (state.good_p!3 Bool) (state.good_r!0 Bool) (state.good_r!1 Bool) (state.good_r!2 Bool) (state.good_r!3 Bool) (state.v!0 Real) (state.v!1 Real) (state.v!2 Real) (state.v!3 Real) (state.round Real) (state.source Real) (state.val Real))
    (=> (invariant state.cx!0!0 state.cx!0!1 state.cx!0!2 state.cx!0!3 state.cx!1!0 state.cx!1!1 state.cx!1!2 state.cx!1!3 state.cx!2!0 state.cx!2!1 state.cx!2!2 state.cx!2!3 state.cx!3!0 state.cx!3!1 state.cx!3!2 state.cx!3!3 state.cy!0!0 state.cy!0!1 state.cy!0!2 state.cy!0!3 state.cy!1!0 state.cy!1!1 state.cy!1!2 state.cy!1!3 state.cy!2!0 state.cy!2!1 state.cy!2!2 state.cy!2!3 state.cy!3!0 state.cy!3!1 state.cy!3!2 state.cy!3!3 state.good_p!0 state.good_p!1 state.good_p!2 state.good_p!3 state.good_r!0 state.good_r!1 state.good_r!2 state.good_r!3 state.v!0 state.v!1 state.v!2 state.v!3 state.round state.source state.val)
        (let ((l0 (< |state.round| 3))) (let ((l1 (not |state.good_p!0|))) (let ((l2 (not |state.good_p!1|))) (let ((l3 (= |state.v!0| |state.v!1|))) (let ((l4 (or l2 l3))) (let ((l5 (not |state.good_p!2|))) (let ((l6 (= |state.v!0| |state.v!2|))) (let ((l7 (or l5 l6))) (let ((l8 (not |state.good_p!3|))) (let ((l9 (= |state.v!0| |state.v!3|))) (let ((l10 (or l8 l9))) (let ((l11 (and l4 l7 l10))) (let ((l12 (or l1 l11))) (let ((l13 (= |state.v!1| |state.v!0|))) (let ((l14 (or l1 l13))) (let ((l15 (= |state.v!1| |state.v!2|))) (let ((l16 (or l5 l15))) (let ((l17 (= |state.v!1| |state.v!3|))) (let ((l18 (or l8 l17))) (let ((l19 (and l14 l16 l18))) (let ((l20 (or l2 l19))) (let ((l21 (= |state.v!2| |state.v!0|))) (let ((l22 (or l1 l21))) (let ((l23 (= |state.v!2| |state.v!1|))) (let ((l24 (or l2 l23))) (let ((l25 (= |state.v!2| |state.v!3|))) (let ((l26 (or l8 l25))) (let ((l27 (and l22 l24 l26))) (let ((l28 (or l5 l27))) (let ((l29 (= |state.v!3| |state.v!0|))) (let ((l30 (or l1 l29))) (let ((l31 (= |state.v!3| |state.v!1|))) (let ((l32 (or l2 l31))) (let ((l33 (= |state.v!3| |state.v!2|))) (let ((l34 (or l5 l33))) (let ((l35 (and l30 l32 l34))) (let ((l36 (or l8 l35))) (let ((l37 (and l12 l20 l28 l36))) (let ((l38 (or l0 l37))) l38)))))))))))))))))))))))))))))))))))))))
    )
  )
)

;; Check the property
(check-sat)

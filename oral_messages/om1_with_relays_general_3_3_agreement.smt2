(set-logic HORN)
(declare-fun invariant (Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Bool Bool Bool Bool Bool Bool Real Real Real Real Real Real) Bool)

;; Initial state
(assert
  (forall ((state.cx!0!0 Real) (state.cx!0!1 Real) (state.cx!0!2 Real) (state.cx!1!0 Real) (state.cx!1!1 Real) (state.cx!1!2 Real) (state.cx!2!0 Real) (state.cx!2!1 Real) (state.cx!2!2 Real) (state.cy!0!0 Real) (state.cy!0!1 Real) (state.cy!0!2 Real) (state.cy!1!0 Real) (state.cy!1!1 Real) (state.cy!1!2 Real) (state.cy!2!0 Real) (state.cy!2!1 Real) (state.cy!2!2 Real) (state.good_p!0 Bool) (state.good_p!1 Bool) (state.good_p!2 Bool) (state.good_r!0 Bool) (state.good_r!1 Bool) (state.good_r!2 Bool) (state.v!0 Real) (state.v!1 Real) (state.v!2 Real) (state.round Real) (state.source Real) (state.val Real))
    (=> (let ((l0 (= |state.round| 0))) (let ((l1 (= |state.cx!0!0| 0))) (let ((l2 (= |state.cx!0!1| 0))) (let ((l3 (= |state.cx!0!2| 0))) (let ((l4 (= |state.cx!1!0| 0))) (let ((l5 (= |state.cx!1!1| 0))) (let ((l6 (= |state.cx!1!2| 0))) (let ((l7 (= |state.cx!2!0| 0))) (let ((l8 (= |state.cx!2!1| 0))) (let ((l9 (= |state.cx!2!2| 0))) (let ((l10 (= |state.cy!0!0| 0))) (let ((l11 (= |state.cy!0!1| 0))) (let ((l12 (= |state.cy!0!2| 0))) (let ((l13 (= |state.cy!1!0| 0))) (let ((l14 (= |state.cy!1!1| 0))) (let ((l15 (= |state.cy!1!2| 0))) (let ((l16 (= |state.cy!2!0| 0))) (let ((l17 (= |state.cy!2!1| 0))) (let ((l18 (= |state.cy!2!2| 0))) (let ((l19 (= |state.source| 1))) (let ((l20 (= |state.source| 2))) (let ((l21 (= |state.source| 3))) (let ((l22 (or l19 l20 l21))) (let ((l23 (= |state.val| 0))) (let ((l24 (not l23))) (let ((l25 (and |state.good_p!0| |state.good_p!1| |state.good_p!2|))) (let ((l26 (not |state.good_r!0|))) (let ((l27 (and l26 |state.good_r!1| |state.good_r!2|))) (let ((l28 (not |state.good_r!1|))) (let ((l29 (and l28 |state.good_r!0| |state.good_r!2|))) (let ((l30 (not |state.good_r!2|))) (let ((l31 (and l30 |state.good_r!0| |state.good_r!1|))) (let ((l32 (or l27 l29 l31))) (let ((l33 (and l0 l1 l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l22 l24 l25 l32))) l33))))))))))))))))))))))))))))))))))
        (invariant state.cx!0!0 state.cx!0!1 state.cx!0!2 state.cx!1!0 state.cx!1!1 state.cx!1!2 state.cx!2!0 state.cx!2!1 state.cx!2!2 state.cy!0!0 state.cy!0!1 state.cy!0!2 state.cy!1!0 state.cy!1!1 state.cy!1!2 state.cy!2!0 state.cy!2!1 state.cy!2!2 state.good_p!0 state.good_p!1 state.good_p!2 state.good_r!0 state.good_r!1 state.good_r!2 state.v!0 state.v!1 state.v!2 state.round state.source state.val))
  )
)

;; Transition relation
(assert
  (forall ((state.cx!0!0 Real) (next.cx!0!0 Real) (state.cx!0!1 Real) (next.cx!0!1 Real) (state.cx!0!2 Real) (next.cx!0!2 Real) (state.cx!1!0 Real) (next.cx!1!0 Real) (state.cx!1!1 Real) (next.cx!1!1 Real) (state.cx!1!2 Real) (next.cx!1!2 Real) (state.cx!2!0 Real) (next.cx!2!0 Real) (state.cx!2!1 Real) (next.cx!2!1 Real) (state.cx!2!2 Real) (next.cx!2!2 Real) (state.cy!0!0 Real) (next.cy!0!0 Real) (state.cy!0!1 Real) (next.cy!0!1 Real) (state.cy!0!2 Real) (next.cy!0!2 Real) (state.cy!1!0 Real) (next.cy!1!0 Real) (state.cy!1!1 Real) (next.cy!1!1 Real) (state.cy!1!2 Real) (next.cy!1!2 Real) (state.cy!2!0 Real) (next.cy!2!0 Real) (state.cy!2!1 Real) (next.cy!2!1 Real) (state.cy!2!2 Real) (next.cy!2!2 Real) (state.good_p!0 Bool) (next.good_p!0 Bool) (state.good_p!1 Bool) (next.good_p!1 Bool) (state.good_p!2 Bool) (next.good_p!2 Bool) (state.good_r!0 Bool) (next.good_r!0 Bool) (state.good_r!1 Bool) (next.good_r!1 Bool) (state.good_r!2 Bool) (next.good_r!2 Bool) (state.v!0 Real) (next.v!0 Real) (state.v!1 Real) (next.v!1 Real) (state.v!2 Real) (next.v!2 Real) (state.round Real) (next.round Real) (state.source Real) (next.source Real) (state.val Real) (next.val Real))
    (=> (and (invariant state.cx!0!0 state.cx!0!1 state.cx!0!2 state.cx!1!0 state.cx!1!1 state.cx!1!2 state.cx!2!0 state.cx!2!1 state.cx!2!2 state.cy!0!0 state.cy!0!1 state.cy!0!2 state.cy!1!0 state.cy!1!1 state.cy!1!2 state.cy!2!0 state.cy!2!1 state.cy!2!2 state.good_p!0 state.good_p!1 state.good_p!2 state.good_r!0 state.good_r!1 state.good_r!2 state.v!0 state.v!1 state.v!2 state.round state.source state.val)
             (let ((l0 (= |next.source| |state.source|))) (let ((l1 (= |next.val| |state.val|))) (let ((l2 (= |state.round| 0))) (let ((l3 (not |state.good_p!0|))) (let ((l4 (= 1 |state.source|))) (let ((l5 (not l4))) (let ((l6 (= |next.cx!0!0| |state.val|))) (let ((l7 (= |next.cx!0!1| |state.val|))) (let ((l8 (= |next.cx!0!2| |state.val|))) (let ((l9 (and l6 l7 l8))) (let ((l10 (or l3 l5 l9))) (let ((l11 (not |state.good_p!1|))) (let ((l12 (= 2 |state.source|))) (let ((l13 (not l12))) (let ((l14 (= |next.cx!1!0| |state.val|))) (let ((l15 (= |next.cx!1!1| |state.val|))) (let ((l16 (= |next.cx!1!2| |state.val|))) (let ((l17 (and l14 l15 l16))) (let ((l18 (or l11 l13 l17))) (let ((l19 (not |state.good_p!2|))) (let ((l20 (= 3 |state.source|))) (let ((l21 (not l20))) (let ((l22 (= |next.cx!2!0| |state.val|))) (let ((l23 (= |next.cx!2!1| |state.val|))) (let ((l24 (= |next.cx!2!2| |state.val|))) (let ((l25 (and l22 l23 l24))) (let ((l26 (or l19 l21 l25))) (let ((l27 (= |next.cx!0!0| 0))) (let ((l28 (= |next.cx!0!1| 0))) (let ((l29 (= |next.cx!0!2| 0))) (let ((l30 (and l27 l28 l29))) (let ((l31 (or l3 l4 l30))) (let ((l32 (= |next.cx!1!0| 0))) (let ((l33 (= |next.cx!1!1| 0))) (let ((l34 (= |next.cx!1!2| 0))) (let ((l35 (and l32 l33 l34))) (let ((l36 (or l11 l12 l35))) (let ((l37 (= |next.cx!2!0| 0))) (let ((l38 (= |next.cx!2!1| 0))) (let ((l39 (= |next.cx!2!2| 0))) (let ((l40 (and l37 l38 l39))) (let ((l41 (or l19 l20 l40))) (let ((l42 (and l10 l18 l26 l31 l36 l41))) (let ((l43 (= |next.round| 1))) (let ((l44 (= |next.cy!0!0| |state.cy!0!0|))) (let ((l45 (= |next.cy!0!1| |state.cy!0!1|))) (let ((l46 (= |next.cy!0!2| |state.cy!0!2|))) (let ((l47 (= |next.cy!1!0| |state.cy!1!0|))) (let ((l48 (= |next.cy!1!1| |state.cy!1!1|))) (let ((l49 (= |next.cy!1!2| |state.cy!1!2|))) (let ((l50 (= |next.cy!2!0| |state.cy!2!0|))) (let ((l51 (= |next.cy!2!1| |state.cy!2!1|))) (let ((l52 (= |next.cy!2!2| |state.cy!2!2|))) (let ((l53 (and l44 l45 l46 l47 l48 l49 l50 l51 l52))) (let ((l54 (= |next.good_p!0| |state.good_p!0|))) (let ((l55 (= |next.good_p!1| |state.good_p!1|))) (let ((l56 (= |next.good_p!2| |state.good_p!2|))) (let ((l57 (and l54 l55 l56))) (let ((l58 (= |next.good_r!0| |state.good_r!0|))) (let ((l59 (= |next.good_r!1| |state.good_r!1|))) (let ((l60 (= |next.good_r!2| |state.good_r!2|))) (let ((l61 (and l58 l59 l60))) (let ((l62 (= |next.v!0| |state.v!0|))) (let ((l63 (= |next.v!1| |state.v!1|))) (let ((l64 (= |next.v!2| |state.v!2|))) (let ((l65 (and l62 l63 l64))) (let ((l66 (and l2 l42 l43 l53 l57 l61 l65))) (let ((l67 (= |state.round| 1))) (let ((l68 (not |state.good_r!0|))) (let ((l69 (= |state.source| 3))) (let ((l70 (= |state.source| 2))) (let ((l71 (ite l70 |state.cx!1!0| |state.cx!0!0|))) (let ((l72 (ite l69 |state.cx!2!0| l71))) (let ((l73 (= |next.cy!0!0| l72))) (let ((l74 (or l68 l73))) (let ((l75 (= |next.cy!1!0| l72))) (let ((l76 (or l68 l75))) (let ((l77 (= |next.cy!2!0| l72))) (let ((l78 (or l68 l77))) (let ((l79 (not |state.good_r!1|))) (let ((l80 (ite l70 |state.cx!1!1| |state.cx!0!1|))) (let ((l81 (ite l69 |state.cx!2!1| l80))) (let ((l82 (= |next.cy!0!1| l81))) (let ((l83 (or l79 l82))) (let ((l84 (= |next.cy!1!1| l81))) (let ((l85 (or l79 l84))) (let ((l86 (= |next.cy!2!1| l81))) (let ((l87 (or l79 l86))) (let ((l88 (not |state.good_r!2|))) (let ((l89 (ite l70 |state.cx!1!2| |state.cx!0!2|))) (let ((l90 (ite l69 |state.cx!2!2| l89))) (let ((l91 (= |next.cy!0!2| l90))) (let ((l92 (or l88 l91))) (let ((l93 (= |next.cy!1!2| l90))) (let ((l94 (or l88 l93))) (let ((l95 (= |next.cy!2!2| l90))) (let ((l96 (or l88 l95))) (let ((l97 (and l74 l76 l78 l83 l85 l87 l92 l94 l96))) (let ((l98 (= |next.round| 2))) (let ((l99 (= |next.cx!0!0| |state.cx!0!0|))) (let ((l100 (= |next.cx!0!1| |state.cx!0!1|))) (let ((l101 (= |next.cx!0!2| |state.cx!0!2|))) (let ((l102 (= |next.cx!1!0| |state.cx!1!0|))) (let ((l103 (= |next.cx!1!1| |state.cx!1!1|))) (let ((l104 (= |next.cx!1!2| |state.cx!1!2|))) (let ((l105 (= |next.cx!2!0| |state.cx!2!0|))) (let ((l106 (= |next.cx!2!1| |state.cx!2!1|))) (let ((l107 (= |next.cx!2!2| |state.cx!2!2|))) (let ((l108 (and l99 l100 l101 l102 l103 l104 l105 l106 l107))) (let ((l109 (and l67 l97 l98 l108 l57 l61 l65))) (let ((l110 (= |state.round| 2))) (let ((l111 (= |state.cy!0!1| |state.cy!0!2|))) (let ((l112 (ite l111 2 0))) (let ((l113 (= l112 0))) (let ((l114 (ite l113 |state.cy!0!0| |state.cy!0!2|))) (let ((l115 (= |state.cy!0!2| l114))) (let ((l116 (ite l115 1 2))) (let ((l117 (= l116 0))) (let ((l118 (= |state.cy!0!1| l114))) (let ((l119 (- l116 1))) (let ((l120 (ite l118 l119 l116))) (let ((l121 (= l120 0))) (let ((l122 (= |state.cy!0!0| l114))) (let ((l123 (- l120 1))) (let ((l124 (ite l122 l123 l120))) (let ((l125 (= l124 0))) (let ((l126 (or l117 l121 l125))) (let ((l127 (ite l126 l114 0))) (let ((l128 (= |next.v!0| l127))) (let ((l129 (or l3 l128))) (let ((l130 (= |state.cy!1!1| |state.cy!1!2|))) (let ((l131 (ite l130 2 0))) (let ((l132 (= l131 0))) (let ((l133 (ite l132 |state.cy!1!0| |state.cy!1!2|))) (let ((l134 (= |state.cy!1!2| l133))) (let ((l135 (ite l134 1 2))) (let ((l136 (= l135 0))) (let ((l137 (= |state.cy!1!1| l133))) (let ((l138 (- l135 1))) (let ((l139 (ite l137 l138 l135))) (let ((l140 (= l139 0))) (let ((l141 (= |state.cy!1!0| l133))) (let ((l142 (- l139 1))) (let ((l143 (ite l141 l142 l139))) (let ((l144 (= l143 0))) (let ((l145 (or l136 l140 l144))) (let ((l146 (ite l145 l133 0))) (let ((l147 (= |next.v!1| l146))) (let ((l148 (or l11 l147))) (let ((l149 (= |state.cy!2!1| |state.cy!2!2|))) (let ((l150 (ite l149 2 0))) (let ((l151 (= l150 0))) (let ((l152 (ite l151 |state.cy!2!0| |state.cy!2!2|))) (let ((l153 (= |state.cy!2!2| l152))) (let ((l154 (ite l153 1 2))) (let ((l155 (= l154 0))) (let ((l156 (= |state.cy!2!1| l152))) (let ((l157 (- l154 1))) (let ((l158 (ite l156 l157 l154))) (let ((l159 (= l158 0))) (let ((l160 (= |state.cy!2!0| l152))) (let ((l161 (- l158 1))) (let ((l162 (ite l160 l161 l158))) (let ((l163 (= l162 0))) (let ((l164 (or l155 l159 l163))) (let ((l165 (ite l164 l152 0))) (let ((l166 (= |next.v!2| l165))) (let ((l167 (or l19 l166))) (let ((l168 (and l129 l148 l167))) (let ((l169 (= |next.round| 3))) (let ((l170 (and l110 l168 l169 l108 l53 l57 l61))) (let ((l171 (= |state.round| 3))) (let ((l172 (= |next.round| |state.round|))) (let ((l173 (and l171 l108 l53 l57 l61 l172 l65))) (let ((l174 (or l66 l109 l170 l173))) (let ((l175 (and l0 l1 l174))) l175))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
        )
        (invariant next.cx!0!0 next.cx!0!1 next.cx!0!2 next.cx!1!0 next.cx!1!1 next.cx!1!2 next.cx!2!0 next.cx!2!1 next.cx!2!2 next.cy!0!0 next.cy!0!1 next.cy!0!2 next.cy!1!0 next.cy!1!1 next.cy!1!2 next.cy!2!0 next.cy!2!1 next.cy!2!2 next.good_p!0 next.good_p!1 next.good_p!2 next.good_r!0 next.good_r!1 next.good_r!2 next.v!0 next.v!1 next.v!2 next.round next.source next.val)
    )
  )
)

;; Property
(assert
  (forall ((state.cx!0!0 Real) (state.cx!0!1 Real) (state.cx!0!2 Real) (state.cx!1!0 Real) (state.cx!1!1 Real) (state.cx!1!2 Real) (state.cx!2!0 Real) (state.cx!2!1 Real) (state.cx!2!2 Real) (state.cy!0!0 Real) (state.cy!0!1 Real) (state.cy!0!2 Real) (state.cy!1!0 Real) (state.cy!1!1 Real) (state.cy!1!2 Real) (state.cy!2!0 Real) (state.cy!2!1 Real) (state.cy!2!2 Real) (state.good_p!0 Bool) (state.good_p!1 Bool) (state.good_p!2 Bool) (state.good_r!0 Bool) (state.good_r!1 Bool) (state.good_r!2 Bool) (state.v!0 Real) (state.v!1 Real) (state.v!2 Real) (state.round Real) (state.source Real) (state.val Real))
    (=> (invariant state.cx!0!0 state.cx!0!1 state.cx!0!2 state.cx!1!0 state.cx!1!1 state.cx!1!2 state.cx!2!0 state.cx!2!1 state.cx!2!2 state.cy!0!0 state.cy!0!1 state.cy!0!2 state.cy!1!0 state.cy!1!1 state.cy!1!2 state.cy!2!0 state.cy!2!1 state.cy!2!2 state.good_p!0 state.good_p!1 state.good_p!2 state.good_r!0 state.good_r!1 state.good_r!2 state.v!0 state.v!1 state.v!2 state.round state.source state.val)
        (let ((l0 (< |state.round| 3))) (let ((l1 (not |state.good_p!0|))) (let ((l2 (not |state.good_p!1|))) (let ((l3 (= |state.v!0| |state.v!1|))) (let ((l4 (or l2 l3))) (let ((l5 (not |state.good_p!2|))) (let ((l6 (= |state.v!0| |state.v!2|))) (let ((l7 (or l5 l6))) (let ((l8 (and l4 l7))) (let ((l9 (or l1 l8))) (let ((l10 (= |state.v!1| |state.v!0|))) (let ((l11 (or l1 l10))) (let ((l12 (= |state.v!1| |state.v!2|))) (let ((l13 (or l5 l12))) (let ((l14 (and l11 l13))) (let ((l15 (or l2 l14))) (let ((l16 (= |state.v!2| |state.v!0|))) (let ((l17 (or l1 l16))) (let ((l18 (= |state.v!2| |state.v!1|))) (let ((l19 (or l2 l18))) (let ((l20 (and l17 l19))) (let ((l21 (or l5 l20))) (let ((l22 (and l9 l15 l21))) (let ((l23 (or l0 l22))) l23))))))))))))))))))))))))
    )
  )
)

;; Check the property
(check-sat)

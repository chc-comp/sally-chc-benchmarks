;; State type:
;;  cx!i!j: channel from process i to relay j
;;  cy!i!j: channel from relay j to process i
;;  good_p!i: true if process i is non-faulty
;;  good_r!j: true if relay k is non-faulty
;;  v!i: result produced by process i
;;  round: global round counter
;;
;; Encoding:
;;  channels store a real value. We encode "nothing sent" as 0.
;;
;; Parameters:
;;  source: id of the source process (integer between 1 and 4)
;;  val: value sent by the source, if its not faulty.
;;  val is assumed non-zero.
;;

(define-state-type state
  ((cx!0!0 Real)
   (cx!0!1 Real)
   (cx!0!2 Real)
   (cx!0!3 Real)
   (cx!0!4 Real)
   (cx!0!5 Real)
   (cx!0!6 Real)
   (cx!0!7 Real)
   (cx!0!8 Real)
   (cx!0!9 Real)
   (cx!0!10 Real)
   (cx!0!11 Real)
   (cx!0!12 Real)
   (cx!0!13 Real)
   (cx!0!14 Real)
   (cx!0!15 Real)
   (cx!1!0 Real)
   (cx!1!1 Real)
   (cx!1!2 Real)
   (cx!1!3 Real)
   (cx!1!4 Real)
   (cx!1!5 Real)
   (cx!1!6 Real)
   (cx!1!7 Real)
   (cx!1!8 Real)
   (cx!1!9 Real)
   (cx!1!10 Real)
   (cx!1!11 Real)
   (cx!1!12 Real)
   (cx!1!13 Real)
   (cx!1!14 Real)
   (cx!1!15 Real)
   (cx!2!0 Real)
   (cx!2!1 Real)
   (cx!2!2 Real)
   (cx!2!3 Real)
   (cx!2!4 Real)
   (cx!2!5 Real)
   (cx!2!6 Real)
   (cx!2!7 Real)
   (cx!2!8 Real)
   (cx!2!9 Real)
   (cx!2!10 Real)
   (cx!2!11 Real)
   (cx!2!12 Real)
   (cx!2!13 Real)
   (cx!2!14 Real)
   (cx!2!15 Real)
   (cy!0!0 Real)
   (cy!0!1 Real)
   (cy!0!2 Real)
   (cy!0!3 Real)
   (cy!0!4 Real)
   (cy!0!5 Real)
   (cy!0!6 Real)
   (cy!0!7 Real)
   (cy!0!8 Real)
   (cy!0!9 Real)
   (cy!0!10 Real)
   (cy!0!11 Real)
   (cy!0!12 Real)
   (cy!0!13 Real)
   (cy!0!14 Real)
   (cy!0!15 Real)
   (cy!1!0 Real)
   (cy!1!1 Real)
   (cy!1!2 Real)
   (cy!1!3 Real)
   (cy!1!4 Real)
   (cy!1!5 Real)
   (cy!1!6 Real)
   (cy!1!7 Real)
   (cy!1!8 Real)
   (cy!1!9 Real)
   (cy!1!10 Real)
   (cy!1!11 Real)
   (cy!1!12 Real)
   (cy!1!13 Real)
   (cy!1!14 Real)
   (cy!1!15 Real)
   (cy!2!0 Real)
   (cy!2!1 Real)
   (cy!2!2 Real)
   (cy!2!3 Real)
   (cy!2!4 Real)
   (cy!2!5 Real)
   (cy!2!6 Real)
   (cy!2!7 Real)
   (cy!2!8 Real)
   (cy!2!9 Real)
   (cy!2!10 Real)
   (cy!2!11 Real)
   (cy!2!12 Real)
   (cy!2!13 Real)
   (cy!2!14 Real)
   (cy!2!15 Real)
   (good_p!0 Bool)
   (good_p!1 Bool)
   (good_p!2 Bool)
   (good_r!0 Bool)
   (good_r!1 Bool)
   (good_r!2 Bool)
   (good_r!3 Bool)
   (good_r!4 Bool)
   (good_r!5 Bool)
   (good_r!6 Bool)
   (good_r!7 Bool)
   (good_r!8 Bool)
   (good_r!9 Bool)
   (good_r!10 Bool)
   (good_r!11 Bool)
   (good_r!12 Bool)
   (good_r!13 Bool)
   (good_r!14 Bool)
   (good_r!15 Bool)
   (v!0 Real)
   (v!1 Real)
   (v!2 Real)
   (round Real)
   ;; parameters
   (source Real)
   (val Real)))


;;
;; Initial state
;;
(define-states init state
  (and
   (= round 0)
   (= cx!0!0 0)
   (= cx!0!1 0)
   (= cx!0!2 0)
   (= cx!0!3 0)
   (= cx!0!4 0)
   (= cx!0!5 0)
   (= cx!0!6 0)
   (= cx!0!7 0)
   (= cx!0!8 0)
   (= cx!0!9 0)
   (= cx!0!10 0)
   (= cx!0!11 0)
   (= cx!0!12 0)
   (= cx!0!13 0)
   (= cx!0!14 0)
   (= cx!0!15 0)
   (= cx!1!0 0)
   (= cx!1!1 0)
   (= cx!1!2 0)
   (= cx!1!3 0)
   (= cx!1!4 0)
   (= cx!1!5 0)
   (= cx!1!6 0)
   (= cx!1!7 0)
   (= cx!1!8 0)
   (= cx!1!9 0)
   (= cx!1!10 0)
   (= cx!1!11 0)
   (= cx!1!12 0)
   (= cx!1!13 0)
   (= cx!1!14 0)
   (= cx!1!15 0)
   (= cx!2!0 0)
   (= cx!2!1 0)
   (= cx!2!2 0)
   (= cx!2!3 0)
   (= cx!2!4 0)
   (= cx!2!5 0)
   (= cx!2!6 0)
   (= cx!2!7 0)
   (= cx!2!8 0)
   (= cx!2!9 0)
   (= cx!2!10 0)
   (= cx!2!11 0)
   (= cx!2!12 0)
   (= cx!2!13 0)
   (= cx!2!14 0)
   (= cx!2!15 0)
   (= cy!0!0 0)
   (= cy!0!1 0)
   (= cy!0!2 0)
   (= cy!0!3 0)
   (= cy!0!4 0)
   (= cy!0!5 0)
   (= cy!0!6 0)
   (= cy!0!7 0)
   (= cy!0!8 0)
   (= cy!0!9 0)
   (= cy!0!10 0)
   (= cy!0!11 0)
   (= cy!0!12 0)
   (= cy!0!13 0)
   (= cy!0!14 0)
   (= cy!0!15 0)
   (= cy!1!0 0)
   (= cy!1!1 0)
   (= cy!1!2 0)
   (= cy!1!3 0)
   (= cy!1!4 0)
   (= cy!1!5 0)
   (= cy!1!6 0)
   (= cy!1!7 0)
   (= cy!1!8 0)
   (= cy!1!9 0)
   (= cy!1!10 0)
   (= cy!1!11 0)
   (= cy!1!12 0)
   (= cy!1!13 0)
   (= cy!1!14 0)
   (= cy!1!15 0)
   (= cy!2!0 0)
   (= cy!2!1 0)
   (= cy!2!2 0)
   (= cy!2!3 0)
   (= cy!2!4 0)
   (= cy!2!5 0)
   (= cy!2!6 0)
   (= cy!2!7 0)
   (= cy!2!8 0)
   (= cy!2!9 0)
   (= cy!2!10 0)
   (= cy!2!11 0)
   (= cy!2!12 0)
   (= cy!2!13 0)
   (= cy!2!14 0)
   (= cy!2!15 0)
   ;;
   ;; Constraints on val and source
   ;;
   (or (= source 1) (= source 2) (= source 3))
   (not (= val 0))
   ;;
   ;; Fault model
   ;;
   (and good_p!0 good_p!1 good_p!2)
   (or
    (and
     (not good_r!0)
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!1)
     good_r!0
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!2)
     good_r!0
     good_r!1
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!3)
     good_r!0
     good_r!1
     good_r!2
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!4)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!5)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!6)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!7)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!8)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!9)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!10)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!11)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!12
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!12)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!13
     good_r!14
     good_r!15)
    (and
     (not good_r!13)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!14
     good_r!15)
    (and
     (not good_r!14)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!15)
    (and
     (not good_r!15)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14))))


;;
;; Transition relation
;; 
(define-transition trans state
  (let ((cond!1 (= source 2))
	(cond!2 (= source 3))
	(cs!965 (not good_r!0))
	(cs!967 (not good_r!1))
	(cs!969 (not good_r!2))
	(cs!971 (not good_r!3))
	(cs!973 (not good_r!4))
	(cs!975 (not good_r!5))
	(cs!977 (not good_r!6))
	(cs!979 (not good_r!7))
	(cs!981 (not good_r!8))
	(cs!983 (not good_r!9))
	(cs!985 (not good_r!10))
	(cs!987 (not good_r!11))
	(cs!989 (not good_r!12))
	(cs!991 (not good_r!13))
	(cs!993 (not good_r!14))
	(cs!1027 (not good_r!15))
	(cs!1045 (not good_p!0))
	(cs!1062 (not good_p!1))
	(cs!1079 (not good_p!2))
	(cs!1096
	 (and
	  (= cx!0!0' cx!0!0)
	  (= cx!0!1' cx!0!1)
	  (= cx!0!2' cx!0!2)
	  (= cx!0!3' cx!0!3)
	  (= cx!0!4' cx!0!4)
	  (= cx!0!5' cx!0!5)
	  (= cx!0!6' cx!0!6)
	  (= cx!0!7' cx!0!7)
	  (= cx!0!8' cx!0!8)
	  (= cx!0!9' cx!0!9)
	  (= cx!0!10' cx!0!10)
	  (= cx!0!11' cx!0!11)
	  (= cx!0!12' cx!0!12)
	  (= cx!0!13' cx!0!13)
	  (= cx!0!14' cx!0!14)
	  (= cx!0!15' cx!0!15)
	  (= cx!1!0' cx!1!0)
	  (= cx!1!1' cx!1!1)
	  (= cx!1!2' cx!1!2)
	  (= cx!1!3' cx!1!3)
	  (= cx!1!4' cx!1!4)
	  (= cx!1!5' cx!1!5)
	  (= cx!1!6' cx!1!6)
	  (= cx!1!7' cx!1!7)
	  (= cx!1!8' cx!1!8)
	  (= cx!1!9' cx!1!9)
	  (= cx!1!10' cx!1!10)
	  (= cx!1!11' cx!1!11)
	  (= cx!1!12' cx!1!12)
	  (= cx!1!13' cx!1!13)
	  (= cx!1!14' cx!1!14)
	  (= cx!1!15' cx!1!15)
	  (= cx!2!0' cx!2!0)
	  (= cx!2!1' cx!2!1)
	  (= cx!2!2' cx!2!2)
	  (= cx!2!3' cx!2!3)
	  (= cx!2!4' cx!2!4)
	  (= cx!2!5' cx!2!5)
	  (= cx!2!6' cx!2!6)
	  (= cx!2!7' cx!2!7)
	  (= cx!2!8' cx!2!8)
	  (= cx!2!9' cx!2!9)
	  (= cx!2!10' cx!2!10)
	  (= cx!2!11' cx!2!11)
	  (= cx!2!12' cx!2!12)
	  (= cx!2!13' cx!2!13)
	  (= cx!2!14' cx!2!14)
	  (= cx!2!15' cx!2!15)))
	(cs!1097
	 (and
	  (= cy!0!0' cy!0!0)
	  (= cy!0!1' cy!0!1)
	  (= cy!0!2' cy!0!2)
	  (= cy!0!3' cy!0!3)
	  (= cy!0!4' cy!0!4)
	  (= cy!0!5' cy!0!5)
	  (= cy!0!6' cy!0!6)
	  (= cy!0!7' cy!0!7)
	  (= cy!0!8' cy!0!8)
	  (= cy!0!9' cy!0!9)
	  (= cy!0!10' cy!0!10)
	  (= cy!0!11' cy!0!11)
	  (= cy!0!12' cy!0!12)
	  (= cy!0!13' cy!0!13)
	  (= cy!0!14' cy!0!14)
	  (= cy!0!15' cy!0!15)
	  (= cy!1!0' cy!1!0)
	  (= cy!1!1' cy!1!1)
	  (= cy!1!2' cy!1!2)
	  (= cy!1!3' cy!1!3)
	  (= cy!1!4' cy!1!4)
	  (= cy!1!5' cy!1!5)
	  (= cy!1!6' cy!1!6)
	  (= cy!1!7' cy!1!7)
	  (= cy!1!8' cy!1!8)
	  (= cy!1!9' cy!1!9)
	  (= cy!1!10' cy!1!10)
	  (= cy!1!11' cy!1!11)
	  (= cy!1!12' cy!1!12)
	  (= cy!1!13' cy!1!13)
	  (= cy!1!14' cy!1!14)
	  (= cy!1!15' cy!1!15)
	  (= cy!2!0' cy!2!0)
	  (= cy!2!1' cy!2!1)
	  (= cy!2!2' cy!2!2)
	  (= cy!2!3' cy!2!3)
	  (= cy!2!4' cy!2!4)
	  (= cy!2!5' cy!2!5)
	  (= cy!2!6' cy!2!6)
	  (= cy!2!7' cy!2!7)
	  (= cy!2!8' cy!2!8)
	  (= cy!2!9' cy!2!9)
	  (= cy!2!10' cy!2!10)
	  (= cy!2!11' cy!2!11)
	  (= cy!2!12' cy!2!12)
	  (= cy!2!13' cy!2!13)
	  (= cy!2!14' cy!2!14)
	  (= cy!2!15' cy!2!15)))
	(cs!1098
	 (and
	  (= good_p!0' good_p!0)
	  (= good_p!1' good_p!1)
	  (= good_p!2' good_p!2)))
	(cs!1099
	 (and
	  (= good_r!0' good_r!0)
	  (= good_r!1' good_r!1)
	  (= good_r!2' good_r!2)
	  (= good_r!3' good_r!3)
	  (= good_r!4' good_r!4)
	  (= good_r!5' good_r!5)
	  (= good_r!6' good_r!6)
	  (= good_r!7' good_r!7)
	  (= good_r!8' good_r!8)
	  (= good_r!9' good_r!9)
	  (= good_r!10' good_r!10)
	  (= good_r!11' good_r!11)
	  (= good_r!12' good_r!12)
	  (= good_r!13' good_r!13)
	  (= good_r!14' good_r!14)
	  (= good_r!15' good_r!15)))
	(cs!1100
	 (and (= v!0' v!0) (= v!1' v!1) (= v!2' v!2))))
    (let ((cs!966
	   (cond (cond!2 cx!2!0) (cond!1 cx!1!0) (else cx!0!0)))
	  (cs!968
	   (cond (cond!2 cx!2!1) (cond!1 cx!1!1) (else cx!0!1)))
	  (cs!970
	   (cond (cond!2 cx!2!2) (cond!1 cx!1!2) (else cx!0!2)))
	  (cs!972
	   (cond (cond!2 cx!2!3) (cond!1 cx!1!3) (else cx!0!3)))
	  (cs!974
	   (cond (cond!2 cx!2!4) (cond!1 cx!1!4) (else cx!0!4)))
	  (cs!976
	   (cond (cond!2 cx!2!5) (cond!1 cx!1!5) (else cx!0!5)))
	  (cs!978
	   (cond (cond!2 cx!2!6) (cond!1 cx!1!6) (else cx!0!6)))
	  (cs!980
	   (cond (cond!2 cx!2!7) (cond!1 cx!1!7) (else cx!0!7)))
	  (cs!982
	   (cond (cond!2 cx!2!8) (cond!1 cx!1!8) (else cx!0!8)))
	  (cs!984
	   (cond (cond!2 cx!2!9) (cond!1 cx!1!9) (else cx!0!9)))
	  (cs!986
	   (cond (cond!2 cx!2!10) (cond!1 cx!1!10) (else cx!0!10)))
	  (cs!988
	   (cond (cond!2 cx!2!11) (cond!1 cx!1!11) (else cx!0!11)))
	  (cs!990
	   (cond (cond!2 cx!2!12) (cond!1 cx!1!12) (else cx!0!12)))
	  (cs!992
	   (cond (cond!2 cx!2!13) (cond!1 cx!1!13) (else cx!0!13)))
	  (cs!994
	   (cond (cond!2 cx!2!14) (cond!1 cx!1!14) (else cx!0!14)))
	  (cs!1044
	   (cond (cond!2 cx!2!15) (cond!1 cx!1!15) (else cx!0!15))))
      (let ((new_k!33 (ite (= cy!0!14 cy!0!15) 2 0))
	    (new_k!61 (ite (= cy!1!14 cy!1!15) 2 0))
	    (new_k!89 (ite (= cy!2!14 cy!2!15) 2 0)))
	(let ((cs!1146 (= new_k!33 0))
	      (cs!1159 (= new_k!61 0))
	      (cs!1172 (= new_k!89 0)))
	  (let ((new_k!34
		 (cond
		  (cs!1146 1)
		  ((= cy!0!13 cy!0!15) (+ new_k!33 1))
		  (else (- new_k!33 1))))
		(new_x!17 (ite cs!1146 cy!0!13 cy!0!15))
		(new_k!62
		 (cond
		  (cs!1159 1)
		  ((= cy!1!13 cy!1!15) (+ new_k!61 1))
		  (else (- new_k!61 1))))
		(new_x!29 (ite cs!1159 cy!1!13 cy!1!15))
		(new_k!90
		 (cond
		  (cs!1172 1)
		  ((= cy!2!13 cy!2!15) (+ new_k!89 1))
		  (else (- new_k!89 1))))
		(new_x!41 (ite cs!1172 cy!2!13 cy!2!15)))
	    (let ((cs!1147 (= new_k!34 0))
		  (cs!1160 (= new_k!62 0))
		  (cs!1173 (= new_k!90 0)))
	      (let ((new_k!35
		     (cond
		      (cs!1147 1)
		      ((= cy!0!12 new_x!17) (+ new_k!34 1))
		      (else (- new_k!34 1))))
		    (new_x!18 (ite cs!1147 cy!0!12 new_x!17))
		    (new_k!63
		     (cond
		      (cs!1160 1)
		      ((= cy!1!12 new_x!29) (+ new_k!62 1))
		      (else (- new_k!62 1))))
		    (new_x!30 (ite cs!1160 cy!1!12 new_x!29))
		    (new_k!91
		     (cond
		      (cs!1173 1)
		      ((= cy!2!12 new_x!41) (+ new_k!90 1))
		      (else (- new_k!90 1))))
		    (new_x!42 (ite cs!1173 cy!2!12 new_x!41)))
		(let ((cs!1148 (= new_k!35 0))
		      (cs!1161 (= new_k!63 0))
		      (cs!1174 (= new_k!91 0)))
		  (let ((new_k!36
			 (cond
			  (cs!1148 1)
			  ((= cy!0!11 new_x!18) (+ new_k!35 1))
			  (else (- new_k!35 1))))
			(new_x!19 (ite cs!1148 cy!0!11 new_x!18))
			(new_k!64
			 (cond
			  (cs!1161 1)
			  ((= cy!1!11 new_x!30) (+ new_k!63 1))
			  (else (- new_k!63 1))))
			(new_x!31 (ite cs!1161 cy!1!11 new_x!30))
			(new_k!92
			 (cond
			  (cs!1174 1)
			  ((= cy!2!11 new_x!42) (+ new_k!91 1))
			  (else (- new_k!91 1))))
			(new_x!43 (ite cs!1174 cy!2!11 new_x!42)))
		    (let ((cs!1149 (= new_k!36 0))
			  (cs!1162 (= new_k!64 0))
			  (cs!1175 (= new_k!92 0)))
		      (let ((new_k!37
			     (cond
			      (cs!1149 1)
			      ((= cy!0!10 new_x!19) (+ new_k!36 1))
			      (else (- new_k!36 1))))
			    (new_x!20 (ite cs!1149 cy!0!10 new_x!19))
			    (new_k!65
			     (cond
			      (cs!1162 1)
			      ((= cy!1!10 new_x!31) (+ new_k!64 1))
			      (else (- new_k!64 1))))
			    (new_x!32 (ite cs!1162 cy!1!10 new_x!31))
			    (new_k!93
			     (cond
			      (cs!1175 1)
			      ((= cy!2!10 new_x!43) (+ new_k!92 1))
			      (else (- new_k!92 1))))
			    (new_x!44 (ite cs!1175 cy!2!10 new_x!43)))
			(let ((cs!1150 (= new_k!37 0))
			      (cs!1163 (= new_k!65 0))
			      (cs!1176 (= new_k!93 0)))
			  (let ((new_k!38
				 (cond
				  (cs!1150 1)
				  ((= cy!0!9 new_x!20) (+ new_k!37 1))
				  (else (- new_k!37 1))))
				(new_x!21 (ite cs!1150 cy!0!9 new_x!20))
				(new_k!66
				 (cond
				  (cs!1163 1)
				  ((= cy!1!9 new_x!32) (+ new_k!65 1))
				  (else (- new_k!65 1))))
				(new_x!33 (ite cs!1163 cy!1!9 new_x!32))
				(new_k!94
				 (cond
				  (cs!1176 1)
				  ((= cy!2!9 new_x!44) (+ new_k!93 1))
				  (else (- new_k!93 1))))
				(new_x!45 (ite cs!1176 cy!2!9 new_x!44)))
			    (let ((cs!1151 (= new_k!38 0))
				  (cs!1164 (= new_k!66 0))
				  (cs!1177 (= new_k!94 0)))
			      (let ((new_k!39
				     (cond
				      (cs!1151 1)
				      ((= cy!0!8 new_x!21) (+ new_k!38 1))
				      (else (- new_k!38 1))))
				    (new_x!22 (ite cs!1151 cy!0!8 new_x!21))
				    (new_k!67
				     (cond
				      (cs!1164 1)
				      ((= cy!1!8 new_x!33) (+ new_k!66 1))
				      (else (- new_k!66 1))))
				    (new_x!34 (ite cs!1164 cy!1!8 new_x!33))
				    (new_k!95
				     (cond
				      (cs!1177 1)
				      ((= cy!2!8 new_x!45) (+ new_k!94 1))
				      (else (- new_k!94 1))))
				    (new_x!46 (ite cs!1177 cy!2!8 new_x!45)))
				(let ((cs!1152 (= new_k!39 0))
				      (cs!1165 (= new_k!67 0))
				      (cs!1178 (= new_k!95 0)))
				  (let ((new_k!40
					 (cond
					  (cs!1152 1)
					  ((= cy!0!7 new_x!22) (+ new_k!39 1))
					  (else (- new_k!39 1))))
					(new_x!23 (ite cs!1152 cy!0!7 new_x!22))
					(new_k!68
					 (cond
					  (cs!1165 1)
					  ((= cy!1!7 new_x!34) (+ new_k!67 1))
					  (else (- new_k!67 1))))
					(new_x!35 (ite cs!1165 cy!1!7 new_x!34))
					(new_k!96
					 (cond
					  (cs!1178 1)
					  ((= cy!2!7 new_x!46) (+ new_k!95 1))
					  (else (- new_k!95 1))))
					(new_x!47 (ite cs!1178 cy!2!7 new_x!46)))
				    (let ((cs!1153 (= new_k!40 0))
					  (cs!1166 (= new_k!68 0))
					  (cs!1179 (= new_k!96 0)))
				      (let ((new_k!41
					     (cond
					      (cs!1153 1)
					      ((= cy!0!6 new_x!23) (+ new_k!40 1))
					      (else (- new_k!40 1))))
					    (new_x!24 (ite cs!1153 cy!0!6 new_x!23))
					    (new_k!69
					     (cond
					      (cs!1166 1)
					      ((= cy!1!6 new_x!35) (+ new_k!68 1))
					      (else (- new_k!68 1))))
					    (new_x!36 (ite cs!1166 cy!1!6 new_x!35))
					    (new_k!97
					     (cond
					      (cs!1179 1)
					      ((= cy!2!6 new_x!47) (+ new_k!96 1))
					      (else (- new_k!96 1))))
					    (new_x!48 (ite cs!1179 cy!2!6 new_x!47)))
					(let ((cs!1154 (= new_k!41 0))
					      (cs!1167 (= new_k!69 0))
					      (cs!1180 (= new_k!97 0)))
					  (let ((new_k!42
						 (cond
						  (cs!1154 1)
						  ((= cy!0!5 new_x!24) (+ new_k!41 1))
						  (else (- new_k!41 1))))
						(new_x!25 (ite cs!1154 cy!0!5 new_x!24))
						(new_k!70
						 (cond
						  (cs!1167 1)
						  ((= cy!1!5 new_x!36) (+ new_k!69 1))
						  (else (- new_k!69 1))))
						(new_x!37 (ite cs!1167 cy!1!5 new_x!36))
						(new_k!98
						 (cond
						  (cs!1180 1)
						  ((= cy!2!5 new_x!48) (+ new_k!97 1))
						  (else (- new_k!97 1))))
						(new_x!49 (ite cs!1180 cy!2!5 new_x!48)))
					    (let ((cs!1155 (= new_k!42 0))
						  (cs!1168 (= new_k!70 0))
						  (cs!1181 (= new_k!98 0)))
					      (let ((new_k!43
						     (cond
						      (cs!1155 1)
						      ((= cy!0!4 new_x!25) (+ new_k!42 1))
						      (else (- new_k!42 1))))
						    (new_x!26 (ite cs!1155 cy!0!4 new_x!25))
						    (new_k!71
						     (cond
						      (cs!1168 1)
						      ((= cy!1!4 new_x!37) (+ new_k!70 1))
						      (else (- new_k!70 1))))
						    (new_x!38 (ite cs!1168 cy!1!4 new_x!37))
						    (new_k!99
						     (cond
						      (cs!1181 1)
						      ((= cy!2!4 new_x!49) (+ new_k!98 1))
						      (else (- new_k!98 1))))
						    (new_x!50 (ite cs!1181 cy!2!4 new_x!49)))
						(let ((cs!1156 (= new_k!43 0))
						      (cs!1169 (= new_k!71 0))
						      (cs!1182 (= new_k!99 0)))
						  (let ((new_k!44
							 (cond
							  (cs!1156 1)
							  ((= cy!0!3 new_x!26) (+ new_k!43 1))
							  (else (- new_k!43 1))))
							(new_x!27 (ite cs!1156 cy!0!3 new_x!26))
							(new_k!72
							 (cond
							  (cs!1169 1)
							  ((= cy!1!3 new_x!38) (+ new_k!71 1))
							  (else (- new_k!71 1))))
							(new_x!39 (ite cs!1169 cy!1!3 new_x!38))
							(new_k!100
							 (cond
							  (cs!1182 1)
							  ((= cy!2!3 new_x!50) (+ new_k!99 1))
							  (else (- new_k!99 1))))
							(new_x!51 (ite cs!1182 cy!2!3 new_x!50)))
						    (let ((cs!1157 (= new_k!44 0))
							  (cs!1170 (= new_k!72 0))
							  (cs!1183 (= new_k!100 0)))
						      (let ((new_k!45
							     (cond
							      (cs!1157 1)
							      ((= cy!0!2 new_x!27) (+ new_k!44 1))
							      (else (- new_k!44 1))))
							    (new_x!28 (ite cs!1157 cy!0!2 new_x!27))
							    (new_k!73
							     (cond
							      (cs!1170 1)
							      ((= cy!1!2 new_x!39) (+ new_k!72 1))
							      (else (- new_k!72 1))))
							    (new_x!40 (ite cs!1170 cy!1!2 new_x!39))
							    (new_k!101
							     (cond
							      (cs!1183 1)
							      ((= cy!2!2 new_x!51) (+ new_k!100 1))
							      (else (- new_k!100 1))))
							    (new_x!52 (ite cs!1183 cy!2!2 new_x!51)))
							(let ((cs!1158 (= new_k!45 0))
							      (cs!1171 (= new_k!73 0))
							      (cs!1184 (= new_k!101 0)))
							  (let ((x!36
								 (cond
								  ((=
								    (cond
								     (cs!1158 1)
								     ((= cy!0!1 new_x!28) (+ new_k!45 1))
								     (else (- new_k!45 1)))
								    0)
								   cy!0!0)
								  (cs!1158 cy!0!1)
								  (else new_x!28)))
								(x!37
								 (cond
								  ((=
								    (cond
								     (cs!1171 1)
								     ((= cy!1!1 new_x!40) (+ new_k!73 1))
								     (else (- new_k!73 1)))
								    0)
								   cy!1!0)
								  (cs!1171 cy!1!1)
								  (else new_x!40)))
								(x!38
								 (cond
								  ((=
								    (cond
								     (cs!1184 1)
								     ((= cy!2!1 new_x!52) (+ new_k!101 1))
								     (else (- new_k!101 1)))
								    0)
								   cy!2!0)
								  (cs!1184 cy!2!1)
								  (else new_x!52))))
							    (let ((new_k!46 (ite (= cy!0!15 x!36) 8 9))
								  (new_k!74 (ite (= cy!1!15 x!37) 8 9))
								  (new_k!102 (ite (= cy!2!15 x!38) 8 9)))
							      (let ((new_k!47
								     (ite (= cy!0!14 x!36) (- new_k!46 1) new_k!46))
								    (new_k!75
								     (ite (= cy!1!14 x!37) (- new_k!74 1) new_k!74))
								    (new_k!103
								     (ite (= cy!2!14 x!38) (- new_k!102 1) new_k!102)))
								(let ((new_k!48
								       (ite (= cy!0!13 x!36) (- new_k!47 1) new_k!47))
								      (new_k!76
								       (ite (= cy!1!13 x!37) (- new_k!75 1) new_k!75))
								      (new_k!104
								       (ite (= cy!2!13 x!38) (- new_k!103 1) new_k!103)))
								  (let ((new_k!49
									 (ite (= cy!0!12 x!36) (- new_k!48 1) new_k!48))
									(new_k!77
									 (ite (= cy!1!12 x!37) (- new_k!76 1) new_k!76))
									(new_k!105
									 (ite (= cy!2!12 x!38) (- new_k!104 1) new_k!104)))
								    (let ((new_k!50
									   (ite (= cy!0!11 x!36) (- new_k!49 1) new_k!49))
									  (new_k!78
									   (ite (= cy!1!11 x!37) (- new_k!77 1) new_k!77))
									  (new_k!106
									   (ite (= cy!2!11 x!38) (- new_k!105 1) new_k!105)))
								      (let ((new_k!51
									     (ite (= cy!0!10 x!36) (- new_k!50 1) new_k!50))
									    (new_k!79
									     (ite (= cy!1!10 x!37) (- new_k!78 1) new_k!78))
									    (new_k!107
									     (ite (= cy!2!10 x!38) (- new_k!106 1) new_k!106)))
									(let ((new_k!52
									       (ite (= cy!0!9 x!36) (- new_k!51 1) new_k!51))
									      (new_k!80 (ite (= cy!1!9 x!37) (- new_k!79 1) new_k!79))
									      (new_k!108
									       (ite (= cy!2!9 x!38) (- new_k!107 1) new_k!107)))
									  (let ((new_k!53
										 (ite (= cy!0!8 x!36) (- new_k!52 1) new_k!52))
										(new_k!81 (ite (= cy!1!8 x!37) (- new_k!80 1) new_k!80))
										(new_k!109
										 (ite (= cy!2!8 x!38) (- new_k!108 1) new_k!108)))
									    (let ((new_k!54
										   (ite (= cy!0!7 x!36) (- new_k!53 1) new_k!53))
										  (new_k!82 (ite (= cy!1!7 x!37) (- new_k!81 1) new_k!81))
										  (new_k!110
										   (ite (= cy!2!7 x!38) (- new_k!109 1) new_k!109)))
									      (let ((new_k!55
										     (ite (= cy!0!6 x!36) (- new_k!54 1) new_k!54))
										    (new_k!83 (ite (= cy!1!6 x!37) (- new_k!82 1) new_k!82))
										    (new_k!111
										     (ite (= cy!2!6 x!38) (- new_k!110 1) new_k!110)))
										(let ((new_k!56
										       (ite (= cy!0!5 x!36) (- new_k!55 1) new_k!55))
										      (new_k!84 (ite (= cy!1!5 x!37) (- new_k!83 1) new_k!83))
										      (new_k!112
										       (ite (= cy!2!5 x!38) (- new_k!111 1) new_k!111)))
										  (let ((new_k!57
											 (ite (= cy!0!4 x!36) (- new_k!56 1) new_k!56))
											(new_k!85 (ite (= cy!1!4 x!37) (- new_k!84 1) new_k!84))
											(new_k!113
											 (ite (= cy!2!4 x!38) (- new_k!112 1) new_k!112)))
										    (let ((new_k!58
											   (ite (= cy!0!3 x!36) (- new_k!57 1) new_k!57))
											  (new_k!86 (ite (= cy!1!3 x!37) (- new_k!85 1) new_k!85))
											  (new_k!114
											   (ite (= cy!2!3 x!38) (- new_k!113 1) new_k!113)))
										      (let ((new_k!59
											     (ite (= cy!0!2 x!36) (- new_k!58 1) new_k!58))
											    (new_k!87 (ite (= cy!1!2 x!37) (- new_k!86 1) new_k!86))
											    (new_k!115
											     (ite (= cy!2!2 x!38) (- new_k!114 1) new_k!114)))
											(let ((new_k!60
											       (ite (= cy!0!1 x!36) (- new_k!59 1) new_k!59))
											      (new_k!88 (ite (= cy!1!1 x!37) (- new_k!87 1) new_k!87))
											      (new_k!116
											       (ite (= cy!2!1 x!38) (- new_k!115 1) new_k!115)))
											  (and
											   (= source' source)
											   (= val' val)
											   (or
											    (and
											     (= round 0)
											     (and
											      (or
											       cs!1045
											       (/= 1 source)
											       (and
												(= cx!0!0' val)
												(= cx!0!1' val)
												(= cx!0!2' val)
												(= cx!0!3' val)
												(= cx!0!4' val)
												(= cx!0!5' val)
												(= cx!0!6' val)
												(= cx!0!7' val)
												(= cx!0!8' val)
												(= cx!0!9' val)
												(= cx!0!10' val)
												(= cx!0!11' val)
												(= cx!0!12' val)
												(= cx!0!13' val)
												(= cx!0!14' val)
												(= cx!0!15' val)))
											      (or
											       cs!1062
											       (/= 2 source)
											       (and
												(= cx!1!0' val)
												(= cx!1!1' val)
												(= cx!1!2' val)
												(= cx!1!3' val)
												(= cx!1!4' val)
												(= cx!1!5' val)
												(= cx!1!6' val)
												(= cx!1!7' val)
												(= cx!1!8' val)
												(= cx!1!9' val)
												(= cx!1!10' val)
												(= cx!1!11' val)
												(= cx!1!12' val)
												(= cx!1!13' val)
												(= cx!1!14' val)
												(= cx!1!15' val)))
											      (or
											       cs!1079
											       (/= 3 source)
											       (and
												(= cx!2!0' val)
												(= cx!2!1' val)
												(= cx!2!2' val)
												(= cx!2!3' val)
												(= cx!2!4' val)
												(= cx!2!5' val)
												(= cx!2!6' val)
												(= cx!2!7' val)
												(= cx!2!8' val)
												(= cx!2!9' val)
												(= cx!2!10' val)
												(= cx!2!11' val)
												(= cx!2!12' val)
												(= cx!2!13' val)
												(= cx!2!14' val)
												(= cx!2!15' val)))
											      (or
											       cs!1045
											       (= 1 source)
											       (and
												(= cx!0!0' 0)
												(= cx!0!1' 0)
												(= cx!0!2' 0)
												(= cx!0!3' 0)
												(= cx!0!4' 0)
												(= cx!0!5' 0)
												(= cx!0!6' 0)
												(= cx!0!7' 0)
												(= cx!0!8' 0)
												(= cx!0!9' 0)
												(= cx!0!10' 0)
												(= cx!0!11' 0)
												(= cx!0!12' 0)
												(= cx!0!13' 0)
												(= cx!0!14' 0)
												(= cx!0!15' 0)))
											      (or
											       cs!1062
											       (= 2 source)
											       (and
												(= cx!1!0' 0)
												(= cx!1!1' 0)
												(= cx!1!2' 0)
												(= cx!1!3' 0)
												(= cx!1!4' 0)
												(= cx!1!5' 0)
												(= cx!1!6' 0)
												(= cx!1!7' 0)
												(= cx!1!8' 0)
												(= cx!1!9' 0)
												(= cx!1!10' 0)
												(= cx!1!11' 0)
												(= cx!1!12' 0)
												(= cx!1!13' 0)
												(= cx!1!14' 0)
												(= cx!1!15' 0)))
											      (or
											       cs!1079
											       (= 3 source)
											       (and
												(= cx!2!0' 0)
												(= cx!2!1' 0)
												(= cx!2!2' 0)
												(= cx!2!3' 0)
												(= cx!2!4' 0)
												(= cx!2!5' 0)
												(= cx!2!6' 0)
												(= cx!2!7' 0)
												(= cx!2!8' 0)
												(= cx!2!9' 0)
												(= cx!2!10' 0)
												(= cx!2!11' 0)
												(= cx!2!12' 0)
												(= cx!2!13' 0)
												(= cx!2!14' 0)
												(= cx!2!15' 0))))
											     (= round' 1)
											     cs!1097
											     cs!1098
											     cs!1099
											     cs!1100)
											    (and
											     (= round 1)
											     (and
											      (or cs!965 (= cy!0!0' cs!966))
											      (or cs!965 (= cy!1!0' cs!966))
											      (or cs!965 (= cy!2!0' cs!966))
											      (or cs!967 (= cy!0!1' cs!968))
											      (or cs!967 (= cy!1!1' cs!968))
											      (or cs!967 (= cy!2!1' cs!968))
											      (or cs!969 (= cy!0!2' cs!970))
											      (or cs!969 (= cy!1!2' cs!970))
											      (or cs!969 (= cy!2!2' cs!970))
											      (or cs!971 (= cy!0!3' cs!972))
											      (or cs!971 (= cy!1!3' cs!972))
											      (or cs!971 (= cy!2!3' cs!972))
											      (or cs!973 (= cy!0!4' cs!974))
											      (or cs!973 (= cy!1!4' cs!974))
											      (or cs!973 (= cy!2!4' cs!974))
											      (or cs!975 (= cy!0!5' cs!976))
											      (or cs!975 (= cy!1!5' cs!976))
											      (or cs!975 (= cy!2!5' cs!976))
											      (or cs!977 (= cy!0!6' cs!978))
											      (or cs!977 (= cy!1!6' cs!978))
											      (or cs!977 (= cy!2!6' cs!978))
											      (or cs!979 (= cy!0!7' cs!980))
											      (or cs!979 (= cy!1!7' cs!980))
											      (or cs!979 (= cy!2!7' cs!980))
											      (or cs!981 (= cy!0!8' cs!982))
											      (or cs!981 (= cy!1!8' cs!982))
											      (or cs!981 (= cy!2!8' cs!982))
											      (or cs!983 (= cy!0!9' cs!984))
											      (or cs!983 (= cy!1!9' cs!984))
											      (or cs!983 (= cy!2!9' cs!984))
											      (or cs!985 (= cy!0!10' cs!986))
											      (or cs!985 (= cy!1!10' cs!986))
											      (or cs!985 (= cy!2!10' cs!986))
											      (or cs!987 (= cy!0!11' cs!988))
											      (or cs!987 (= cy!1!11' cs!988))
											      (or cs!987 (= cy!2!11' cs!988))
											      (or cs!989 (= cy!0!12' cs!990))
											      (or cs!989 (= cy!1!12' cs!990))
											      (or cs!989 (= cy!2!12' cs!990))
											      (or cs!991 (= cy!0!13' cs!992))
											      (or cs!991 (= cy!1!13' cs!992))
											      (or cs!991 (= cy!2!13' cs!992))
											      (or cs!993 (= cy!0!14' cs!994))
											      (or cs!993 (= cy!1!14' cs!994))
											      (or cs!993 (= cy!2!14' cs!994))
											      (or cs!1027 (= cy!0!15' cs!1044))
											      (or cs!1027 (= cy!1!15' cs!1044))
											      (or cs!1027 (= cy!2!15' cs!1044)))
											     (= round' 2)
											     cs!1096
											     cs!1098
											     cs!1099
											     cs!1100)
											    (and
											     (= round 2)
											     (and
											      (or
											       cs!1045
											       (=
												v!0'
												(ite (or
												      (= new_k!46 0)
												      (= new_k!47 0)
												      (= new_k!48 0)
												      (= new_k!49 0)
												      (= new_k!50 0)
												      (= new_k!51 0)
												      (= new_k!52 0)
												      (= new_k!53 0)
												      (= new_k!54 0)
												      (= new_k!55 0)
												      (= new_k!56 0)
												      (= new_k!57 0)
												      (= new_k!58 0)
												      (= new_k!59 0)
												      (= new_k!60 0)
												      (= (ite (= cy!0!0 x!36) (- new_k!60 1) new_k!60) 0))
												     x!36
												     0)))
											      (or
											       cs!1062
											       (=
												v!1'
												(ite (or
												      (= new_k!74 0)
												      (= new_k!75 0)
												      (= new_k!76 0)
												      (= new_k!77 0)
												      (= new_k!78 0)
												      (= new_k!79 0)
												      (= new_k!80 0)
												      (= new_k!81 0)
												      (= new_k!82 0)
												      (= new_k!83 0)
												      (= new_k!84 0)
												      (= new_k!85 0)
												      (= new_k!86 0)
												      (= new_k!87 0)
												      (= new_k!88 0)
												      (= (ite (= cy!1!0 x!37) (- new_k!88 1) new_k!88) 0))
												     x!37
												     0)))
											      (or
											       cs!1079
											       (=
												v!2'
												(ite (or
												      (= new_k!102 0)
												      (= new_k!103 0)
												      (= new_k!104 0)
												      (= new_k!105 0)
												      (= new_k!106 0)
												      (= new_k!107 0)
												      (= new_k!108 0)
												      (= new_k!109 0)
												      (= new_k!110 0)
												      (= new_k!111 0)
												      (= new_k!112 0)
												      (= new_k!113 0)
												      (= new_k!114 0)
												      (= new_k!115 0)
												      (= new_k!116 0)
												      (= (ite (= cy!2!0 x!38) (- new_k!116 1) new_k!116) 0))
												     x!38
												     0))))
											     (= round' 3)
											     cs!1096
											     cs!1097
											     cs!1098
											     cs!1099)
											    (and
											     (= round 3)
											     cs!1096
											     cs!1097
											     cs!1098
											     cs!1099
											     (= round' round)
											     cs!1100))))))))))))))))))))))))))))))))))))))))))))))))

;;
;; Transition system
;;
(define-transition-system OM
  state
  init
  trans
)

;;
;; Query: validity
;;
(query OM
       (or
        (not
	 (cond
	  ((= source 3) good_p!2)
	  ((= source 2) good_p!1)
	  (else good_p!0)))
        (< round 3)
        (and
	 (or (not good_p!0) (= v!0 val))
	 (or (not good_p!1) (= v!1 val))
	 (or (not good_p!2) (= v!2 val)))))


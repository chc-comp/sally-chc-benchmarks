(set-logic HORN)
(declare-fun invariant (Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Bool Bool Bool Bool Bool Bool Bool Real Real Real Real Real Real) Bool)

;; Initial state
(assert
  (forall ((state.cx!0!0 Real) (state.cx!0!1 Real) (state.cx!0!2 Real) (state.cx!0!3 Real) (state.cx!1!0 Real) (state.cx!1!1 Real) (state.cx!1!2 Real) (state.cx!1!3 Real) (state.cx!2!0 Real) (state.cx!2!1 Real) (state.cx!2!2 Real) (state.cx!2!3 Real) (state.cy!0!0 Real) (state.cy!0!1 Real) (state.cy!0!2 Real) (state.cy!0!3 Real) (state.cy!1!0 Real) (state.cy!1!1 Real) (state.cy!1!2 Real) (state.cy!1!3 Real) (state.cy!2!0 Real) (state.cy!2!1 Real) (state.cy!2!2 Real) (state.cy!2!3 Real) (state.good_p!0 Bool) (state.good_p!1 Bool) (state.good_p!2 Bool) (state.good_r!0 Bool) (state.good_r!1 Bool) (state.good_r!2 Bool) (state.good_r!3 Bool) (state.v!0 Real) (state.v!1 Real) (state.v!2 Real) (state.round Real) (state.source Real) (state.val Real))
    (=> (let ((l0 (= |state.round| 0))) (let ((l1 (= |state.cx!0!0| 0))) (let ((l2 (= |state.cx!0!1| 0))) (let ((l3 (= |state.cx!0!2| 0))) (let ((l4 (= |state.cx!0!3| 0))) (let ((l5 (= |state.cx!1!0| 0))) (let ((l6 (= |state.cx!1!1| 0))) (let ((l7 (= |state.cx!1!2| 0))) (let ((l8 (= |state.cx!1!3| 0))) (let ((l9 (= |state.cx!2!0| 0))) (let ((l10 (= |state.cx!2!1| 0))) (let ((l11 (= |state.cx!2!2| 0))) (let ((l12 (= |state.cx!2!3| 0))) (let ((l13 (= |state.cy!0!0| 0))) (let ((l14 (= |state.cy!0!1| 0))) (let ((l15 (= |state.cy!0!2| 0))) (let ((l16 (= |state.cy!0!3| 0))) (let ((l17 (= |state.cy!1!0| 0))) (let ((l18 (= |state.cy!1!1| 0))) (let ((l19 (= |state.cy!1!2| 0))) (let ((l20 (= |state.cy!1!3| 0))) (let ((l21 (= |state.cy!2!0| 0))) (let ((l22 (= |state.cy!2!1| 0))) (let ((l23 (= |state.cy!2!2| 0))) (let ((l24 (= |state.cy!2!3| 0))) (let ((l25 (= |state.source| 1))) (let ((l26 (= |state.source| 2))) (let ((l27 (= |state.source| 3))) (let ((l28 (or l25 l26 l27))) (let ((l29 (= |state.val| 0))) (let ((l30 (not l29))) (let ((l31 (and |state.good_p!0| |state.good_p!1| |state.good_p!2|))) (let ((l32 (not |state.good_r!0|))) (let ((l33 (and l32 |state.good_r!1| |state.good_r!2| |state.good_r!3|))) (let ((l34 (not |state.good_r!1|))) (let ((l35 (and l34 |state.good_r!0| |state.good_r!2| |state.good_r!3|))) (let ((l36 (not |state.good_r!2|))) (let ((l37 (and l36 |state.good_r!0| |state.good_r!1| |state.good_r!3|))) (let ((l38 (not |state.good_r!3|))) (let ((l39 (and l38 |state.good_r!0| |state.good_r!1| |state.good_r!2|))) (let ((l40 (or l33 l35 l37 l39))) (let ((l41 (and l0 l1 l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l19 l20 l21 l22 l23 l24 l28 l30 l31 l40))) l41))))))))))))))))))))))))))))))))))))))))))
        (invariant state.cx!0!0 state.cx!0!1 state.cx!0!2 state.cx!0!3 state.cx!1!0 state.cx!1!1 state.cx!1!2 state.cx!1!3 state.cx!2!0 state.cx!2!1 state.cx!2!2 state.cx!2!3 state.cy!0!0 state.cy!0!1 state.cy!0!2 state.cy!0!3 state.cy!1!0 state.cy!1!1 state.cy!1!2 state.cy!1!3 state.cy!2!0 state.cy!2!1 state.cy!2!2 state.cy!2!3 state.good_p!0 state.good_p!1 state.good_p!2 state.good_r!0 state.good_r!1 state.good_r!2 state.good_r!3 state.v!0 state.v!1 state.v!2 state.round state.source state.val))
  )
)

;; Transition relation
(assert
  (forall ((state.cx!0!0 Real) (next.cx!0!0 Real) (state.cx!0!1 Real) (next.cx!0!1 Real) (state.cx!0!2 Real) (next.cx!0!2 Real) (state.cx!0!3 Real) (next.cx!0!3 Real) (state.cx!1!0 Real) (next.cx!1!0 Real) (state.cx!1!1 Real) (next.cx!1!1 Real) (state.cx!1!2 Real) (next.cx!1!2 Real) (state.cx!1!3 Real) (next.cx!1!3 Real) (state.cx!2!0 Real) (next.cx!2!0 Real) (state.cx!2!1 Real) (next.cx!2!1 Real) (state.cx!2!2 Real) (next.cx!2!2 Real) (state.cx!2!3 Real) (next.cx!2!3 Real) (state.cy!0!0 Real) (next.cy!0!0 Real) (state.cy!0!1 Real) (next.cy!0!1 Real) (state.cy!0!2 Real) (next.cy!0!2 Real) (state.cy!0!3 Real) (next.cy!0!3 Real) (state.cy!1!0 Real) (next.cy!1!0 Real) (state.cy!1!1 Real) (next.cy!1!1 Real) (state.cy!1!2 Real) (next.cy!1!2 Real) (state.cy!1!3 Real) (next.cy!1!3 Real) (state.cy!2!0 Real) (next.cy!2!0 Real) (state.cy!2!1 Real) (next.cy!2!1 Real) (state.cy!2!2 Real) (next.cy!2!2 Real) (state.cy!2!3 Real) (next.cy!2!3 Real) (state.good_p!0 Bool) (next.good_p!0 Bool) (state.good_p!1 Bool) (next.good_p!1 Bool) (state.good_p!2 Bool) (next.good_p!2 Bool) (state.good_r!0 Bool) (next.good_r!0 Bool) (state.good_r!1 Bool) (next.good_r!1 Bool) (state.good_r!2 Bool) (next.good_r!2 Bool) (state.good_r!3 Bool) (next.good_r!3 Bool) (state.v!0 Real) (next.v!0 Real) (state.v!1 Real) (next.v!1 Real) (state.v!2 Real) (next.v!2 Real) (state.round Real) (next.round Real) (state.source Real) (next.source Real) (state.val Real) (next.val Real))
    (=> (and (invariant state.cx!0!0 state.cx!0!1 state.cx!0!2 state.cx!0!3 state.cx!1!0 state.cx!1!1 state.cx!1!2 state.cx!1!3 state.cx!2!0 state.cx!2!1 state.cx!2!2 state.cx!2!3 state.cy!0!0 state.cy!0!1 state.cy!0!2 state.cy!0!3 state.cy!1!0 state.cy!1!1 state.cy!1!2 state.cy!1!3 state.cy!2!0 state.cy!2!1 state.cy!2!2 state.cy!2!3 state.good_p!0 state.good_p!1 state.good_p!2 state.good_r!0 state.good_r!1 state.good_r!2 state.good_r!3 state.v!0 state.v!1 state.v!2 state.round state.source state.val)
             (let ((l0 (= |next.source| |state.source|))) (let ((l1 (= |next.val| |state.val|))) (let ((l2 (= |state.round| 0))) (let ((l3 (not |state.good_p!0|))) (let ((l4 (= 1 |state.source|))) (let ((l5 (not l4))) (let ((l6 (= |next.cx!0!0| |state.val|))) (let ((l7 (= |next.cx!0!1| |state.val|))) (let ((l8 (= |next.cx!0!2| |state.val|))) (let ((l9 (= |next.cx!0!3| |state.val|))) (let ((l10 (and l6 l7 l8 l9))) (let ((l11 (or l3 l5 l10))) (let ((l12 (not |state.good_p!1|))) (let ((l13 (= 2 |state.source|))) (let ((l14 (not l13))) (let ((l15 (= |next.cx!1!0| |state.val|))) (let ((l16 (= |next.cx!1!1| |state.val|))) (let ((l17 (= |next.cx!1!2| |state.val|))) (let ((l18 (= |next.cx!1!3| |state.val|))) (let ((l19 (and l15 l16 l17 l18))) (let ((l20 (or l12 l14 l19))) (let ((l21 (not |state.good_p!2|))) (let ((l22 (= 3 |state.source|))) (let ((l23 (not l22))) (let ((l24 (= |next.cx!2!0| |state.val|))) (let ((l25 (= |next.cx!2!1| |state.val|))) (let ((l26 (= |next.cx!2!2| |state.val|))) (let ((l27 (= |next.cx!2!3| |state.val|))) (let ((l28 (and l24 l25 l26 l27))) (let ((l29 (or l21 l23 l28))) (let ((l30 (= |next.cx!0!0| 0))) (let ((l31 (= |next.cx!0!1| 0))) (let ((l32 (= |next.cx!0!2| 0))) (let ((l33 (= |next.cx!0!3| 0))) (let ((l34 (and l30 l31 l32 l33))) (let ((l35 (or l3 l4 l34))) (let ((l36 (= |next.cx!1!0| 0))) (let ((l37 (= |next.cx!1!1| 0))) (let ((l38 (= |next.cx!1!2| 0))) (let ((l39 (= |next.cx!1!3| 0))) (let ((l40 (and l36 l37 l38 l39))) (let ((l41 (or l12 l13 l40))) (let ((l42 (= |next.cx!2!0| 0))) (let ((l43 (= |next.cx!2!1| 0))) (let ((l44 (= |next.cx!2!2| 0))) (let ((l45 (= |next.cx!2!3| 0))) (let ((l46 (and l42 l43 l44 l45))) (let ((l47 (or l21 l22 l46))) (let ((l48 (and l11 l20 l29 l35 l41 l47))) (let ((l49 (= |next.round| 1))) (let ((l50 (= |next.cy!0!0| |state.cy!0!0|))) (let ((l51 (= |next.cy!0!1| |state.cy!0!1|))) (let ((l52 (= |next.cy!0!2| |state.cy!0!2|))) (let ((l53 (= |next.cy!0!3| |state.cy!0!3|))) (let ((l54 (= |next.cy!1!0| |state.cy!1!0|))) (let ((l55 (= |next.cy!1!1| |state.cy!1!1|))) (let ((l56 (= |next.cy!1!2| |state.cy!1!2|))) (let ((l57 (= |next.cy!1!3| |state.cy!1!3|))) (let ((l58 (= |next.cy!2!0| |state.cy!2!0|))) (let ((l59 (= |next.cy!2!1| |state.cy!2!1|))) (let ((l60 (= |next.cy!2!2| |state.cy!2!2|))) (let ((l61 (= |next.cy!2!3| |state.cy!2!3|))) (let ((l62 (and l50 l51 l52 l53 l54 l55 l56 l57 l58 l59 l60 l61))) (let ((l63 (= |next.good_p!0| |state.good_p!0|))) (let ((l64 (= |next.good_p!1| |state.good_p!1|))) (let ((l65 (= |next.good_p!2| |state.good_p!2|))) (let ((l66 (and l63 l64 l65))) (let ((l67 (= |next.good_r!0| |state.good_r!0|))) (let ((l68 (= |next.good_r!1| |state.good_r!1|))) (let ((l69 (= |next.good_r!2| |state.good_r!2|))) (let ((l70 (= |next.good_r!3| |state.good_r!3|))) (let ((l71 (and l67 l68 l69 l70))) (let ((l72 (= |next.v!0| |state.v!0|))) (let ((l73 (= |next.v!1| |state.v!1|))) (let ((l74 (= |next.v!2| |state.v!2|))) (let ((l75 (and l72 l73 l74))) (let ((l76 (and l2 l48 l49 l62 l66 l71 l75))) (let ((l77 (= |state.round| 1))) (let ((l78 (not |state.good_r!0|))) (let ((l79 (= |state.source| 3))) (let ((l80 (= |state.source| 2))) (let ((l81 (ite l80 |state.cx!1!0| |state.cx!0!0|))) (let ((l82 (ite l79 |state.cx!2!0| l81))) (let ((l83 (= |next.cy!0!0| l82))) (let ((l84 (or l78 l83))) (let ((l85 (= |next.cy!1!0| l82))) (let ((l86 (or l78 l85))) (let ((l87 (= |next.cy!2!0| l82))) (let ((l88 (or l78 l87))) (let ((l89 (not |state.good_r!1|))) (let ((l90 (ite l80 |state.cx!1!1| |state.cx!0!1|))) (let ((l91 (ite l79 |state.cx!2!1| l90))) (let ((l92 (= |next.cy!0!1| l91))) (let ((l93 (or l89 l92))) (let ((l94 (= |next.cy!1!1| l91))) (let ((l95 (or l89 l94))) (let ((l96 (= |next.cy!2!1| l91))) (let ((l97 (or l89 l96))) (let ((l98 (not |state.good_r!2|))) (let ((l99 (ite l80 |state.cx!1!2| |state.cx!0!2|))) (let ((l100 (ite l79 |state.cx!2!2| l99))) (let ((l101 (= |next.cy!0!2| l100))) (let ((l102 (or l98 l101))) (let ((l103 (= |next.cy!1!2| l100))) (let ((l104 (or l98 l103))) (let ((l105 (= |next.cy!2!2| l100))) (let ((l106 (or l98 l105))) (let ((l107 (not |state.good_r!3|))) (let ((l108 (ite l80 |state.cx!1!3| |state.cx!0!3|))) (let ((l109 (ite l79 |state.cx!2!3| l108))) (let ((l110 (= |next.cy!0!3| l109))) (let ((l111 (or l107 l110))) (let ((l112 (= |next.cy!1!3| l109))) (let ((l113 (or l107 l112))) (let ((l114 (= |next.cy!2!3| l109))) (let ((l115 (or l107 l114))) (let ((l116 (and l84 l86 l88 l93 l95 l97 l102 l104 l106 l111 l113 l115))) (let ((l117 (= |next.round| 2))) (let ((l118 (= |next.cx!0!0| |state.cx!0!0|))) (let ((l119 (= |next.cx!0!1| |state.cx!0!1|))) (let ((l120 (= |next.cx!0!2| |state.cx!0!2|))) (let ((l121 (= |next.cx!0!3| |state.cx!0!3|))) (let ((l122 (= |next.cx!1!0| |state.cx!1!0|))) (let ((l123 (= |next.cx!1!1| |state.cx!1!1|))) (let ((l124 (= |next.cx!1!2| |state.cx!1!2|))) (let ((l125 (= |next.cx!1!3| |state.cx!1!3|))) (let ((l126 (= |next.cx!2!0| |state.cx!2!0|))) (let ((l127 (= |next.cx!2!1| |state.cx!2!1|))) (let ((l128 (= |next.cx!2!2| |state.cx!2!2|))) (let ((l129 (= |next.cx!2!3| |state.cx!2!3|))) (let ((l130 (and l118 l119 l120 l121 l122 l123 l124 l125 l126 l127 l128 l129))) (let ((l131 (and l77 l116 l117 l130 l66 l71 l75))) (let ((l132 (= |state.round| 2))) (let ((l133 (= |state.cy!0!2| |state.cy!0!3|))) (let ((l134 (ite l133 2 0))) (let ((l135 (= l134 0))) (let ((l136 (= |state.cy!0!1| |state.cy!0!3|))) (let ((l137 (+ l134 1))) (let ((l138 (- l134 1))) (let ((l139 (ite l136 l137 l138))) (let ((l140 (ite l135 1 l139))) (let ((l141 (= l140 0))) (let ((l142 (ite l135 |state.cy!0!1| |state.cy!0!3|))) (let ((l143 (ite l141 |state.cy!0!0| l142))) (let ((l144 (= |state.cy!0!3| l143))) (let ((l145 (ite l144 2 3))) (let ((l146 (= l145 0))) (let ((l147 (= |state.cy!0!2| l143))) (let ((l148 (- l145 1))) (let ((l149 (ite l147 l148 l145))) (let ((l150 (= l149 0))) (let ((l151 (= |state.cy!0!1| l143))) (let ((l152 (- l149 1))) (let ((l153 (ite l151 l152 l149))) (let ((l154 (= l153 0))) (let ((l155 (= |state.cy!0!0| l143))) (let ((l156 (- l153 1))) (let ((l157 (ite l155 l156 l153))) (let ((l158 (= l157 0))) (let ((l159 (or l146 l150 l154 l158))) (let ((l160 (ite l159 l143 0))) (let ((l161 (= |next.v!0| l160))) (let ((l162 (or l3 l161))) (let ((l163 (= |state.cy!1!2| |state.cy!1!3|))) (let ((l164 (ite l163 2 0))) (let ((l165 (= l164 0))) (let ((l166 (= |state.cy!1!1| |state.cy!1!3|))) (let ((l167 (+ l164 1))) (let ((l168 (- l164 1))) (let ((l169 (ite l166 l167 l168))) (let ((l170 (ite l165 1 l169))) (let ((l171 (= l170 0))) (let ((l172 (ite l165 |state.cy!1!1| |state.cy!1!3|))) (let ((l173 (ite l171 |state.cy!1!0| l172))) (let ((l174 (= |state.cy!1!3| l173))) (let ((l175 (ite l174 2 3))) (let ((l176 (= l175 0))) (let ((l177 (= |state.cy!1!2| l173))) (let ((l178 (- l175 1))) (let ((l179 (ite l177 l178 l175))) (let ((l180 (= l179 0))) (let ((l181 (= |state.cy!1!1| l173))) (let ((l182 (- l179 1))) (let ((l183 (ite l181 l182 l179))) (let ((l184 (= l183 0))) (let ((l185 (= |state.cy!1!0| l173))) (let ((l186 (- l183 1))) (let ((l187 (ite l185 l186 l183))) (let ((l188 (= l187 0))) (let ((l189 (or l176 l180 l184 l188))) (let ((l190 (ite l189 l173 0))) (let ((l191 (= |next.v!1| l190))) (let ((l192 (or l12 l191))) (let ((l193 (= |state.cy!2!2| |state.cy!2!3|))) (let ((l194 (ite l193 2 0))) (let ((l195 (= l194 0))) (let ((l196 (= |state.cy!2!1| |state.cy!2!3|))) (let ((l197 (+ l194 1))) (let ((l198 (- l194 1))) (let ((l199 (ite l196 l197 l198))) (let ((l200 (ite l195 1 l199))) (let ((l201 (= l200 0))) (let ((l202 (ite l195 |state.cy!2!1| |state.cy!2!3|))) (let ((l203 (ite l201 |state.cy!2!0| l202))) (let ((l204 (= |state.cy!2!3| l203))) (let ((l205 (ite l204 2 3))) (let ((l206 (= l205 0))) (let ((l207 (= |state.cy!2!2| l203))) (let ((l208 (- l205 1))) (let ((l209 (ite l207 l208 l205))) (let ((l210 (= l209 0))) (let ((l211 (= |state.cy!2!1| l203))) (let ((l212 (- l209 1))) (let ((l213 (ite l211 l212 l209))) (let ((l214 (= l213 0))) (let ((l215 (= |state.cy!2!0| l203))) (let ((l216 (- l213 1))) (let ((l217 (ite l215 l216 l213))) (let ((l218 (= l217 0))) (let ((l219 (or l206 l210 l214 l218))) (let ((l220 (ite l219 l203 0))) (let ((l221 (= |next.v!2| l220))) (let ((l222 (or l21 l221))) (let ((l223 (and l162 l192 l222))) (let ((l224 (= |next.round| 3))) (let ((l225 (and l132 l223 l224 l130 l62 l66 l71))) (let ((l226 (= |state.round| 3))) (let ((l227 (= |next.round| |state.round|))) (let ((l228 (and l226 l130 l62 l66 l71 l227 l75))) (let ((l229 (or l76 l131 l225 l228))) (let ((l230 (and l0 l1 l229))) l230)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
        )
        (invariant next.cx!0!0 next.cx!0!1 next.cx!0!2 next.cx!0!3 next.cx!1!0 next.cx!1!1 next.cx!1!2 next.cx!1!3 next.cx!2!0 next.cx!2!1 next.cx!2!2 next.cx!2!3 next.cy!0!0 next.cy!0!1 next.cy!0!2 next.cy!0!3 next.cy!1!0 next.cy!1!1 next.cy!1!2 next.cy!1!3 next.cy!2!0 next.cy!2!1 next.cy!2!2 next.cy!2!3 next.good_p!0 next.good_p!1 next.good_p!2 next.good_r!0 next.good_r!1 next.good_r!2 next.good_r!3 next.v!0 next.v!1 next.v!2 next.round next.source next.val)
    )
  )
)

;; Property
(assert
  (forall ((state.cx!0!0 Real) (state.cx!0!1 Real) (state.cx!0!2 Real) (state.cx!0!3 Real) (state.cx!1!0 Real) (state.cx!1!1 Real) (state.cx!1!2 Real) (state.cx!1!3 Real) (state.cx!2!0 Real) (state.cx!2!1 Real) (state.cx!2!2 Real) (state.cx!2!3 Real) (state.cy!0!0 Real) (state.cy!0!1 Real) (state.cy!0!2 Real) (state.cy!0!3 Real) (state.cy!1!0 Real) (state.cy!1!1 Real) (state.cy!1!2 Real) (state.cy!1!3 Real) (state.cy!2!0 Real) (state.cy!2!1 Real) (state.cy!2!2 Real) (state.cy!2!3 Real) (state.good_p!0 Bool) (state.good_p!1 Bool) (state.good_p!2 Bool) (state.good_r!0 Bool) (state.good_r!1 Bool) (state.good_r!2 Bool) (state.good_r!3 Bool) (state.v!0 Real) (state.v!1 Real) (state.v!2 Real) (state.round Real) (state.source Real) (state.val Real))
    (=> (invariant state.cx!0!0 state.cx!0!1 state.cx!0!2 state.cx!0!3 state.cx!1!0 state.cx!1!1 state.cx!1!2 state.cx!1!3 state.cx!2!0 state.cx!2!1 state.cx!2!2 state.cx!2!3 state.cy!0!0 state.cy!0!1 state.cy!0!2 state.cy!0!3 state.cy!1!0 state.cy!1!1 state.cy!1!2 state.cy!1!3 state.cy!2!0 state.cy!2!1 state.cy!2!2 state.cy!2!3 state.good_p!0 state.good_p!1 state.good_p!2 state.good_r!0 state.good_r!1 state.good_r!2 state.good_r!3 state.v!0 state.v!1 state.v!2 state.round state.source state.val)
        (let ((l0 (< |state.round| 3))) (let ((l1 (not |state.good_p!0|))) (let ((l2 (not |state.good_p!1|))) (let ((l3 (= |state.v!0| |state.v!1|))) (let ((l4 (or l2 l3))) (let ((l5 (not |state.good_p!2|))) (let ((l6 (= |state.v!0| |state.v!2|))) (let ((l7 (or l5 l6))) (let ((l8 (and l4 l7))) (let ((l9 (or l1 l8))) (let ((l10 (= |state.v!1| |state.v!0|))) (let ((l11 (or l1 l10))) (let ((l12 (= |state.v!1| |state.v!2|))) (let ((l13 (or l5 l12))) (let ((l14 (and l11 l13))) (let ((l15 (or l2 l14))) (let ((l16 (= |state.v!2| |state.v!0|))) (let ((l17 (or l1 l16))) (let ((l18 (= |state.v!2| |state.v!1|))) (let ((l19 (or l2 l18))) (let ((l20 (and l17 l19))) (let ((l21 (or l5 l20))) (let ((l22 (and l9 l15 l21))) (let ((l23 (or l0 l22))) l23))))))))))))))))))))))))
    )
  )
)

;; Check the property
(check-sat)

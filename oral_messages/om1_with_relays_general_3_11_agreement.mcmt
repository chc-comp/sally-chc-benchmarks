;; State type:
;;  cx!i!j: channel from process i to relay j
;;  cy!i!j: channel from relay j to process i
;;  good_p!i: true if process i is non-faulty
;;  good_r!j: true if relay k is non-faulty
;;  v!i: result produced by process i
;;  round: global round counter
;;
;; Encoding:
;;  channels store a real value. We encode "nothing sent" as 0.
;;
;; Parameters:
;;  source: id of the source process (integer between 1 and 4)
;;  val: value sent by the source, if its not faulty.
;;  val is assumed non-zero.
;;

(define-state-type state
  ((cx!0!0 Real)
   (cx!0!1 Real)
   (cx!0!2 Real)
   (cx!0!3 Real)
   (cx!0!4 Real)
   (cx!0!5 Real)
   (cx!0!6 Real)
   (cx!0!7 Real)
   (cx!0!8 Real)
   (cx!0!9 Real)
   (cx!0!10 Real)
   (cx!1!0 Real)
   (cx!1!1 Real)
   (cx!1!2 Real)
   (cx!1!3 Real)
   (cx!1!4 Real)
   (cx!1!5 Real)
   (cx!1!6 Real)
   (cx!1!7 Real)
   (cx!1!8 Real)
   (cx!1!9 Real)
   (cx!1!10 Real)
   (cx!2!0 Real)
   (cx!2!1 Real)
   (cx!2!2 Real)
   (cx!2!3 Real)
   (cx!2!4 Real)
   (cx!2!5 Real)
   (cx!2!6 Real)
   (cx!2!7 Real)
   (cx!2!8 Real)
   (cx!2!9 Real)
   (cx!2!10 Real)
   (cy!0!0 Real)
   (cy!0!1 Real)
   (cy!0!2 Real)
   (cy!0!3 Real)
   (cy!0!4 Real)
   (cy!0!5 Real)
   (cy!0!6 Real)
   (cy!0!7 Real)
   (cy!0!8 Real)
   (cy!0!9 Real)
   (cy!0!10 Real)
   (cy!1!0 Real)
   (cy!1!1 Real)
   (cy!1!2 Real)
   (cy!1!3 Real)
   (cy!1!4 Real)
   (cy!1!5 Real)
   (cy!1!6 Real)
   (cy!1!7 Real)
   (cy!1!8 Real)
   (cy!1!9 Real)
   (cy!1!10 Real)
   (cy!2!0 Real)
   (cy!2!1 Real)
   (cy!2!2 Real)
   (cy!2!3 Real)
   (cy!2!4 Real)
   (cy!2!5 Real)
   (cy!2!6 Real)
   (cy!2!7 Real)
   (cy!2!8 Real)
   (cy!2!9 Real)
   (cy!2!10 Real)
   (good_p!0 Bool)
   (good_p!1 Bool)
   (good_p!2 Bool)
   (good_r!0 Bool)
   (good_r!1 Bool)
   (good_r!2 Bool)
   (good_r!3 Bool)
   (good_r!4 Bool)
   (good_r!5 Bool)
   (good_r!6 Bool)
   (good_r!7 Bool)
   (good_r!8 Bool)
   (good_r!9 Bool)
   (good_r!10 Bool)
   (v!0 Real)
   (v!1 Real)
   (v!2 Real)
   (round Real)
   ;; parameters
   (source Real)
   (val Real)))


;;
;; Initial state
;;
(define-states init state
  (and
   (= round 0)
   (= cx!0!0 0)
   (= cx!0!1 0)
   (= cx!0!2 0)
   (= cx!0!3 0)
   (= cx!0!4 0)
   (= cx!0!5 0)
   (= cx!0!6 0)
   (= cx!0!7 0)
   (= cx!0!8 0)
   (= cx!0!9 0)
   (= cx!0!10 0)
   (= cx!1!0 0)
   (= cx!1!1 0)
   (= cx!1!2 0)
   (= cx!1!3 0)
   (= cx!1!4 0)
   (= cx!1!5 0)
   (= cx!1!6 0)
   (= cx!1!7 0)
   (= cx!1!8 0)
   (= cx!1!9 0)
   (= cx!1!10 0)
   (= cx!2!0 0)
   (= cx!2!1 0)
   (= cx!2!2 0)
   (= cx!2!3 0)
   (= cx!2!4 0)
   (= cx!2!5 0)
   (= cx!2!6 0)
   (= cx!2!7 0)
   (= cx!2!8 0)
   (= cx!2!9 0)
   (= cx!2!10 0)
   (= cy!0!0 0)
   (= cy!0!1 0)
   (= cy!0!2 0)
   (= cy!0!3 0)
   (= cy!0!4 0)
   (= cy!0!5 0)
   (= cy!0!6 0)
   (= cy!0!7 0)
   (= cy!0!8 0)
   (= cy!0!9 0)
   (= cy!0!10 0)
   (= cy!1!0 0)
   (= cy!1!1 0)
   (= cy!1!2 0)
   (= cy!1!3 0)
   (= cy!1!4 0)
   (= cy!1!5 0)
   (= cy!1!6 0)
   (= cy!1!7 0)
   (= cy!1!8 0)
   (= cy!1!9 0)
   (= cy!1!10 0)
   (= cy!2!0 0)
   (= cy!2!1 0)
   (= cy!2!2 0)
   (= cy!2!3 0)
   (= cy!2!4 0)
   (= cy!2!5 0)
   (= cy!2!6 0)
   (= cy!2!7 0)
   (= cy!2!8 0)
   (= cy!2!9 0)
   (= cy!2!10 0)
   ;;
   ;; Constraints on val and source
   ;;
   (or (= source 1) (= source 2) (= source 3))
   (not (= val 0))
   ;;
   ;; Fault model
   ;;
   (and good_p!0 good_p!1 good_p!2)
   (or
    (and
     (not good_r!0)
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!1)
     good_r!0
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!2)
     good_r!0
     good_r!1
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!3)
     good_r!0
     good_r!1
     good_r!2
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!4)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!5)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!6)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!7)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!8)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!9
     good_r!10)
    (and
     (not good_r!9)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!10)
    (and
     (not good_r!10)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9))))


;;
;; Transition relation
;; 
(define-transition trans state
  (let ((cond!1 (= source 2))
	(cond!2 (= source 3))
	(cs!607 (not good_r!2))
	(cs!609 (not good_r!3))
	(cs!611 (not good_r!4))
	(cs!613 (not good_r!5))
	(cs!615 (not good_r!6))
	(cs!617 (not good_r!7))
	(cs!619 (not good_r!8))
	(cs!621 (not good_r!9))
	(cs!645 (not good_r!10))
	(cs!658 (not good_p!0))
	(cs!670 (not good_p!1))
	(cs!682 (not good_p!2))
	(cs!694
	 (and
	  (= cx!0!0' cx!0!0)
	  (= cx!0!1' cx!0!1)
	  (= cx!0!2' cx!0!2)
	  (= cx!0!3' cx!0!3)
	  (= cx!0!4' cx!0!4)
	  (= cx!0!5' cx!0!5)
	  (= cx!0!6' cx!0!6)
	  (= cx!0!7' cx!0!7)
	  (= cx!0!8' cx!0!8)
	  (= cx!0!9' cx!0!9)
	  (= cx!0!10' cx!0!10)
	  (= cx!1!0' cx!1!0)
	  (= cx!1!1' cx!1!1)
	  (= cx!1!2' cx!1!2)
	  (= cx!1!3' cx!1!3)
	  (= cx!1!4' cx!1!4)
	  (= cx!1!5' cx!1!5)
	  (= cx!1!6' cx!1!6)
	  (= cx!1!7' cx!1!7)
	  (= cx!1!8' cx!1!8)
	  (= cx!1!9' cx!1!9)
	  (= cx!1!10' cx!1!10)
	  (= cx!2!0' cx!2!0)
	  (= cx!2!1' cx!2!1)
	  (= cx!2!2' cx!2!2)
	  (= cx!2!3' cx!2!3)
	  (= cx!2!4' cx!2!4)
	  (= cx!2!5' cx!2!5)
	  (= cx!2!6' cx!2!6)
	  (= cx!2!7' cx!2!7)
	  (= cx!2!8' cx!2!8)
	  (= cx!2!9' cx!2!9)
	  (= cx!2!10' cx!2!10)))
	(cs!695
	 (and
	  (= cy!0!0' cy!0!0)
	  (= cy!0!1' cy!0!1)
	  (= cy!0!2' cy!0!2)
	  (= cy!0!3' cy!0!3)
	  (= cy!0!4' cy!0!4)
	  (= cy!0!5' cy!0!5)
	  (= cy!0!6' cy!0!6)
	  (= cy!0!7' cy!0!7)
	  (= cy!0!8' cy!0!8)
	  (= cy!0!9' cy!0!9)
	  (= cy!0!10' cy!0!10)
	  (= cy!1!0' cy!1!0)
	  (= cy!1!1' cy!1!1)
	  (= cy!1!2' cy!1!2)
	  (= cy!1!3' cy!1!3)
	  (= cy!1!4' cy!1!4)
	  (= cy!1!5' cy!1!5)
	  (= cy!1!6' cy!1!6)
	  (= cy!1!7' cy!1!7)
	  (= cy!1!8' cy!1!8)
	  (= cy!1!9' cy!1!9)
	  (= cy!1!10' cy!1!10)
	  (= cy!2!0' cy!2!0)
	  (= cy!2!1' cy!2!1)
	  (= cy!2!2' cy!2!2)
	  (= cy!2!3' cy!2!3)
	  (= cy!2!4' cy!2!4)
	  (= cy!2!5' cy!2!5)
	  (= cy!2!6' cy!2!6)
	  (= cy!2!7' cy!2!7)
	  (= cy!2!8' cy!2!8)
	  (= cy!2!9' cy!2!9)
	  (= cy!2!10' cy!2!10)))
	(cs!696
	 (and
	  (= good_p!0' good_p!0)
	  (= good_p!1' good_p!1)
	  (= good_p!2' good_p!2)))
	(cs!697
	 (and
	  (= good_r!0' good_r!0)
	  (= good_r!1' good_r!1)
	  (= good_r!2' good_r!2)
	  (= good_r!3' good_r!3)
	  (= good_r!4' good_r!4)
	  (= good_r!5' good_r!5)
	  (= good_r!6' good_r!6)
	  (= good_r!7' good_r!7)
	  (= good_r!8' good_r!8)
	  (= good_r!9' good_r!9)
	  (= good_r!10' good_r!10)))
	(cs!698 (and (= v!0' v!0) (= v!1' v!1) (= v!2' v!2)))
	(cs!732 (not good_r!0))
	(cs!734 (not good_r!1)))
    (let ((cs!608
	   (cond (cond!2 cx!2!2) (cond!1 cx!1!2) (else cx!0!2)))
	  (cs!610
	   (cond (cond!2 cx!2!3) (cond!1 cx!1!3) (else cx!0!3)))
	  (cs!612
	   (cond (cond!2 cx!2!4) (cond!1 cx!1!4) (else cx!0!4)))
	  (cs!614
	   (cond (cond!2 cx!2!5) (cond!1 cx!1!5) (else cx!0!5)))
	  (cs!616
	   (cond (cond!2 cx!2!6) (cond!1 cx!1!6) (else cx!0!6)))
	  (cs!618
	   (cond (cond!2 cx!2!7) (cond!1 cx!1!7) (else cx!0!7)))
	  (cs!620
	   (cond (cond!2 cx!2!8) (cond!1 cx!1!8) (else cx!0!8)))
	  (cs!622
	   (cond (cond!2 cx!2!9) (cond!1 cx!1!9) (else cx!0!9)))
	  (cs!657
	   (cond (cond!2 cx!2!10) (cond!1 cx!1!10) (else cx!0!10)))
	  (cs!733
	   (cond (cond!2 cx!2!0) (cond!1 cx!1!0) (else cx!0!0)))
	  (cs!735
	   (cond (cond!2 cx!2!1) (cond!1 cx!1!1) (else cx!0!1))))
      (let ((new_k!23 (ite (= cy!0!9 cy!0!10) 2 0))
	    (new_k!41 (ite (= cy!1!9 cy!1!10) 2 0))
	    (new_k!59 (ite (= cy!2!9 cy!2!10) 2 0)))
	(let ((cs!736 (= new_k!23 0))
	      (cs!744 (= new_k!41 0))
	      (cs!752 (= new_k!59 0)))
	  (let ((new_k!24
		 (cond
		  (cs!736 1)
		  ((= cy!0!8 cy!0!10) (+ new_k!23 1))
		  (else (- new_k!23 1))))
		(new_x!12 (ite cs!736 cy!0!8 cy!0!10))
		(new_k!42
		 (cond
		  (cs!744 1)
		  ((= cy!1!8 cy!1!10) (+ new_k!41 1))
		  (else (- new_k!41 1))))
		(new_x!19 (ite cs!744 cy!1!8 cy!1!10))
		(new_k!60
		 (cond
		  (cs!752 1)
		  ((= cy!2!8 cy!2!10) (+ new_k!59 1))
		  (else (- new_k!59 1))))
		(new_x!26 (ite cs!752 cy!2!8 cy!2!10)))
	    (let ((cs!737 (= new_k!24 0))
		  (cs!745 (= new_k!42 0))
		  (cs!753 (= new_k!60 0)))
	      (let ((new_k!25
		     (cond
		      (cs!737 1)
		      ((= cy!0!7 new_x!12) (+ new_k!24 1))
		      (else (- new_k!24 1))))
		    (new_x!13 (ite cs!737 cy!0!7 new_x!12))
		    (new_k!43
		     (cond
		      (cs!745 1)
		      ((= cy!1!7 new_x!19) (+ new_k!42 1))
		      (else (- new_k!42 1))))
		    (new_x!20 (ite cs!745 cy!1!7 new_x!19))
		    (new_k!61
		     (cond
		      (cs!753 1)
		      ((= cy!2!7 new_x!26) (+ new_k!60 1))
		      (else (- new_k!60 1))))
		    (new_x!27 (ite cs!753 cy!2!7 new_x!26)))
		(let ((cs!738 (= new_k!25 0))
		      (cs!746 (= new_k!43 0))
		      (cs!754 (= new_k!61 0)))
		  (let ((new_k!26
			 (cond
			  (cs!738 1)
			  ((= cy!0!6 new_x!13) (+ new_k!25 1))
			  (else (- new_k!25 1))))
			(new_x!14 (ite cs!738 cy!0!6 new_x!13))
			(new_k!44
			 (cond
			  (cs!746 1)
			  ((= cy!1!6 new_x!20) (+ new_k!43 1))
			  (else (- new_k!43 1))))
			(new_x!21 (ite cs!746 cy!1!6 new_x!20))
			(new_k!62
			 (cond
			  (cs!754 1)
			  ((= cy!2!6 new_x!27) (+ new_k!61 1))
			  (else (- new_k!61 1))))
			(new_x!28 (ite cs!754 cy!2!6 new_x!27)))
		    (let ((cs!739 (= new_k!26 0))
			  (cs!747 (= new_k!44 0))
			  (cs!755 (= new_k!62 0)))
		      (let ((new_k!27
			     (cond
			      (cs!739 1)
			      ((= cy!0!5 new_x!14) (+ new_k!26 1))
			      (else (- new_k!26 1))))
			    (new_x!15 (ite cs!739 cy!0!5 new_x!14))
			    (new_k!45
			     (cond
			      (cs!747 1)
			      ((= cy!1!5 new_x!21) (+ new_k!44 1))
			      (else (- new_k!44 1))))
			    (new_x!22 (ite cs!747 cy!1!5 new_x!21))
			    (new_k!63
			     (cond
			      (cs!755 1)
			      ((= cy!2!5 new_x!28) (+ new_k!62 1))
			      (else (- new_k!62 1))))
			    (new_x!29 (ite cs!755 cy!2!5 new_x!28)))
			(let ((cs!740 (= new_k!27 0))
			      (cs!748 (= new_k!45 0))
			      (cs!756 (= new_k!63 0)))
			  (let ((new_k!28
				 (cond
				  (cs!740 1)
				  ((= cy!0!4 new_x!15) (+ new_k!27 1))
				  (else (- new_k!27 1))))
				(new_x!16 (ite cs!740 cy!0!4 new_x!15))
				(new_k!46
				 (cond
				  (cs!748 1)
				  ((= cy!1!4 new_x!22) (+ new_k!45 1))
				  (else (- new_k!45 1))))
				(new_x!23 (ite cs!748 cy!1!4 new_x!22))
				(new_k!64
				 (cond
				  (cs!756 1)
				  ((= cy!2!4 new_x!29) (+ new_k!63 1))
				  (else (- new_k!63 1))))
				(new_x!30 (ite cs!756 cy!2!4 new_x!29)))
			    (let ((cs!741 (= new_k!28 0))
				  (cs!749 (= new_k!46 0))
				  (cs!757 (= new_k!64 0)))
			      (let ((new_k!29
				     (cond
				      (cs!741 1)
				      ((= cy!0!3 new_x!16) (+ new_k!28 1))
				      (else (- new_k!28 1))))
				    (new_x!17 (ite cs!741 cy!0!3 new_x!16))
				    (new_k!47
				     (cond
				      (cs!749 1)
				      ((= cy!1!3 new_x!23) (+ new_k!46 1))
				      (else (- new_k!46 1))))
				    (new_x!24 (ite cs!749 cy!1!3 new_x!23))
				    (new_k!65
				     (cond
				      (cs!757 1)
				      ((= cy!2!3 new_x!30) (+ new_k!64 1))
				      (else (- new_k!64 1))))
				    (new_x!31 (ite cs!757 cy!2!3 new_x!30)))
				(let ((cs!742 (= new_k!29 0))
				      (cs!750 (= new_k!47 0))
				      (cs!758 (= new_k!65 0)))
				  (let ((new_k!30
					 (cond
					  (cs!742 1)
					  ((= cy!0!2 new_x!17) (+ new_k!29 1))
					  (else (- new_k!29 1))))
					(new_x!18 (ite cs!742 cy!0!2 new_x!17))
					(new_k!48
					 (cond
					  (cs!750 1)
					  ((= cy!1!2 new_x!24) (+ new_k!47 1))
					  (else (- new_k!47 1))))
					(new_x!25 (ite cs!750 cy!1!2 new_x!24))
					(new_k!66
					 (cond
					  (cs!758 1)
					  ((= cy!2!2 new_x!31) (+ new_k!65 1))
					  (else (- new_k!65 1))))
					(new_x!32 (ite cs!758 cy!2!2 new_x!31)))
				    (let ((cs!743 (= new_k!30 0))
					  (cs!751 (= new_k!48 0))
					  (cs!759 (= new_k!66 0)))
				      (let ((x!26
					     (cond
					      ((=
						(cond
						 (cs!743 1)
						 ((= cy!0!1 new_x!18) (+ new_k!30 1))
						 (else (- new_k!30 1)))
						0)
					       cy!0!0)
					      (cs!743 cy!0!1)
					      (else new_x!18)))
					    (x!27
					     (cond
					      ((=
						(cond
						 (cs!751 1)
						 ((= cy!1!1 new_x!25) (+ new_k!48 1))
						 (else (- new_k!48 1)))
						0)
					       cy!1!0)
					      (cs!751 cy!1!1)
					      (else new_x!25)))
					    (x!28
					     (cond
					      ((=
						(cond
						 (cs!759 1)
						 ((= cy!2!1 new_x!32) (+ new_k!66 1))
						 (else (- new_k!66 1)))
						0)
					       cy!2!0)
					      (cs!759 cy!2!1)
					      (else new_x!32))))
					(let ((new_k!31 (ite (= cy!0!10 x!26) 5 6))
					      (new_k!49 (ite (= cy!1!10 x!27) 5 6))
					      (new_k!67 (ite (= cy!2!10 x!28) 5 6)))
					  (let ((new_k!32
						 (ite (= cy!0!9 x!26) (- new_k!31 1) new_k!31))
						(new_k!50 (ite (= cy!1!9 x!27) (- new_k!49 1) new_k!49))
						(new_k!68
						 (ite (= cy!2!9 x!28) (- new_k!67 1) new_k!67)))
					    (let ((new_k!33
						   (ite (= cy!0!8 x!26) (- new_k!32 1) new_k!32))
						  (new_k!51 (ite (= cy!1!8 x!27) (- new_k!50 1) new_k!50))
						  (new_k!69
						   (ite (= cy!2!8 x!28) (- new_k!68 1) new_k!68)))
					      (let ((new_k!34
						     (ite (= cy!0!7 x!26) (- new_k!33 1) new_k!33))
						    (new_k!52 (ite (= cy!1!7 x!27) (- new_k!51 1) new_k!51))
						    (new_k!70
						     (ite (= cy!2!7 x!28) (- new_k!69 1) new_k!69)))
						(let ((new_k!35
						       (ite (= cy!0!6 x!26) (- new_k!34 1) new_k!34))
						      (new_k!53 (ite (= cy!1!6 x!27) (- new_k!52 1) new_k!52))
						      (new_k!71
						       (ite (= cy!2!6 x!28) (- new_k!70 1) new_k!70)))
						  (let ((new_k!36
							 (ite (= cy!0!5 x!26) (- new_k!35 1) new_k!35))
							(new_k!54 (ite (= cy!1!5 x!27) (- new_k!53 1) new_k!53))
							(new_k!72
							 (ite (= cy!2!5 x!28) (- new_k!71 1) new_k!71)))
						    (let ((new_k!37
							   (ite (= cy!0!4 x!26) (- new_k!36 1) new_k!36))
							  (new_k!55 (ite (= cy!1!4 x!27) (- new_k!54 1) new_k!54))
							  (new_k!73
							   (ite (= cy!2!4 x!28) (- new_k!72 1) new_k!72)))
						      (let ((new_k!38
							     (ite (= cy!0!3 x!26) (- new_k!37 1) new_k!37))
							    (new_k!56 (ite (= cy!1!3 x!27) (- new_k!55 1) new_k!55))
							    (new_k!74
							     (ite (= cy!2!3 x!28) (- new_k!73 1) new_k!73)))
							(let ((new_k!39
							       (ite (= cy!0!2 x!26) (- new_k!38 1) new_k!38))
							      (new_k!57 (ite (= cy!1!2 x!27) (- new_k!56 1) new_k!56))
							      (new_k!75
							       (ite (= cy!2!2 x!28) (- new_k!74 1) new_k!74)))
							  (let ((new_k!40
								 (ite (= cy!0!1 x!26) (- new_k!39 1) new_k!39))
								(new_k!58 (ite (= cy!1!1 x!27) (- new_k!57 1) new_k!57))
								(new_k!76
								 (ite (= cy!2!1 x!28) (- new_k!75 1) new_k!75)))
							    (and
							     (= source' source)
							     (= val' val)
							     (or
							      (and
							       (= round 0)
							       (and
								(or
								 cs!658
								 (/= 1 source)
								 (and
								  (= cx!0!0' val)
								  (= cx!0!1' val)
								  (= cx!0!2' val)
								  (= cx!0!3' val)
								  (= cx!0!4' val)
								  (= cx!0!5' val)
								  (= cx!0!6' val)
								  (= cx!0!7' val)
								  (= cx!0!8' val)
								  (= cx!0!9' val)
								  (= cx!0!10' val)))
								(or
								 cs!670
								 (/= 2 source)
								 (and
								  (= cx!1!0' val)
								  (= cx!1!1' val)
								  (= cx!1!2' val)
								  (= cx!1!3' val)
								  (= cx!1!4' val)
								  (= cx!1!5' val)
								  (= cx!1!6' val)
								  (= cx!1!7' val)
								  (= cx!1!8' val)
								  (= cx!1!9' val)
								  (= cx!1!10' val)))
								(or
								 cs!682
								 (/= 3 source)
								 (and
								  (= cx!2!0' val)
								  (= cx!2!1' val)
								  (= cx!2!2' val)
								  (= cx!2!3' val)
								  (= cx!2!4' val)
								  (= cx!2!5' val)
								  (= cx!2!6' val)
								  (= cx!2!7' val)
								  (= cx!2!8' val)
								  (= cx!2!9' val)
								  (= cx!2!10' val)))
								(or
								 cs!658
								 (= 1 source)
								 (and
								  (= cx!0!0' 0)
								  (= cx!0!1' 0)
								  (= cx!0!2' 0)
								  (= cx!0!3' 0)
								  (= cx!0!4' 0)
								  (= cx!0!5' 0)
								  (= cx!0!6' 0)
								  (= cx!0!7' 0)
								  (= cx!0!8' 0)
								  (= cx!0!9' 0)
								  (= cx!0!10' 0)))
								(or
								 cs!670
								 (= 2 source)
								 (and
								  (= cx!1!0' 0)
								  (= cx!1!1' 0)
								  (= cx!1!2' 0)
								  (= cx!1!3' 0)
								  (= cx!1!4' 0)
								  (= cx!1!5' 0)
								  (= cx!1!6' 0)
								  (= cx!1!7' 0)
								  (= cx!1!8' 0)
								  (= cx!1!9' 0)
								  (= cx!1!10' 0)))
								(or
								 cs!682
								 (= 3 source)
								 (and
								  (= cx!2!0' 0)
								  (= cx!2!1' 0)
								  (= cx!2!2' 0)
								  (= cx!2!3' 0)
								  (= cx!2!4' 0)
								  (= cx!2!5' 0)
								  (= cx!2!6' 0)
								  (= cx!2!7' 0)
								  (= cx!2!8' 0)
								  (= cx!2!9' 0)
								  (= cx!2!10' 0))))
							       (= round' 1)
							       cs!695
							       cs!696
							       cs!697
							       cs!698)
							      (and
							       (= round 1)
							       (and
								(or cs!732 (= cy!0!0' cs!733))
								(or cs!732 (= cy!1!0' cs!733))
								(or cs!732 (= cy!2!0' cs!733))
								(or cs!734 (= cy!0!1' cs!735))
								(or cs!734 (= cy!1!1' cs!735))
								(or cs!734 (= cy!2!1' cs!735))
								(or cs!607 (= cy!0!2' cs!608))
								(or cs!607 (= cy!1!2' cs!608))
								(or cs!607 (= cy!2!2' cs!608))
								(or cs!609 (= cy!0!3' cs!610))
								(or cs!609 (= cy!1!3' cs!610))
								(or cs!609 (= cy!2!3' cs!610))
								(or cs!611 (= cy!0!4' cs!612))
								(or cs!611 (= cy!1!4' cs!612))
								(or cs!611 (= cy!2!4' cs!612))
								(or cs!613 (= cy!0!5' cs!614))
								(or cs!613 (= cy!1!5' cs!614))
								(or cs!613 (= cy!2!5' cs!614))
								(or cs!615 (= cy!0!6' cs!616))
								(or cs!615 (= cy!1!6' cs!616))
								(or cs!615 (= cy!2!6' cs!616))
								(or cs!617 (= cy!0!7' cs!618))
								(or cs!617 (= cy!1!7' cs!618))
								(or cs!617 (= cy!2!7' cs!618))
								(or cs!619 (= cy!0!8' cs!620))
								(or cs!619 (= cy!1!8' cs!620))
								(or cs!619 (= cy!2!8' cs!620))
								(or cs!621 (= cy!0!9' cs!622))
								(or cs!621 (= cy!1!9' cs!622))
								(or cs!621 (= cy!2!9' cs!622))
								(or cs!645 (= cy!0!10' cs!657))
								(or cs!645 (= cy!1!10' cs!657))
								(or cs!645 (= cy!2!10' cs!657)))
							       (= round' 2)
							       cs!694
							       cs!696
							       cs!697
							       cs!698)
							      (and
							       (= round 2)
							       (and
								(or
								 cs!658
								 (=
								  v!0'
								  (ite (or
									(= new_k!31 0)
									(= new_k!32 0)
									(= new_k!33 0)
									(= new_k!34 0)
									(= new_k!35 0)
									(= new_k!36 0)
									(= new_k!37 0)
									(= new_k!38 0)
									(= new_k!39 0)
									(= new_k!40 0)
									(= (ite (= cy!0!0 x!26) (- new_k!40 1) new_k!40) 0))
								       x!26
								       0)))
								(or
								 cs!670
								 (=
								  v!1'
								  (ite (or
									(= new_k!49 0)
									(= new_k!50 0)
									(= new_k!51 0)
									(= new_k!52 0)
									(= new_k!53 0)
									(= new_k!54 0)
									(= new_k!55 0)
									(= new_k!56 0)
									(= new_k!57 0)
									(= new_k!58 0)
									(= (ite (= cy!1!0 x!27) (- new_k!58 1) new_k!58) 0))
								       x!27
								       0)))
								(or
								 cs!682
								 (=
								  v!2'
								  (ite (or
									(= new_k!67 0)
									(= new_k!68 0)
									(= new_k!69 0)
									(= new_k!70 0)
									(= new_k!71 0)
									(= new_k!72 0)
									(= new_k!73 0)
									(= new_k!74 0)
									(= new_k!75 0)
									(= new_k!76 0)
									(= (ite (= cy!2!0 x!28) (- new_k!76 1) new_k!76) 0))
								       x!28
								       0))))
							       (= round' 3)
							       cs!694
							       cs!695
							       cs!696
							       cs!697)
							      (and
							       (= round 3)
							       cs!694
							       cs!695
							       cs!696
							       cs!697
							       (= round' round)
							       cs!698)))))))))))))))))))))))))))))))))

;;
;; Transition system
;;
(define-transition-system OM
  state
  init
  trans
)

;;
;; Query: agreement
;;
(query OM
       (or
        (< round 3)
        (and
	 (or
	  (not good_p!0)
	  (and
	   (or (not good_p!1) (= v!0 v!1))
	   (or (not good_p!2) (= v!0 v!2))))
	 (or
	  (not good_p!1)
	  (and
	   (or (not good_p!0) (= v!1 v!0))
	   (or (not good_p!2) (= v!1 v!2))))
	 (or
	  (not good_p!2)
	  (and
	   (or (not good_p!0) (= v!2 v!0))
	   (or (not good_p!1) (= v!2 v!1)))))))

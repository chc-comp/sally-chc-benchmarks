;; State type:
;;  cx!i!j: channel from process i to relay j
;;  cy!i!j: channel from relay j to process i
;;  good_p!i: true if process i is non-faulty
;;  good_r!j: true if relay k is non-faulty
;;  v!i: result produced by process i
;;  round: global round counter
;;
;; Encoding:
;;  channels store a real value. We encode "nothing sent" as 0.
;;
;; Parameters:
;;  source: id of the source process (integer between 1 and 4)
;;  val: value sent by the source, if its not faulty.
;;  val is assumed non-zero.
;;

(define-state-type state
  ((cx!0!0 Real)
   (cx!0!1 Real)
   (cx!0!2 Real)
   (cx!0!3 Real)
   (cx!0!4 Real)
   (cx!0!5 Real)
   (cx!0!6 Real)
   (cx!0!7 Real)
   (cx!0!8 Real)
   (cx!0!9 Real)
   (cx!0!10 Real)
   (cx!0!11 Real)
   (cx!0!12 Real)
   (cx!0!13 Real)
   (cx!0!14 Real)
   (cx!0!15 Real)
   (cx!0!16 Real)
   (cx!1!0 Real)
   (cx!1!1 Real)
   (cx!1!2 Real)
   (cx!1!3 Real)
   (cx!1!4 Real)
   (cx!1!5 Real)
   (cx!1!6 Real)
   (cx!1!7 Real)
   (cx!1!8 Real)
   (cx!1!9 Real)
   (cx!1!10 Real)
   (cx!1!11 Real)
   (cx!1!12 Real)
   (cx!1!13 Real)
   (cx!1!14 Real)
   (cx!1!15 Real)
   (cx!1!16 Real)
   (cx!2!0 Real)
   (cx!2!1 Real)
   (cx!2!2 Real)
   (cx!2!3 Real)
   (cx!2!4 Real)
   (cx!2!5 Real)
   (cx!2!6 Real)
   (cx!2!7 Real)
   (cx!2!8 Real)
   (cx!2!9 Real)
   (cx!2!10 Real)
   (cx!2!11 Real)
   (cx!2!12 Real)
   (cx!2!13 Real)
   (cx!2!14 Real)
   (cx!2!15 Real)
   (cx!2!16 Real)
   (cy!0!0 Real)
   (cy!0!1 Real)
   (cy!0!2 Real)
   (cy!0!3 Real)
   (cy!0!4 Real)
   (cy!0!5 Real)
   (cy!0!6 Real)
   (cy!0!7 Real)
   (cy!0!8 Real)
   (cy!0!9 Real)
   (cy!0!10 Real)
   (cy!0!11 Real)
   (cy!0!12 Real)
   (cy!0!13 Real)
   (cy!0!14 Real)
   (cy!0!15 Real)
   (cy!0!16 Real)
   (cy!1!0 Real)
   (cy!1!1 Real)
   (cy!1!2 Real)
   (cy!1!3 Real)
   (cy!1!4 Real)
   (cy!1!5 Real)
   (cy!1!6 Real)
   (cy!1!7 Real)
   (cy!1!8 Real)
   (cy!1!9 Real)
   (cy!1!10 Real)
   (cy!1!11 Real)
   (cy!1!12 Real)
   (cy!1!13 Real)
   (cy!1!14 Real)
   (cy!1!15 Real)
   (cy!1!16 Real)
   (cy!2!0 Real)
   (cy!2!1 Real)
   (cy!2!2 Real)
   (cy!2!3 Real)
   (cy!2!4 Real)
   (cy!2!5 Real)
   (cy!2!6 Real)
   (cy!2!7 Real)
   (cy!2!8 Real)
   (cy!2!9 Real)
   (cy!2!10 Real)
   (cy!2!11 Real)
   (cy!2!12 Real)
   (cy!2!13 Real)
   (cy!2!14 Real)
   (cy!2!15 Real)
   (cy!2!16 Real)
   (good_p!0 Bool)
   (good_p!1 Bool)
   (good_p!2 Bool)
   (good_r!0 Bool)
   (good_r!1 Bool)
   (good_r!2 Bool)
   (good_r!3 Bool)
   (good_r!4 Bool)
   (good_r!5 Bool)
   (good_r!6 Bool)
   (good_r!7 Bool)
   (good_r!8 Bool)
   (good_r!9 Bool)
   (good_r!10 Bool)
   (good_r!11 Bool)
   (good_r!12 Bool)
   (good_r!13 Bool)
   (good_r!14 Bool)
   (good_r!15 Bool)
   (good_r!16 Bool)
   (v!0 Real)
   (v!1 Real)
   (v!2 Real)
   (round Real)
   ;; parameters
   (source Real)
   (val Real)))


;;
;; Initial state
;;
(define-states init state
  (and
   (= round 0)
   (= cx!0!0 0)
   (= cx!0!1 0)
   (= cx!0!2 0)
   (= cx!0!3 0)
   (= cx!0!4 0)
   (= cx!0!5 0)
   (= cx!0!6 0)
   (= cx!0!7 0)
   (= cx!0!8 0)
   (= cx!0!9 0)
   (= cx!0!10 0)
   (= cx!0!11 0)
   (= cx!0!12 0)
   (= cx!0!13 0)
   (= cx!0!14 0)
   (= cx!0!15 0)
   (= cx!0!16 0)
   (= cx!1!0 0)
   (= cx!1!1 0)
   (= cx!1!2 0)
   (= cx!1!3 0)
   (= cx!1!4 0)
   (= cx!1!5 0)
   (= cx!1!6 0)
   (= cx!1!7 0)
   (= cx!1!8 0)
   (= cx!1!9 0)
   (= cx!1!10 0)
   (= cx!1!11 0)
   (= cx!1!12 0)
   (= cx!1!13 0)
   (= cx!1!14 0)
   (= cx!1!15 0)
   (= cx!1!16 0)
   (= cx!2!0 0)
   (= cx!2!1 0)
   (= cx!2!2 0)
   (= cx!2!3 0)
   (= cx!2!4 0)
   (= cx!2!5 0)
   (= cx!2!6 0)
   (= cx!2!7 0)
   (= cx!2!8 0)
   (= cx!2!9 0)
   (= cx!2!10 0)
   (= cx!2!11 0)
   (= cx!2!12 0)
   (= cx!2!13 0)
   (= cx!2!14 0)
   (= cx!2!15 0)
   (= cx!2!16 0)
   (= cy!0!0 0)
   (= cy!0!1 0)
   (= cy!0!2 0)
   (= cy!0!3 0)
   (= cy!0!4 0)
   (= cy!0!5 0)
   (= cy!0!6 0)
   (= cy!0!7 0)
   (= cy!0!8 0)
   (= cy!0!9 0)
   (= cy!0!10 0)
   (= cy!0!11 0)
   (= cy!0!12 0)
   (= cy!0!13 0)
   (= cy!0!14 0)
   (= cy!0!15 0)
   (= cy!0!16 0)
   (= cy!1!0 0)
   (= cy!1!1 0)
   (= cy!1!2 0)
   (= cy!1!3 0)
   (= cy!1!4 0)
   (= cy!1!5 0)
   (= cy!1!6 0)
   (= cy!1!7 0)
   (= cy!1!8 0)
   (= cy!1!9 0)
   (= cy!1!10 0)
   (= cy!1!11 0)
   (= cy!1!12 0)
   (= cy!1!13 0)
   (= cy!1!14 0)
   (= cy!1!15 0)
   (= cy!1!16 0)
   (= cy!2!0 0)
   (= cy!2!1 0)
   (= cy!2!2 0)
   (= cy!2!3 0)
   (= cy!2!4 0)
   (= cy!2!5 0)
   (= cy!2!6 0)
   (= cy!2!7 0)
   (= cy!2!8 0)
   (= cy!2!9 0)
   (= cy!2!10 0)
   (= cy!2!11 0)
   (= cy!2!12 0)
   (= cy!2!13 0)
   (= cy!2!14 0)
   (= cy!2!15 0)
   (= cy!2!16 0)
   ;;
   ;; Constraints on val and source
   ;;
   (or (= source 1) (= source 2) (= source 3))
   (not (= val 0))
   ;;
   ;; Fault model
   ;;
   (and good_p!0 good_p!1 good_p!2)
   (or
    (and
     (not good_r!0)
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!1)
     good_r!0
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!2)
     good_r!0
     good_r!1
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!3)
     good_r!0
     good_r!1
     good_r!2
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!4)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!5)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!6)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!7)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!8)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!9)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!10)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!11)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!12
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!12)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!13
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!13)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!14
     good_r!15
     good_r!16)
    (and
     (not good_r!14)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!15
     good_r!16)
    (and
     (not good_r!15)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!16)
    (and
     (not good_r!16)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12
     good_r!13
     good_r!14
     good_r!15))))


;;
;; Transition relation
;; 
(define-transition trans state
  (let ((cond!1 (= source 2))
	(cond!2 (= source 3))
	(cs!1048 (not good_r!0))
	(cs!1050 (not good_r!1))
	(cs!1052 (not good_r!2))
	(cs!1054 (not good_r!3))
	(cs!1056 (not good_r!4))
	(cs!1058 (not good_r!5))
	(cs!1060 (not good_r!6))
	(cs!1062 (not good_r!7))
	(cs!1064 (not good_r!8))
	(cs!1066 (not good_r!9))
	(cs!1068 (not good_r!10))
	(cs!1070 (not good_r!11))
	(cs!1072 (not good_r!12))
	(cs!1074 (not good_r!13))
	(cs!1076 (not good_r!14))
	(cs!1078 (not good_r!15))
	(cs!1114 (not good_r!16))
	(cs!1133 (not good_p!0))
	(cs!1151 (not good_p!1))
	(cs!1169 (not good_p!2))
	(cs!1187
	 (and
	  (= cx!0!0' cx!0!0)
	  (= cx!0!1' cx!0!1)
	  (= cx!0!2' cx!0!2)
	  (= cx!0!3' cx!0!3)
	  (= cx!0!4' cx!0!4)
	  (= cx!0!5' cx!0!5)
	  (= cx!0!6' cx!0!6)
	  (= cx!0!7' cx!0!7)
	  (= cx!0!8' cx!0!8)
	  (= cx!0!9' cx!0!9)
	  (= cx!0!10' cx!0!10)
	  (= cx!0!11' cx!0!11)
	  (= cx!0!12' cx!0!12)
	  (= cx!0!13' cx!0!13)
	  (= cx!0!14' cx!0!14)
	  (= cx!0!15' cx!0!15)
	  (= cx!0!16' cx!0!16)
	  (= cx!1!0' cx!1!0)
	  (= cx!1!1' cx!1!1)
	  (= cx!1!2' cx!1!2)
	  (= cx!1!3' cx!1!3)
	  (= cx!1!4' cx!1!4)
	  (= cx!1!5' cx!1!5)
	  (= cx!1!6' cx!1!6)
	  (= cx!1!7' cx!1!7)
	  (= cx!1!8' cx!1!8)
	  (= cx!1!9' cx!1!9)
	  (= cx!1!10' cx!1!10)
	  (= cx!1!11' cx!1!11)
	  (= cx!1!12' cx!1!12)
	  (= cx!1!13' cx!1!13)
	  (= cx!1!14' cx!1!14)
	  (= cx!1!15' cx!1!15)
	  (= cx!1!16' cx!1!16)
	  (= cx!2!0' cx!2!0)
	  (= cx!2!1' cx!2!1)
	  (= cx!2!2' cx!2!2)
	  (= cx!2!3' cx!2!3)
	  (= cx!2!4' cx!2!4)
	  (= cx!2!5' cx!2!5)
	  (= cx!2!6' cx!2!6)
	  (= cx!2!7' cx!2!7)
	  (= cx!2!8' cx!2!8)
	  (= cx!2!9' cx!2!9)
	  (= cx!2!10' cx!2!10)
	  (= cx!2!11' cx!2!11)
	  (= cx!2!12' cx!2!12)
	  (= cx!2!13' cx!2!13)
	  (= cx!2!14' cx!2!14)
	  (= cx!2!15' cx!2!15)
	  (= cx!2!16' cx!2!16)))
	(cs!1188
	 (and
	  (= cy!0!0' cy!0!0)
	  (= cy!0!1' cy!0!1)
	  (= cy!0!2' cy!0!2)
	  (= cy!0!3' cy!0!3)
	  (= cy!0!4' cy!0!4)
	  (= cy!0!5' cy!0!5)
	  (= cy!0!6' cy!0!6)
	  (= cy!0!7' cy!0!7)
	  (= cy!0!8' cy!0!8)
	  (= cy!0!9' cy!0!9)
	  (= cy!0!10' cy!0!10)
	  (= cy!0!11' cy!0!11)
	  (= cy!0!12' cy!0!12)
	  (= cy!0!13' cy!0!13)
	  (= cy!0!14' cy!0!14)
	  (= cy!0!15' cy!0!15)
	  (= cy!0!16' cy!0!16)
	  (= cy!1!0' cy!1!0)
	  (= cy!1!1' cy!1!1)
	  (= cy!1!2' cy!1!2)
	  (= cy!1!3' cy!1!3)
	  (= cy!1!4' cy!1!4)
	  (= cy!1!5' cy!1!5)
	  (= cy!1!6' cy!1!6)
	  (= cy!1!7' cy!1!7)
	  (= cy!1!8' cy!1!8)
	  (= cy!1!9' cy!1!9)
	  (= cy!1!10' cy!1!10)
	  (= cy!1!11' cy!1!11)
	  (= cy!1!12' cy!1!12)
	  (= cy!1!13' cy!1!13)
	  (= cy!1!14' cy!1!14)
	  (= cy!1!15' cy!1!15)
	  (= cy!1!16' cy!1!16)
	  (= cy!2!0' cy!2!0)
	  (= cy!2!1' cy!2!1)
	  (= cy!2!2' cy!2!2)
	  (= cy!2!3' cy!2!3)
	  (= cy!2!4' cy!2!4)
	  (= cy!2!5' cy!2!5)
	  (= cy!2!6' cy!2!6)
	  (= cy!2!7' cy!2!7)
	  (= cy!2!8' cy!2!8)
	  (= cy!2!9' cy!2!9)
	  (= cy!2!10' cy!2!10)
	  (= cy!2!11' cy!2!11)
	  (= cy!2!12' cy!2!12)
	  (= cy!2!13' cy!2!13)
	  (= cy!2!14' cy!2!14)
	  (= cy!2!15' cy!2!15)
	  (= cy!2!16' cy!2!16)))
	(cs!1189
	 (and
	  (= good_p!0' good_p!0)
	  (= good_p!1' good_p!1)
	  (= good_p!2' good_p!2)))
	(cs!1190
	 (and
	  (= good_r!0' good_r!0)
	  (= good_r!1' good_r!1)
	  (= good_r!2' good_r!2)
	  (= good_r!3' good_r!3)
	  (= good_r!4' good_r!4)
	  (= good_r!5' good_r!5)
	  (= good_r!6' good_r!6)
	  (= good_r!7' good_r!7)
	  (= good_r!8' good_r!8)
	  (= good_r!9' good_r!9)
	  (= good_r!10' good_r!10)
	  (= good_r!11' good_r!11)
	  (= good_r!12' good_r!12)
	  (= good_r!13' good_r!13)
	  (= good_r!14' good_r!14)
	  (= good_r!15' good_r!15)
	  (= good_r!16' good_r!16)))
	(cs!1191
	 (and (= v!0' v!0) (= v!1' v!1) (= v!2' v!2))))
    (let ((cs!1049
	   (cond (cond!2 cx!2!0) (cond!1 cx!1!0) (else cx!0!0)))
	  (cs!1051
	   (cond (cond!2 cx!2!1) (cond!1 cx!1!1) (else cx!0!1)))
	  (cs!1053
	   (cond (cond!2 cx!2!2) (cond!1 cx!1!2) (else cx!0!2)))
	  (cs!1055
	   (cond (cond!2 cx!2!3) (cond!1 cx!1!3) (else cx!0!3)))
	  (cs!1057
	   (cond (cond!2 cx!2!4) (cond!1 cx!1!4) (else cx!0!4)))
	  (cs!1059
	   (cond (cond!2 cx!2!5) (cond!1 cx!1!5) (else cx!0!5)))
	  (cs!1061
	   (cond (cond!2 cx!2!6) (cond!1 cx!1!6) (else cx!0!6)))
	  (cs!1063
	   (cond (cond!2 cx!2!7) (cond!1 cx!1!7) (else cx!0!7)))
	  (cs!1065
	   (cond (cond!2 cx!2!8) (cond!1 cx!1!8) (else cx!0!8)))
	  (cs!1067
	   (cond (cond!2 cx!2!9) (cond!1 cx!1!9) (else cx!0!9)))
	  (cs!1069
	   (cond (cond!2 cx!2!10) (cond!1 cx!1!10) (else cx!0!10)))
	  (cs!1071
	   (cond (cond!2 cx!2!11) (cond!1 cx!1!11) (else cx!0!11)))
	  (cs!1073
	   (cond (cond!2 cx!2!12) (cond!1 cx!1!12) (else cx!0!12)))
	  (cs!1075
	   (cond (cond!2 cx!2!13) (cond!1 cx!1!13) (else cx!0!13)))
	  (cs!1077
	   (cond (cond!2 cx!2!14) (cond!1 cx!1!14) (else cx!0!14)))
	  (cs!1079
	   (cond (cond!2 cx!2!15) (cond!1 cx!1!15) (else cx!0!15)))
	  (cs!1132
	   (cond (cond!2 cx!2!16) (cond!1 cx!1!16) (else cx!0!16))))
      (let ((new_k!35 (ite (= cy!0!15 cy!0!16) 2 0))
	    (new_k!65 (ite (= cy!1!15 cy!1!16) 2 0))
	    (new_k!95 (ite (= cy!2!15 cy!2!16) 2 0)))
	(let ((cs!1234 (= new_k!35 0))
	      (cs!1248 (= new_k!65 0))
	      (cs!1262 (= new_k!95 0)))
	  (let ((new_k!36
		 (cond
		  (cs!1234 1)
		  ((= cy!0!14 cy!0!16) (+ new_k!35 1))
		  (else (- new_k!35 1))))
		(new_x!18 (ite cs!1234 cy!0!14 cy!0!16))
		(new_k!66
		 (cond
		  (cs!1248 1)
		  ((= cy!1!14 cy!1!16) (+ new_k!65 1))
		  (else (- new_k!65 1))))
		(new_x!31 (ite cs!1248 cy!1!14 cy!1!16))
		(new_k!96
		 (cond
		  (cs!1262 1)
		  ((= cy!2!14 cy!2!16) (+ new_k!95 1))
		  (else (- new_k!95 1))))
		(new_x!44 (ite cs!1262 cy!2!14 cy!2!16)))
	    (let ((cs!1235 (= new_k!36 0))
		  (cs!1249 (= new_k!66 0))
		  (cs!1263 (= new_k!96 0)))
	      (let ((new_k!37
		     (cond
		      (cs!1235 1)
		      ((= cy!0!13 new_x!18) (+ new_k!36 1))
		      (else (- new_k!36 1))))
		    (new_x!19 (ite cs!1235 cy!0!13 new_x!18))
		    (new_k!67
		     (cond
		      (cs!1249 1)
		      ((= cy!1!13 new_x!31) (+ new_k!66 1))
		      (else (- new_k!66 1))))
		    (new_x!32 (ite cs!1249 cy!1!13 new_x!31))
		    (new_k!97
		     (cond
		      (cs!1263 1)
		      ((= cy!2!13 new_x!44) (+ new_k!96 1))
		      (else (- new_k!96 1))))
		    (new_x!45 (ite cs!1263 cy!2!13 new_x!44)))
		(let ((cs!1236 (= new_k!37 0))
		      (cs!1250 (= new_k!67 0))
		      (cs!1264 (= new_k!97 0)))
		  (let ((new_k!38
			 (cond
			  (cs!1236 1)
			  ((= cy!0!12 new_x!19) (+ new_k!37 1))
			  (else (- new_k!37 1))))
			(new_x!20 (ite cs!1236 cy!0!12 new_x!19))
			(new_k!68
			 (cond
			  (cs!1250 1)
			  ((= cy!1!12 new_x!32) (+ new_k!67 1))
			  (else (- new_k!67 1))))
			(new_x!33 (ite cs!1250 cy!1!12 new_x!32))
			(new_k!98
			 (cond
			  (cs!1264 1)
			  ((= cy!2!12 new_x!45) (+ new_k!97 1))
			  (else (- new_k!97 1))))
			(new_x!46 (ite cs!1264 cy!2!12 new_x!45)))
		    (let ((cs!1237 (= new_k!38 0))
			  (cs!1251 (= new_k!68 0))
			  (cs!1265 (= new_k!98 0)))
		      (let ((new_k!39
			     (cond
			      (cs!1237 1)
			      ((= cy!0!11 new_x!20) (+ new_k!38 1))
			      (else (- new_k!38 1))))
			    (new_x!21 (ite cs!1237 cy!0!11 new_x!20))
			    (new_k!69
			     (cond
			      (cs!1251 1)
			      ((= cy!1!11 new_x!33) (+ new_k!68 1))
			      (else (- new_k!68 1))))
			    (new_x!34 (ite cs!1251 cy!1!11 new_x!33))
			    (new_k!99
			     (cond
			      (cs!1265 1)
			      ((= cy!2!11 new_x!46) (+ new_k!98 1))
			      (else (- new_k!98 1))))
			    (new_x!47 (ite cs!1265 cy!2!11 new_x!46)))
			(let ((cs!1238 (= new_k!39 0))
			      (cs!1252 (= new_k!69 0))
			      (cs!1266 (= new_k!99 0)))
			  (let ((new_k!40
				 (cond
				  (cs!1238 1)
				  ((= cy!0!10 new_x!21) (+ new_k!39 1))
				  (else (- new_k!39 1))))
				(new_x!22 (ite cs!1238 cy!0!10 new_x!21))
				(new_k!70
				 (cond
				  (cs!1252 1)
				  ((= cy!1!10 new_x!34) (+ new_k!69 1))
				  (else (- new_k!69 1))))
				(new_x!35 (ite cs!1252 cy!1!10 new_x!34))
				(new_k!100
				 (cond
				  (cs!1266 1)
				  ((= cy!2!10 new_x!47) (+ new_k!99 1))
				  (else (- new_k!99 1))))
				(new_x!48 (ite cs!1266 cy!2!10 new_x!47)))
			    (let ((cs!1239 (= new_k!40 0))
				  (cs!1253 (= new_k!70 0))
				  (cs!1267 (= new_k!100 0)))
			      (let ((new_k!41
				     (cond
				      (cs!1239 1)
				      ((= cy!0!9 new_x!22) (+ new_k!40 1))
				      (else (- new_k!40 1))))
				    (new_x!23 (ite cs!1239 cy!0!9 new_x!22))
				    (new_k!71
				     (cond
				      (cs!1253 1)
				      ((= cy!1!9 new_x!35) (+ new_k!70 1))
				      (else (- new_k!70 1))))
				    (new_x!36 (ite cs!1253 cy!1!9 new_x!35))
				    (new_k!101
				     (cond
				      (cs!1267 1)
				      ((= cy!2!9 new_x!48) (+ new_k!100 1))
				      (else (- new_k!100 1))))
				    (new_x!49 (ite cs!1267 cy!2!9 new_x!48)))
				(let ((cs!1240 (= new_k!41 0))
				      (cs!1254 (= new_k!71 0))
				      (cs!1268 (= new_k!101 0)))
				  (let ((new_k!42
					 (cond
					  (cs!1240 1)
					  ((= cy!0!8 new_x!23) (+ new_k!41 1))
					  (else (- new_k!41 1))))
					(new_x!24 (ite cs!1240 cy!0!8 new_x!23))
					(new_k!72
					 (cond
					  (cs!1254 1)
					  ((= cy!1!8 new_x!36) (+ new_k!71 1))
					  (else (- new_k!71 1))))
					(new_x!37 (ite cs!1254 cy!1!8 new_x!36))
					(new_k!102
					 (cond
					  (cs!1268 1)
					  ((= cy!2!8 new_x!49) (+ new_k!101 1))
					  (else (- new_k!101 1))))
					(new_x!50 (ite cs!1268 cy!2!8 new_x!49)))
				    (let ((cs!1241 (= new_k!42 0))
					  (cs!1255 (= new_k!72 0))
					  (cs!1269 (= new_k!102 0)))
				      (let ((new_k!43
					     (cond
					      (cs!1241 1)
					      ((= cy!0!7 new_x!24) (+ new_k!42 1))
					      (else (- new_k!42 1))))
					    (new_x!25 (ite cs!1241 cy!0!7 new_x!24))
					    (new_k!73
					     (cond
					      (cs!1255 1)
					      ((= cy!1!7 new_x!37) (+ new_k!72 1))
					      (else (- new_k!72 1))))
					    (new_x!38 (ite cs!1255 cy!1!7 new_x!37))
					    (new_k!103
					     (cond
					      (cs!1269 1)
					      ((= cy!2!7 new_x!50) (+ new_k!102 1))
					      (else (- new_k!102 1))))
					    (new_x!51 (ite cs!1269 cy!2!7 new_x!50)))
					(let ((cs!1242 (= new_k!43 0))
					      (cs!1256 (= new_k!73 0))
					      (cs!1270 (= new_k!103 0)))
					  (let ((new_k!44
						 (cond
						  (cs!1242 1)
						  ((= cy!0!6 new_x!25) (+ new_k!43 1))
						  (else (- new_k!43 1))))
						(new_x!26 (ite cs!1242 cy!0!6 new_x!25))
						(new_k!74
						 (cond
						  (cs!1256 1)
						  ((= cy!1!6 new_x!38) (+ new_k!73 1))
						  (else (- new_k!73 1))))
						(new_x!39 (ite cs!1256 cy!1!6 new_x!38))
						(new_k!104
						 (cond
						  (cs!1270 1)
						  ((= cy!2!6 new_x!51) (+ new_k!103 1))
						  (else (- new_k!103 1))))
						(new_x!52 (ite cs!1270 cy!2!6 new_x!51)))
					    (let ((cs!1243 (= new_k!44 0))
						  (cs!1257 (= new_k!74 0))
						  (cs!1271 (= new_k!104 0)))
					      (let ((new_k!45
						     (cond
						      (cs!1243 1)
						      ((= cy!0!5 new_x!26) (+ new_k!44 1))
						      (else (- new_k!44 1))))
						    (new_x!27 (ite cs!1243 cy!0!5 new_x!26))
						    (new_k!75
						     (cond
						      (cs!1257 1)
						      ((= cy!1!5 new_x!39) (+ new_k!74 1))
						      (else (- new_k!74 1))))
						    (new_x!40 (ite cs!1257 cy!1!5 new_x!39))
						    (new_k!105
						     (cond
						      (cs!1271 1)
						      ((= cy!2!5 new_x!52) (+ new_k!104 1))
						      (else (- new_k!104 1))))
						    (new_x!53 (ite cs!1271 cy!2!5 new_x!52)))
						(let ((cs!1244 (= new_k!45 0))
						      (cs!1258 (= new_k!75 0))
						      (cs!1272 (= new_k!105 0)))
						  (let ((new_k!46
							 (cond
							  (cs!1244 1)
							  ((= cy!0!4 new_x!27) (+ new_k!45 1))
							  (else (- new_k!45 1))))
							(new_x!28 (ite cs!1244 cy!0!4 new_x!27))
							(new_k!76
							 (cond
							  (cs!1258 1)
							  ((= cy!1!4 new_x!40) (+ new_k!75 1))
							  (else (- new_k!75 1))))
							(new_x!41 (ite cs!1258 cy!1!4 new_x!40))
							(new_k!106
							 (cond
							  (cs!1272 1)
							  ((= cy!2!4 new_x!53) (+ new_k!105 1))
							  (else (- new_k!105 1))))
							(new_x!54 (ite cs!1272 cy!2!4 new_x!53)))
						    (let ((cs!1245 (= new_k!46 0))
							  (cs!1259 (= new_k!76 0))
							  (cs!1273 (= new_k!106 0)))
						      (let ((new_k!47
							     (cond
							      (cs!1245 1)
							      ((= cy!0!3 new_x!28) (+ new_k!46 1))
							      (else (- new_k!46 1))))
							    (new_x!29 (ite cs!1245 cy!0!3 new_x!28))
							    (new_k!77
							     (cond
							      (cs!1259 1)
							      ((= cy!1!3 new_x!41) (+ new_k!76 1))
							      (else (- new_k!76 1))))
							    (new_x!42 (ite cs!1259 cy!1!3 new_x!41))
							    (new_k!107
							     (cond
							      (cs!1273 1)
							      ((= cy!2!3 new_x!54) (+ new_k!106 1))
							      (else (- new_k!106 1))))
							    (new_x!55 (ite cs!1273 cy!2!3 new_x!54)))
							(let ((cs!1246 (= new_k!47 0))
							      (cs!1260 (= new_k!77 0))
							      (cs!1274 (= new_k!107 0)))
							  (let ((new_k!48
								 (cond
								  (cs!1246 1)
								  ((= cy!0!2 new_x!29) (+ new_k!47 1))
								  (else (- new_k!47 1))))
								(new_x!30 (ite cs!1246 cy!0!2 new_x!29))
								(new_k!78
								 (cond
								  (cs!1260 1)
								  ((= cy!1!2 new_x!42) (+ new_k!77 1))
								  (else (- new_k!77 1))))
								(new_x!43 (ite cs!1260 cy!1!2 new_x!42))
								(new_k!108
								 (cond
								  (cs!1274 1)
								  ((= cy!2!2 new_x!55) (+ new_k!107 1))
								  (else (- new_k!107 1))))
								(new_x!56 (ite cs!1274 cy!2!2 new_x!55)))
							    (let ((cs!1247 (= new_k!48 0))
								  (cs!1261 (= new_k!78 0))
								  (cs!1275 (= new_k!108 0)))
							      (let ((x!38
								     (cond
								      ((=
									(cond
									 (cs!1247 1)
									 ((= cy!0!1 new_x!30) (+ new_k!48 1))
									 (else (- new_k!48 1)))
									0)
								       cy!0!0)
								      (cs!1247 cy!0!1)
								      (else new_x!30)))
								    (x!39
								     (cond
								      ((=
									(cond
									 (cs!1261 1)
									 ((= cy!1!1 new_x!43) (+ new_k!78 1))
									 (else (- new_k!78 1)))
									0)
								       cy!1!0)
								      (cs!1261 cy!1!1)
								      (else new_x!43)))
								    (x!40
								     (cond
								      ((=
									(cond
									 (cs!1275 1)
									 ((= cy!2!1 new_x!56) (+ new_k!108 1))
									 (else (- new_k!108 1)))
									0)
								       cy!2!0)
								      (cs!1275 cy!2!1)
								      (else new_x!56))))
								(let ((new_k!49 (ite (= cy!0!16 x!38) 8 9))
								      (new_k!79 (ite (= cy!1!16 x!39) 8 9))
								      (new_k!109 (ite (= cy!2!16 x!40) 8 9)))
								  (let ((new_k!50
									 (ite (= cy!0!15 x!38) (- new_k!49 1) new_k!49))
									(new_k!80
									 (ite (= cy!1!15 x!39) (- new_k!79 1) new_k!79))
									(new_k!110
									 (ite (= cy!2!15 x!40) (- new_k!109 1) new_k!109)))
								    (let ((new_k!51
									   (ite (= cy!0!14 x!38) (- new_k!50 1) new_k!50))
									  (new_k!81
									   (ite (= cy!1!14 x!39) (- new_k!80 1) new_k!80))
									  (new_k!111
									   (ite (= cy!2!14 x!40) (- new_k!110 1) new_k!110)))
								      (let ((new_k!52
									     (ite (= cy!0!13 x!38) (- new_k!51 1) new_k!51))
									    (new_k!82
									     (ite (= cy!1!13 x!39) (- new_k!81 1) new_k!81))
									    (new_k!112
									     (ite (= cy!2!13 x!40) (- new_k!111 1) new_k!111)))
									(let ((new_k!53
									       (ite (= cy!0!12 x!38) (- new_k!52 1) new_k!52))
									      (new_k!83
									       (ite (= cy!1!12 x!39) (- new_k!82 1) new_k!82))
									      (new_k!113
									       (ite (= cy!2!12 x!40) (- new_k!112 1) new_k!112)))
									  (let ((new_k!54
										 (ite (= cy!0!11 x!38) (- new_k!53 1) new_k!53))
										(new_k!84
										 (ite (= cy!1!11 x!39) (- new_k!83 1) new_k!83))
										(new_k!114
										 (ite (= cy!2!11 x!40) (- new_k!113 1) new_k!113)))
									    (let ((new_k!55
										   (ite (= cy!0!10 x!38) (- new_k!54 1) new_k!54))
										  (new_k!85
										   (ite (= cy!1!10 x!39) (- new_k!84 1) new_k!84))
										  (new_k!115
										   (ite (= cy!2!10 x!40) (- new_k!114 1) new_k!114)))
									      (let ((new_k!56
										     (ite (= cy!0!9 x!38) (- new_k!55 1) new_k!55))
										    (new_k!86 (ite (= cy!1!9 x!39) (- new_k!85 1) new_k!85))
										    (new_k!116
										     (ite (= cy!2!9 x!40) (- new_k!115 1) new_k!115)))
										(let ((new_k!57
										       (ite (= cy!0!8 x!38) (- new_k!56 1) new_k!56))
										      (new_k!87 (ite (= cy!1!8 x!39) (- new_k!86 1) new_k!86))
										      (new_k!117
										       (ite (= cy!2!8 x!40) (- new_k!116 1) new_k!116)))
										  (let ((new_k!58
											 (ite (= cy!0!7 x!38) (- new_k!57 1) new_k!57))
											(new_k!88 (ite (= cy!1!7 x!39) (- new_k!87 1) new_k!87))
											(new_k!118
											 (ite (= cy!2!7 x!40) (- new_k!117 1) new_k!117)))
										    (let ((new_k!59
											   (ite (= cy!0!6 x!38) (- new_k!58 1) new_k!58))
											  (new_k!89 (ite (= cy!1!6 x!39) (- new_k!88 1) new_k!88))
											  (new_k!119
											   (ite (= cy!2!6 x!40) (- new_k!118 1) new_k!118)))
										      (let ((new_k!60
											     (ite (= cy!0!5 x!38) (- new_k!59 1) new_k!59))
											    (new_k!90 (ite (= cy!1!5 x!39) (- new_k!89 1) new_k!89))
											    (new_k!120
											     (ite (= cy!2!5 x!40) (- new_k!119 1) new_k!119)))
											(let ((new_k!61
											       (ite (= cy!0!4 x!38) (- new_k!60 1) new_k!60))
											      (new_k!91 (ite (= cy!1!4 x!39) (- new_k!90 1) new_k!90))
											      (new_k!121
											       (ite (= cy!2!4 x!40) (- new_k!120 1) new_k!120)))
											  (let ((new_k!62
												 (ite (= cy!0!3 x!38) (- new_k!61 1) new_k!61))
												(new_k!92 (ite (= cy!1!3 x!39) (- new_k!91 1) new_k!91))
												(new_k!122
												 (ite (= cy!2!3 x!40) (- new_k!121 1) new_k!121)))
											    (let ((new_k!63
												   (ite (= cy!0!2 x!38) (- new_k!62 1) new_k!62))
												  (new_k!93 (ite (= cy!1!2 x!39) (- new_k!92 1) new_k!92))
												  (new_k!123
												   (ite (= cy!2!2 x!40) (- new_k!122 1) new_k!122)))
											      (let ((new_k!64
												     (ite (= cy!0!1 x!38) (- new_k!63 1) new_k!63))
												    (new_k!94 (ite (= cy!1!1 x!39) (- new_k!93 1) new_k!93))
												    (new_k!124
												     (ite (= cy!2!1 x!40) (- new_k!123 1) new_k!123)))
												(and
												 (= source' source)
												 (= val' val)
												 (or
												  (and
												   (= round 0)
												   (and
												    (or
												     cs!1133
												     (/= 1 source)
												     (and
												      (= cx!0!0' val)
												      (= cx!0!1' val)
												      (= cx!0!2' val)
												      (= cx!0!3' val)
												      (= cx!0!4' val)
												      (= cx!0!5' val)
												      (= cx!0!6' val)
												      (= cx!0!7' val)
												      (= cx!0!8' val)
												      (= cx!0!9' val)
												      (= cx!0!10' val)
												      (= cx!0!11' val)
												      (= cx!0!12' val)
												      (= cx!0!13' val)
												      (= cx!0!14' val)
												      (= cx!0!15' val)
												      (= cx!0!16' val)))
												    (or
												     cs!1151
												     (/= 2 source)
												     (and
												      (= cx!1!0' val)
												      (= cx!1!1' val)
												      (= cx!1!2' val)
												      (= cx!1!3' val)
												      (= cx!1!4' val)
												      (= cx!1!5' val)
												      (= cx!1!6' val)
												      (= cx!1!7' val)
												      (= cx!1!8' val)
												      (= cx!1!9' val)
												      (= cx!1!10' val)
												      (= cx!1!11' val)
												      (= cx!1!12' val)
												      (= cx!1!13' val)
												      (= cx!1!14' val)
												      (= cx!1!15' val)
												      (= cx!1!16' val)))
												    (or
												     cs!1169
												     (/= 3 source)
												     (and
												      (= cx!2!0' val)
												      (= cx!2!1' val)
												      (= cx!2!2' val)
												      (= cx!2!3' val)
												      (= cx!2!4' val)
												      (= cx!2!5' val)
												      (= cx!2!6' val)
												      (= cx!2!7' val)
												      (= cx!2!8' val)
												      (= cx!2!9' val)
												      (= cx!2!10' val)
												      (= cx!2!11' val)
												      (= cx!2!12' val)
												      (= cx!2!13' val)
												      (= cx!2!14' val)
												      (= cx!2!15' val)
												      (= cx!2!16' val)))
												    (or
												     cs!1133
												     (= 1 source)
												     (and
												      (= cx!0!0' 0)
												      (= cx!0!1' 0)
												      (= cx!0!2' 0)
												      (= cx!0!3' 0)
												      (= cx!0!4' 0)
												      (= cx!0!5' 0)
												      (= cx!0!6' 0)
												      (= cx!0!7' 0)
												      (= cx!0!8' 0)
												      (= cx!0!9' 0)
												      (= cx!0!10' 0)
												      (= cx!0!11' 0)
												      (= cx!0!12' 0)
												      (= cx!0!13' 0)
												      (= cx!0!14' 0)
												      (= cx!0!15' 0)
												      (= cx!0!16' 0)))
												    (or
												     cs!1151
												     (= 2 source)
												     (and
												      (= cx!1!0' 0)
												      (= cx!1!1' 0)
												      (= cx!1!2' 0)
												      (= cx!1!3' 0)
												      (= cx!1!4' 0)
												      (= cx!1!5' 0)
												      (= cx!1!6' 0)
												      (= cx!1!7' 0)
												      (= cx!1!8' 0)
												      (= cx!1!9' 0)
												      (= cx!1!10' 0)
												      (= cx!1!11' 0)
												      (= cx!1!12' 0)
												      (= cx!1!13' 0)
												      (= cx!1!14' 0)
												      (= cx!1!15' 0)
												      (= cx!1!16' 0)))
												    (or
												     cs!1169
												     (= 3 source)
												     (and
												      (= cx!2!0' 0)
												      (= cx!2!1' 0)
												      (= cx!2!2' 0)
												      (= cx!2!3' 0)
												      (= cx!2!4' 0)
												      (= cx!2!5' 0)
												      (= cx!2!6' 0)
												      (= cx!2!7' 0)
												      (= cx!2!8' 0)
												      (= cx!2!9' 0)
												      (= cx!2!10' 0)
												      (= cx!2!11' 0)
												      (= cx!2!12' 0)
												      (= cx!2!13' 0)
												      (= cx!2!14' 0)
												      (= cx!2!15' 0)
												      (= cx!2!16' 0))))
												   (= round' 1)
												   cs!1188
												   cs!1189
												   cs!1190
												   cs!1191)
												  (and
												   (= round 1)
												   (and
												    (or cs!1048 (= cy!0!0' cs!1049))
												    (or cs!1048 (= cy!1!0' cs!1049))
												    (or cs!1048 (= cy!2!0' cs!1049))
												    (or cs!1050 (= cy!0!1' cs!1051))
												    (or cs!1050 (= cy!1!1' cs!1051))
												    (or cs!1050 (= cy!2!1' cs!1051))
												    (or cs!1052 (= cy!0!2' cs!1053))
												    (or cs!1052 (= cy!1!2' cs!1053))
												    (or cs!1052 (= cy!2!2' cs!1053))
												    (or cs!1054 (= cy!0!3' cs!1055))
												    (or cs!1054 (= cy!1!3' cs!1055))
												    (or cs!1054 (= cy!2!3' cs!1055))
												    (or cs!1056 (= cy!0!4' cs!1057))
												    (or cs!1056 (= cy!1!4' cs!1057))
												    (or cs!1056 (= cy!2!4' cs!1057))
												    (or cs!1058 (= cy!0!5' cs!1059))
												    (or cs!1058 (= cy!1!5' cs!1059))
												    (or cs!1058 (= cy!2!5' cs!1059))
												    (or cs!1060 (= cy!0!6' cs!1061))
												    (or cs!1060 (= cy!1!6' cs!1061))
												    (or cs!1060 (= cy!2!6' cs!1061))
												    (or cs!1062 (= cy!0!7' cs!1063))
												    (or cs!1062 (= cy!1!7' cs!1063))
												    (or cs!1062 (= cy!2!7' cs!1063))
												    (or cs!1064 (= cy!0!8' cs!1065))
												    (or cs!1064 (= cy!1!8' cs!1065))
												    (or cs!1064 (= cy!2!8' cs!1065))
												    (or cs!1066 (= cy!0!9' cs!1067))
												    (or cs!1066 (= cy!1!9' cs!1067))
												    (or cs!1066 (= cy!2!9' cs!1067))
												    (or cs!1068 (= cy!0!10' cs!1069))
												    (or cs!1068 (= cy!1!10' cs!1069))
												    (or cs!1068 (= cy!2!10' cs!1069))
												    (or cs!1070 (= cy!0!11' cs!1071))
												    (or cs!1070 (= cy!1!11' cs!1071))
												    (or cs!1070 (= cy!2!11' cs!1071))
												    (or cs!1072 (= cy!0!12' cs!1073))
												    (or cs!1072 (= cy!1!12' cs!1073))
												    (or cs!1072 (= cy!2!12' cs!1073))
												    (or cs!1074 (= cy!0!13' cs!1075))
												    (or cs!1074 (= cy!1!13' cs!1075))
												    (or cs!1074 (= cy!2!13' cs!1075))
												    (or cs!1076 (= cy!0!14' cs!1077))
												    (or cs!1076 (= cy!1!14' cs!1077))
												    (or cs!1076 (= cy!2!14' cs!1077))
												    (or cs!1078 (= cy!0!15' cs!1079))
												    (or cs!1078 (= cy!1!15' cs!1079))
												    (or cs!1078 (= cy!2!15' cs!1079))
												    (or cs!1114 (= cy!0!16' cs!1132))
												    (or cs!1114 (= cy!1!16' cs!1132))
												    (or cs!1114 (= cy!2!16' cs!1132)))
												   (= round' 2)
												   cs!1187
												   cs!1189
												   cs!1190
												   cs!1191)
												  (and
												   (= round 2)
												   (and
												    (or
												     cs!1133
												     (=
												      v!0'
												      (ite (or
													    (= new_k!49 0)
													    (= new_k!50 0)
													    (= new_k!51 0)
													    (= new_k!52 0)
													    (= new_k!53 0)
													    (= new_k!54 0)
													    (= new_k!55 0)
													    (= new_k!56 0)
													    (= new_k!57 0)
													    (= new_k!58 0)
													    (= new_k!59 0)
													    (= new_k!60 0)
													    (= new_k!61 0)
													    (= new_k!62 0)
													    (= new_k!63 0)
													    (= new_k!64 0)
													    (= (ite (= cy!0!0 x!38) (- new_k!64 1) new_k!64) 0))
													   x!38
													   0)))
												    (or
												     cs!1151
												     (=
												      v!1'
												      (ite (or
													    (= new_k!79 0)
													    (= new_k!80 0)
													    (= new_k!81 0)
													    (= new_k!82 0)
													    (= new_k!83 0)
													    (= new_k!84 0)
													    (= new_k!85 0)
													    (= new_k!86 0)
													    (= new_k!87 0)
													    (= new_k!88 0)
													    (= new_k!89 0)
													    (= new_k!90 0)
													    (= new_k!91 0)
													    (= new_k!92 0)
													    (= new_k!93 0)
													    (= new_k!94 0)
													    (= (ite (= cy!1!0 x!39) (- new_k!94 1) new_k!94) 0))
													   x!39
													   0)))
												    (or
												     cs!1169
												     (=
												      v!2'
												      (ite (or
													    (= new_k!109 0)
													    (= new_k!110 0)
													    (= new_k!111 0)
													    (= new_k!112 0)
													    (= new_k!113 0)
													    (= new_k!114 0)
													    (= new_k!115 0)
													    (= new_k!116 0)
													    (= new_k!117 0)
													    (= new_k!118 0)
													    (= new_k!119 0)
													    (= new_k!120 0)
													    (= new_k!121 0)
													    (= new_k!122 0)
													    (= new_k!123 0)
													    (= new_k!124 0)
													    (= (ite (= cy!2!0 x!40) (- new_k!124 1) new_k!124) 0))
													   x!40
													   0))))
												   (= round' 3)
												   cs!1187
												   cs!1188
												   cs!1189
												   cs!1190)
												  (and
												   (= round 3)
												   cs!1187
												   cs!1188
												   cs!1189
												   cs!1190
												   (= round' round)
												   cs!1191)))))))))))))))))))))))))))))))))))))))))))))))))))


;;
;; Transition system
;;
(define-transition-system OM
  state
  init
  trans
)

;;
;; Query: validity
;;
(query OM
       (or
        (not
	 (cond
	  ((= source 3) good_p!2)
	  ((= source 2) good_p!1)
	  (else good_p!0)))
        (< round 3)
        (and
	 (or (not good_p!0) (= v!0 val))
	 (or (not good_p!1) (= v!1 val))
	 (or (not good_p!2) (= v!2 val)))))


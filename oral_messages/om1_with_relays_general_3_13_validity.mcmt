;; State type:
;;  cx!i!j: channel from process i to relay j
;;  cy!i!j: channel from relay j to process i
;;  good_p!i: true if process i is non-faulty
;;  good_r!j: true if relay k is non-faulty
;;  v!i: result produced by process i
;;  round: global round counter
;;
;; Encoding:
;;  channels store a real value. We encode "nothing sent" as 0.
;;
;; Parameters:
;;  source: id of the source process (integer between 1 and 4)
;;  val: value sent by the source, if its not faulty.
;;  val is assumed non-zero.
;;

(define-state-type state
  ((cx!0!0 Real)
   (cx!0!1 Real)
   (cx!0!2 Real)
   (cx!0!3 Real)
   (cx!0!4 Real)
   (cx!0!5 Real)
   (cx!0!6 Real)
   (cx!0!7 Real)
   (cx!0!8 Real)
   (cx!0!9 Real)
   (cx!0!10 Real)
   (cx!0!11 Real)
   (cx!0!12 Real)
   (cx!1!0 Real)
   (cx!1!1 Real)
   (cx!1!2 Real)
   (cx!1!3 Real)
   (cx!1!4 Real)
   (cx!1!5 Real)
   (cx!1!6 Real)
   (cx!1!7 Real)
   (cx!1!8 Real)
   (cx!1!9 Real)
   (cx!1!10 Real)
   (cx!1!11 Real)
   (cx!1!12 Real)
   (cx!2!0 Real)
   (cx!2!1 Real)
   (cx!2!2 Real)
   (cx!2!3 Real)
   (cx!2!4 Real)
   (cx!2!5 Real)
   (cx!2!6 Real)
   (cx!2!7 Real)
   (cx!2!8 Real)
   (cx!2!9 Real)
   (cx!2!10 Real)
   (cx!2!11 Real)
   (cx!2!12 Real)
   (cy!0!0 Real)
   (cy!0!1 Real)
   (cy!0!2 Real)
   (cy!0!3 Real)
   (cy!0!4 Real)
   (cy!0!5 Real)
   (cy!0!6 Real)
   (cy!0!7 Real)
   (cy!0!8 Real)
   (cy!0!9 Real)
   (cy!0!10 Real)
   (cy!0!11 Real)
   (cy!0!12 Real)
   (cy!1!0 Real)
   (cy!1!1 Real)
   (cy!1!2 Real)
   (cy!1!3 Real)
   (cy!1!4 Real)
   (cy!1!5 Real)
   (cy!1!6 Real)
   (cy!1!7 Real)
   (cy!1!8 Real)
   (cy!1!9 Real)
   (cy!1!10 Real)
   (cy!1!11 Real)
   (cy!1!12 Real)
   (cy!2!0 Real)
   (cy!2!1 Real)
   (cy!2!2 Real)
   (cy!2!3 Real)
   (cy!2!4 Real)
   (cy!2!5 Real)
   (cy!2!6 Real)
   (cy!2!7 Real)
   (cy!2!8 Real)
   (cy!2!9 Real)
   (cy!2!10 Real)
   (cy!2!11 Real)
   (cy!2!12 Real)
   (good_p!0 Bool)
   (good_p!1 Bool)
   (good_p!2 Bool)
   (good_r!0 Bool)
   (good_r!1 Bool)
   (good_r!2 Bool)
   (good_r!3 Bool)
   (good_r!4 Bool)
   (good_r!5 Bool)
   (good_r!6 Bool)
   (good_r!7 Bool)
   (good_r!8 Bool)
   (good_r!9 Bool)
   (good_r!10 Bool)
   (good_r!11 Bool)
   (good_r!12 Bool)
   (v!0 Real)
   (v!1 Real)
   (v!2 Real)
   (round Real)
   ;; parameters
   (source Real)
   (val Real)))


;;
;; Initial state
;;
(define-states init state
  (and
   (= round 0)
   (= cx!0!0 0)
   (= cx!0!1 0)
   (= cx!0!2 0)
   (= cx!0!3 0)
   (= cx!0!4 0)
   (= cx!0!5 0)
   (= cx!0!6 0)
   (= cx!0!7 0)
   (= cx!0!8 0)
   (= cx!0!9 0)
   (= cx!0!10 0)
   (= cx!0!11 0)
   (= cx!0!12 0)
   (= cx!1!0 0)
   (= cx!1!1 0)
   (= cx!1!2 0)
   (= cx!1!3 0)
   (= cx!1!4 0)
   (= cx!1!5 0)
   (= cx!1!6 0)
   (= cx!1!7 0)
   (= cx!1!8 0)
   (= cx!1!9 0)
   (= cx!1!10 0)
   (= cx!1!11 0)
   (= cx!1!12 0)
   (= cx!2!0 0)
   (= cx!2!1 0)
   (= cx!2!2 0)
   (= cx!2!3 0)
   (= cx!2!4 0)
   (= cx!2!5 0)
   (= cx!2!6 0)
   (= cx!2!7 0)
   (= cx!2!8 0)
   (= cx!2!9 0)
   (= cx!2!10 0)
   (= cx!2!11 0)
   (= cx!2!12 0)
   (= cy!0!0 0)
   (= cy!0!1 0)
   (= cy!0!2 0)
   (= cy!0!3 0)
   (= cy!0!4 0)
   (= cy!0!5 0)
   (= cy!0!6 0)
   (= cy!0!7 0)
   (= cy!0!8 0)
   (= cy!0!9 0)
   (= cy!0!10 0)
   (= cy!0!11 0)
   (= cy!0!12 0)
   (= cy!1!0 0)
   (= cy!1!1 0)
   (= cy!1!2 0)
   (= cy!1!3 0)
   (= cy!1!4 0)
   (= cy!1!5 0)
   (= cy!1!6 0)
   (= cy!1!7 0)
   (= cy!1!8 0)
   (= cy!1!9 0)
   (= cy!1!10 0)
   (= cy!1!11 0)
   (= cy!1!12 0)
   (= cy!2!0 0)
   (= cy!2!1 0)
   (= cy!2!2 0)
   (= cy!2!3 0)
   (= cy!2!4 0)
   (= cy!2!5 0)
   (= cy!2!6 0)
   (= cy!2!7 0)
   (= cy!2!8 0)
   (= cy!2!9 0)
   (= cy!2!10 0)
   (= cy!2!11 0)
   (= cy!2!12 0)
   ;;
   ;; Constraints on val and source
   ;;
   (or (= source 1) (= source 2) (= source 3))
   (not (= val 0))
   ;;
   ;; Fault model
   ;;
   (and good_p!0 good_p!1 good_p!2)
   (or
    (and
     (not good_r!0)
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12)
    (and
     (not good_r!1)
     good_r!0
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12)
    (and
     (not good_r!2)
     good_r!0
     good_r!1
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12)
    (and
     (not good_r!3)
     good_r!0
     good_r!1
     good_r!2
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12)
    (and
     (not good_r!4)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12)
    (and
     (not good_r!5)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12)
    (and
     (not good_r!6)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12)
    (and
     (not good_r!7)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!8
     good_r!9
     good_r!10
     good_r!11
     good_r!12)
    (and
     (not good_r!8)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!9
     good_r!10
     good_r!11
     good_r!12)
    (and
     (not good_r!9)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!10
     good_r!11
     good_r!12)
    (and
     (not good_r!10)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!11
     good_r!12)
    (and
     (not good_r!11)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!12)
    (and
     (not good_r!12)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10
     good_r!11))))



;;
;; Transition relation
;; 
(define-transition trans state
  (let ((cond!1 (= source 2))
	(cond!2 (= source 3))
	(cs!743 (not good_r!1))
	(cs!745 (not good_r!2))
	(cs!747 (not good_r!3))
	(cs!749 (not good_r!4))
	(cs!751 (not good_r!5))
	(cs!753 (not good_r!6))
	(cs!755 (not good_r!7))
	(cs!757 (not good_r!8))
	(cs!759 (not good_r!9))
	(cs!761 (not good_r!10))
	(cs!763 (not good_r!11))
	(cs!791 (not good_r!12))
	(cs!806 (not good_p!0))
	(cs!820 (not good_p!1))
	(cs!834 (not good_p!2))
	(cs!848
	 (and
	  (= cx!0!0' cx!0!0)
	  (= cx!0!1' cx!0!1)
	  (= cx!0!2' cx!0!2)
	  (= cx!0!3' cx!0!3)
	  (= cx!0!4' cx!0!4)
	  (= cx!0!5' cx!0!5)
	  (= cx!0!6' cx!0!6)
	  (= cx!0!7' cx!0!7)
	  (= cx!0!8' cx!0!8)
	  (= cx!0!9' cx!0!9)
	  (= cx!0!10' cx!0!10)
	  (= cx!0!11' cx!0!11)
	  (= cx!0!12' cx!0!12)
	  (= cx!1!0' cx!1!0)
	  (= cx!1!1' cx!1!1)
	  (= cx!1!2' cx!1!2)
	  (= cx!1!3' cx!1!3)
	  (= cx!1!4' cx!1!4)
	  (= cx!1!5' cx!1!5)
	  (= cx!1!6' cx!1!6)
	  (= cx!1!7' cx!1!7)
	  (= cx!1!8' cx!1!8)
	  (= cx!1!9' cx!1!9)
	  (= cx!1!10' cx!1!10)
	  (= cx!1!11' cx!1!11)
	  (= cx!1!12' cx!1!12)
	  (= cx!2!0' cx!2!0)
	  (= cx!2!1' cx!2!1)
	  (= cx!2!2' cx!2!2)
	  (= cx!2!3' cx!2!3)
	  (= cx!2!4' cx!2!4)
	  (= cx!2!5' cx!2!5)
	  (= cx!2!6' cx!2!6)
	  (= cx!2!7' cx!2!7)
	  (= cx!2!8' cx!2!8)
	  (= cx!2!9' cx!2!9)
	  (= cx!2!10' cx!2!10)
	  (= cx!2!11' cx!2!11)
	  (= cx!2!12' cx!2!12)))
	(cs!849
	 (and
	  (= cy!0!0' cy!0!0)
	  (= cy!0!1' cy!0!1)
	  (= cy!0!2' cy!0!2)
	  (= cy!0!3' cy!0!3)
	  (= cy!0!4' cy!0!4)
	  (= cy!0!5' cy!0!5)
	  (= cy!0!6' cy!0!6)
	  (= cy!0!7' cy!0!7)
	  (= cy!0!8' cy!0!8)
	  (= cy!0!9' cy!0!9)
	  (= cy!0!10' cy!0!10)
	  (= cy!0!11' cy!0!11)
	  (= cy!0!12' cy!0!12)
	  (= cy!1!0' cy!1!0)
	  (= cy!1!1' cy!1!1)
	  (= cy!1!2' cy!1!2)
	  (= cy!1!3' cy!1!3)
	  (= cy!1!4' cy!1!4)
	  (= cy!1!5' cy!1!5)
	  (= cy!1!6' cy!1!6)
	  (= cy!1!7' cy!1!7)
	  (= cy!1!8' cy!1!8)
	  (= cy!1!9' cy!1!9)
	  (= cy!1!10' cy!1!10)
	  (= cy!1!11' cy!1!11)
	  (= cy!1!12' cy!1!12)
	  (= cy!2!0' cy!2!0)
	  (= cy!2!1' cy!2!1)
	  (= cy!2!2' cy!2!2)
	  (= cy!2!3' cy!2!3)
	  (= cy!2!4' cy!2!4)
	  (= cy!2!5' cy!2!5)
	  (= cy!2!6' cy!2!6)
	  (= cy!2!7' cy!2!7)
	  (= cy!2!8' cy!2!8)
	  (= cy!2!9' cy!2!9)
	  (= cy!2!10' cy!2!10)
	  (= cy!2!11' cy!2!11)
	  (= cy!2!12' cy!2!12)))
	(cs!850
	 (and
	  (= good_p!0' good_p!0)
	  (= good_p!1' good_p!1)
	  (= good_p!2' good_p!2)))
	(cs!851
	 (and
	  (= good_r!0' good_r!0)
	  (= good_r!1' good_r!1)
	  (= good_r!2' good_r!2)
	  (= good_r!3' good_r!3)
	  (= good_r!4' good_r!4)
	  (= good_r!5' good_r!5)
	  (= good_r!6' good_r!6)
	  (= good_r!7' good_r!7)
	  (= good_r!8' good_r!8)
	  (= good_r!9' good_r!9)
	  (= good_r!10' good_r!10)
	  (= good_r!11' good_r!11)
	  (= good_r!12' good_r!12)))
	(cs!852 (and (= v!0' v!0) (= v!1' v!1) (= v!2' v!2)))
	(cs!892 (not good_r!0)))
    (let ((cs!744
	   (cond (cond!2 cx!2!1) (cond!1 cx!1!1) (else cx!0!1)))
	  (cs!746
	   (cond (cond!2 cx!2!2) (cond!1 cx!1!2) (else cx!0!2)))
	  (cs!748
	   (cond (cond!2 cx!2!3) (cond!1 cx!1!3) (else cx!0!3)))
	  (cs!750
	   (cond (cond!2 cx!2!4) (cond!1 cx!1!4) (else cx!0!4)))
	  (cs!752
	   (cond (cond!2 cx!2!5) (cond!1 cx!1!5) (else cx!0!5)))
	  (cs!754
	   (cond (cond!2 cx!2!6) (cond!1 cx!1!6) (else cx!0!6)))
	  (cs!756
	   (cond (cond!2 cx!2!7) (cond!1 cx!1!7) (else cx!0!7)))
	  (cs!758
	   (cond (cond!2 cx!2!8) (cond!1 cx!1!8) (else cx!0!8)))
	  (cs!760
	   (cond (cond!2 cx!2!9) (cond!1 cx!1!9) (else cx!0!9)))
	  (cs!762
	   (cond (cond!2 cx!2!10) (cond!1 cx!1!10) (else cx!0!10)))
	  (cs!764
	   (cond (cond!2 cx!2!11) (cond!1 cx!1!11) (else cx!0!11)))
	  (cs!805
	   (cond (cond!2 cx!2!12) (cond!1 cx!1!12) (else cx!0!12)))
	  (cs!893
	   (cond (cond!2 cx!2!0) (cond!1 cx!1!0) (else cx!0!0))))
      (let ((new_k!27 (ite (= cy!0!11 cy!0!12) 2 0))
	    (new_k!49 (ite (= cy!1!11 cy!1!12) 2 0))
	    (new_k!71 (ite (= cy!2!11 cy!2!12) 2 0)))
	(let ((cs!894 (= new_k!27 0))
	      (cs!904 (= new_k!49 0))
	      (cs!914 (= new_k!71 0)))
	  (let ((new_k!28
		 (cond
		  (cs!894 1)
		  ((= cy!0!10 cy!0!12) (+ new_k!27 1))
		  (else (- new_k!27 1))))
		(new_x!14 (ite cs!894 cy!0!10 cy!0!12))
		(new_k!50
		 (cond
		  (cs!904 1)
		  ((= cy!1!10 cy!1!12) (+ new_k!49 1))
		  (else (- new_k!49 1))))
		(new_x!23 (ite cs!904 cy!1!10 cy!1!12))
		(new_k!72
		 (cond
		  (cs!914 1)
		  ((= cy!2!10 cy!2!12) (+ new_k!71 1))
		  (else (- new_k!71 1))))
		(new_x!32 (ite cs!914 cy!2!10 cy!2!12)))
	    (let ((cs!895 (= new_k!28 0))
		  (cs!905 (= new_k!50 0))
		  (cs!915 (= new_k!72 0)))
	      (let ((new_k!29
		     (cond
		      (cs!895 1)
		      ((= cy!0!9 new_x!14) (+ new_k!28 1))
		      (else (- new_k!28 1))))
		    (new_x!15 (ite cs!895 cy!0!9 new_x!14))
		    (new_k!51
		     (cond
		      (cs!905 1)
		      ((= cy!1!9 new_x!23) (+ new_k!50 1))
		      (else (- new_k!50 1))))
		    (new_x!24 (ite cs!905 cy!1!9 new_x!23))
		    (new_k!73
		     (cond
		      (cs!915 1)
		      ((= cy!2!9 new_x!32) (+ new_k!72 1))
		      (else (- new_k!72 1))))
		    (new_x!33 (ite cs!915 cy!2!9 new_x!32)))
		(let ((cs!896 (= new_k!29 0))
		      (cs!906 (= new_k!51 0))
		      (cs!916 (= new_k!73 0)))
		  (let ((new_k!30
			 (cond
			  (cs!896 1)
			  ((= cy!0!8 new_x!15) (+ new_k!29 1))
			  (else (- new_k!29 1))))
			(new_x!16 (ite cs!896 cy!0!8 new_x!15))
			(new_k!52
			 (cond
			  (cs!906 1)
			  ((= cy!1!8 new_x!24) (+ new_k!51 1))
			  (else (- new_k!51 1))))
			(new_x!25 (ite cs!906 cy!1!8 new_x!24))
			(new_k!74
			 (cond
			  (cs!916 1)
			  ((= cy!2!8 new_x!33) (+ new_k!73 1))
			  (else (- new_k!73 1))))
			(new_x!34 (ite cs!916 cy!2!8 new_x!33)))
		    (let ((cs!897 (= new_k!30 0))
			  (cs!907 (= new_k!52 0))
			  (cs!917 (= new_k!74 0)))
		      (let ((new_k!31
			     (cond
			      (cs!897 1)
			      ((= cy!0!7 new_x!16) (+ new_k!30 1))
			      (else (- new_k!30 1))))
			    (new_x!17 (ite cs!897 cy!0!7 new_x!16))
			    (new_k!53
			     (cond
			      (cs!907 1)
			      ((= cy!1!7 new_x!25) (+ new_k!52 1))
			      (else (- new_k!52 1))))
			    (new_x!26 (ite cs!907 cy!1!7 new_x!25))
			    (new_k!75
			     (cond
			      (cs!917 1)
			      ((= cy!2!7 new_x!34) (+ new_k!74 1))
			      (else (- new_k!74 1))))
			    (new_x!35 (ite cs!917 cy!2!7 new_x!34)))
			(let ((cs!898 (= new_k!31 0))
			      (cs!908 (= new_k!53 0))
			      (cs!918 (= new_k!75 0)))
			  (let ((new_k!32
				 (cond
				  (cs!898 1)
				  ((= cy!0!6 new_x!17) (+ new_k!31 1))
				  (else (- new_k!31 1))))
				(new_x!18 (ite cs!898 cy!0!6 new_x!17))
				(new_k!54
				 (cond
				  (cs!908 1)
				  ((= cy!1!6 new_x!26) (+ new_k!53 1))
				  (else (- new_k!53 1))))
				(new_x!27 (ite cs!908 cy!1!6 new_x!26))
				(new_k!76
				 (cond
				  (cs!918 1)
				  ((= cy!2!6 new_x!35) (+ new_k!75 1))
				  (else (- new_k!75 1))))
				(new_x!36 (ite cs!918 cy!2!6 new_x!35)))
			    (let ((cs!899 (= new_k!32 0))
				  (cs!909 (= new_k!54 0))
				  (cs!919 (= new_k!76 0)))
			      (let ((new_k!33
				     (cond
				      (cs!899 1)
				      ((= cy!0!5 new_x!18) (+ new_k!32 1))
				      (else (- new_k!32 1))))
				    (new_x!19 (ite cs!899 cy!0!5 new_x!18))
				    (new_k!55
				     (cond
				      (cs!909 1)
				      ((= cy!1!5 new_x!27) (+ new_k!54 1))
				      (else (- new_k!54 1))))
				    (new_x!28 (ite cs!909 cy!1!5 new_x!27))
				    (new_k!77
				     (cond
				      (cs!919 1)
				      ((= cy!2!5 new_x!36) (+ new_k!76 1))
				      (else (- new_k!76 1))))
				    (new_x!37 (ite cs!919 cy!2!5 new_x!36)))
				(let ((cs!900 (= new_k!33 0))
				      (cs!910 (= new_k!55 0))
				      (cs!920 (= new_k!77 0)))
				  (let ((new_k!34
					 (cond
					  (cs!900 1)
					  ((= cy!0!4 new_x!19) (+ new_k!33 1))
					  (else (- new_k!33 1))))
					(new_x!20 (ite cs!900 cy!0!4 new_x!19))
					(new_k!56
					 (cond
					  (cs!910 1)
					  ((= cy!1!4 new_x!28) (+ new_k!55 1))
					  (else (- new_k!55 1))))
					(new_x!29 (ite cs!910 cy!1!4 new_x!28))
					(new_k!78
					 (cond
					  (cs!920 1)
					  ((= cy!2!4 new_x!37) (+ new_k!77 1))
					  (else (- new_k!77 1))))
					(new_x!38 (ite cs!920 cy!2!4 new_x!37)))
				    (let ((cs!901 (= new_k!34 0))
					  (cs!911 (= new_k!56 0))
					  (cs!921 (= new_k!78 0)))
				      (let ((new_k!35
					     (cond
					      (cs!901 1)
					      ((= cy!0!3 new_x!20) (+ new_k!34 1))
					      (else (- new_k!34 1))))
					    (new_x!21 (ite cs!901 cy!0!3 new_x!20))
					    (new_k!57
					     (cond
					      (cs!911 1)
					      ((= cy!1!3 new_x!29) (+ new_k!56 1))
					      (else (- new_k!56 1))))
					    (new_x!30 (ite cs!911 cy!1!3 new_x!29))
					    (new_k!79
					     (cond
					      (cs!921 1)
					      ((= cy!2!3 new_x!38) (+ new_k!78 1))
					      (else (- new_k!78 1))))
					    (new_x!39 (ite cs!921 cy!2!3 new_x!38)))
					(let ((cs!902 (= new_k!35 0))
					      (cs!912 (= new_k!57 0))
					      (cs!922 (= new_k!79 0)))
					  (let ((new_k!36
						 (cond
						  (cs!902 1)
						  ((= cy!0!2 new_x!21) (+ new_k!35 1))
						  (else (- new_k!35 1))))
						(new_x!22 (ite cs!902 cy!0!2 new_x!21))
						(new_k!58
						 (cond
						  (cs!912 1)
						  ((= cy!1!2 new_x!30) (+ new_k!57 1))
						  (else (- new_k!57 1))))
						(new_x!31 (ite cs!912 cy!1!2 new_x!30))
						(new_k!80
						 (cond
						  (cs!922 1)
						  ((= cy!2!2 new_x!39) (+ new_k!79 1))
						  (else (- new_k!79 1))))
						(new_x!40 (ite cs!922 cy!2!2 new_x!39)))
					    (let ((cs!903 (= new_k!36 0))
						  (cs!913 (= new_k!58 0))
						  (cs!923 (= new_k!80 0)))
					      (let ((x!30
						     (cond
						      ((=
							(cond
							 (cs!903 1)
							 ((= cy!0!1 new_x!22) (+ new_k!36 1))
							 (else (- new_k!36 1)))
							0)
						       cy!0!0)
						      (cs!903 cy!0!1)
						      (else new_x!22)))
						    (x!31
						     (cond
						      ((=
							(cond
							 (cs!913 1)
							 ((= cy!1!1 new_x!31) (+ new_k!58 1))
							 (else (- new_k!58 1)))
							0)
						       cy!1!0)
						      (cs!913 cy!1!1)
						      (else new_x!31)))
						    (x!32
						     (cond
						      ((=
							(cond
							 (cs!923 1)
							 ((= cy!2!1 new_x!40) (+ new_k!80 1))
							 (else (- new_k!80 1)))
							0)
						       cy!2!0)
						      (cs!923 cy!2!1)
						      (else new_x!40))))
						(let ((new_k!37 (ite (= cy!0!12 x!30) 6 7))
						      (new_k!59 (ite (= cy!1!12 x!31) 6 7))
						      (new_k!81 (ite (= cy!2!12 x!32) 6 7)))
						  (let ((new_k!38
							 (ite (= cy!0!11 x!30) (- new_k!37 1) new_k!37))
							(new_k!60
							 (ite (= cy!1!11 x!31) (- new_k!59 1) new_k!59))
							(new_k!82
							 (ite (= cy!2!11 x!32) (- new_k!81 1) new_k!81)))
						    (let ((new_k!39
							   (ite (= cy!0!10 x!30) (- new_k!38 1) new_k!38))
							  (new_k!61
							   (ite (= cy!1!10 x!31) (- new_k!60 1) new_k!60))
							  (new_k!83
							   (ite (= cy!2!10 x!32) (- new_k!82 1) new_k!82)))
						      (let ((new_k!40
							     (ite (= cy!0!9 x!30) (- new_k!39 1) new_k!39))
							    (new_k!62 (ite (= cy!1!9 x!31) (- new_k!61 1) new_k!61))
							    (new_k!84
							     (ite (= cy!2!9 x!32) (- new_k!83 1) new_k!83)))
							(let ((new_k!41
							       (ite (= cy!0!8 x!30) (- new_k!40 1) new_k!40))
							      (new_k!63 (ite (= cy!1!8 x!31) (- new_k!62 1) new_k!62))
							      (new_k!85
							       (ite (= cy!2!8 x!32) (- new_k!84 1) new_k!84)))
							  (let ((new_k!42
								 (ite (= cy!0!7 x!30) (- new_k!41 1) new_k!41))
								(new_k!64 (ite (= cy!1!7 x!31) (- new_k!63 1) new_k!63))
								(new_k!86
								 (ite (= cy!2!7 x!32) (- new_k!85 1) new_k!85)))
							    (let ((new_k!43
								   (ite (= cy!0!6 x!30) (- new_k!42 1) new_k!42))
								  (new_k!65 (ite (= cy!1!6 x!31) (- new_k!64 1) new_k!64))
								  (new_k!87
								   (ite (= cy!2!6 x!32) (- new_k!86 1) new_k!86)))
							      (let ((new_k!44
								     (ite (= cy!0!5 x!30) (- new_k!43 1) new_k!43))
								    (new_k!66 (ite (= cy!1!5 x!31) (- new_k!65 1) new_k!65))
								    (new_k!88
								     (ite (= cy!2!5 x!32) (- new_k!87 1) new_k!87)))
								(let ((new_k!45
								       (ite (= cy!0!4 x!30) (- new_k!44 1) new_k!44))
								      (new_k!67 (ite (= cy!1!4 x!31) (- new_k!66 1) new_k!66))
								      (new_k!89
								       (ite (= cy!2!4 x!32) (- new_k!88 1) new_k!88)))
								  (let ((new_k!46
									 (ite (= cy!0!3 x!30) (- new_k!45 1) new_k!45))
									(new_k!68 (ite (= cy!1!3 x!31) (- new_k!67 1) new_k!67))
									(new_k!90
									 (ite (= cy!2!3 x!32) (- new_k!89 1) new_k!89)))
								    (let ((new_k!47
									   (ite (= cy!0!2 x!30) (- new_k!46 1) new_k!46))
									  (new_k!69 (ite (= cy!1!2 x!31) (- new_k!68 1) new_k!68))
									  (new_k!91
									   (ite (= cy!2!2 x!32) (- new_k!90 1) new_k!90)))
								      (let ((new_k!48
									     (ite (= cy!0!1 x!30) (- new_k!47 1) new_k!47))
									    (new_k!70 (ite (= cy!1!1 x!31) (- new_k!69 1) new_k!69))
									    (new_k!92
									     (ite (= cy!2!1 x!32) (- new_k!91 1) new_k!91)))
									(and
									 (= source' source)
									 (= val' val)
									 (or
									  (and
									   (= round 0)
									   (and
									    (or
									     cs!806
									     (/= 1 source)
									     (and
									      (= cx!0!0' val)
									      (= cx!0!1' val)
									      (= cx!0!2' val)
									      (= cx!0!3' val)
									      (= cx!0!4' val)
									      (= cx!0!5' val)
									      (= cx!0!6' val)
									      (= cx!0!7' val)
									      (= cx!0!8' val)
									      (= cx!0!9' val)
									      (= cx!0!10' val)
									      (= cx!0!11' val)
									      (= cx!0!12' val)))
									    (or
									     cs!820
									     (/= 2 source)
									     (and
									      (= cx!1!0' val)
									      (= cx!1!1' val)
									      (= cx!1!2' val)
									      (= cx!1!3' val)
									      (= cx!1!4' val)
									      (= cx!1!5' val)
									      (= cx!1!6' val)
									      (= cx!1!7' val)
									      (= cx!1!8' val)
									      (= cx!1!9' val)
									      (= cx!1!10' val)
									      (= cx!1!11' val)
									      (= cx!1!12' val)))
									    (or
									     cs!834
									     (/= 3 source)
									     (and
									      (= cx!2!0' val)
									      (= cx!2!1' val)
									      (= cx!2!2' val)
									      (= cx!2!3' val)
									      (= cx!2!4' val)
									      (= cx!2!5' val)
									      (= cx!2!6' val)
									      (= cx!2!7' val)
									      (= cx!2!8' val)
									      (= cx!2!9' val)
									      (= cx!2!10' val)
									      (= cx!2!11' val)
									      (= cx!2!12' val)))
									    (or
									     cs!806
									     (= 1 source)
									     (and
									      (= cx!0!0' 0)
									      (= cx!0!1' 0)
									      (= cx!0!2' 0)
									      (= cx!0!3' 0)
									      (= cx!0!4' 0)
									      (= cx!0!5' 0)
									      (= cx!0!6' 0)
									      (= cx!0!7' 0)
									      (= cx!0!8' 0)
									      (= cx!0!9' 0)
									      (= cx!0!10' 0)
									      (= cx!0!11' 0)
									      (= cx!0!12' 0)))
									    (or
									     cs!820
									     (= 2 source)
									     (and
									      (= cx!1!0' 0)
									      (= cx!1!1' 0)
									      (= cx!1!2' 0)
									      (= cx!1!3' 0)
									      (= cx!1!4' 0)
									      (= cx!1!5' 0)
									      (= cx!1!6' 0)
									      (= cx!1!7' 0)
									      (= cx!1!8' 0)
									      (= cx!1!9' 0)
									      (= cx!1!10' 0)
									      (= cx!1!11' 0)
									      (= cx!1!12' 0)))
									    (or
									     cs!834
									     (= 3 source)
									     (and
									      (= cx!2!0' 0)
									      (= cx!2!1' 0)
									      (= cx!2!2' 0)
									      (= cx!2!3' 0)
									      (= cx!2!4' 0)
									      (= cx!2!5' 0)
									      (= cx!2!6' 0)
									      (= cx!2!7' 0)
									      (= cx!2!8' 0)
									      (= cx!2!9' 0)
									      (= cx!2!10' 0)
									      (= cx!2!11' 0)
									      (= cx!2!12' 0))))
									   (= round' 1)
									   cs!849
									   cs!850
									   cs!851
									   cs!852)
									  (and
									   (= round 1)
									   (and
									    (or cs!892 (= cy!0!0' cs!893))
									    (or cs!892 (= cy!1!0' cs!893))
									    (or cs!892 (= cy!2!0' cs!893))
									    (or cs!743 (= cy!0!1' cs!744))
									    (or cs!743 (= cy!1!1' cs!744))
									    (or cs!743 (= cy!2!1' cs!744))
									    (or cs!745 (= cy!0!2' cs!746))
									    (or cs!745 (= cy!1!2' cs!746))
									    (or cs!745 (= cy!2!2' cs!746))
									    (or cs!747 (= cy!0!3' cs!748))
									    (or cs!747 (= cy!1!3' cs!748))
									    (or cs!747 (= cy!2!3' cs!748))
									    (or cs!749 (= cy!0!4' cs!750))
									    (or cs!749 (= cy!1!4' cs!750))
									    (or cs!749 (= cy!2!4' cs!750))
									    (or cs!751 (= cy!0!5' cs!752))
									    (or cs!751 (= cy!1!5' cs!752))
									    (or cs!751 (= cy!2!5' cs!752))
									    (or cs!753 (= cy!0!6' cs!754))
									    (or cs!753 (= cy!1!6' cs!754))
									    (or cs!753 (= cy!2!6' cs!754))
									    (or cs!755 (= cy!0!7' cs!756))
									    (or cs!755 (= cy!1!7' cs!756))
									    (or cs!755 (= cy!2!7' cs!756))
									    (or cs!757 (= cy!0!8' cs!758))
									    (or cs!757 (= cy!1!8' cs!758))
									    (or cs!757 (= cy!2!8' cs!758))
									    (or cs!759 (= cy!0!9' cs!760))
									    (or cs!759 (= cy!1!9' cs!760))
									    (or cs!759 (= cy!2!9' cs!760))
									    (or cs!761 (= cy!0!10' cs!762))
									    (or cs!761 (= cy!1!10' cs!762))
									    (or cs!761 (= cy!2!10' cs!762))
									    (or cs!763 (= cy!0!11' cs!764))
									    (or cs!763 (= cy!1!11' cs!764))
									    (or cs!763 (= cy!2!11' cs!764))
									    (or cs!791 (= cy!0!12' cs!805))
									    (or cs!791 (= cy!1!12' cs!805))
									    (or cs!791 (= cy!2!12' cs!805)))
									   (= round' 2)
									   cs!848
									   cs!850
									   cs!851
									   cs!852)
									  (and
									   (= round 2)
									   (and
									    (or
									     cs!806
									     (=
									      v!0'
									      (ite (or
										    (= new_k!37 0)
										    (= new_k!38 0)
										    (= new_k!39 0)
										    (= new_k!40 0)
										    (= new_k!41 0)
										    (= new_k!42 0)
										    (= new_k!43 0)
										    (= new_k!44 0)
										    (= new_k!45 0)
										    (= new_k!46 0)
										    (= new_k!47 0)
										    (= new_k!48 0)
										    (= (ite (= cy!0!0 x!30) (- new_k!48 1) new_k!48) 0))
										   x!30
										   0)))
									    (or
									     cs!820
									     (=
									      v!1'
									      (ite (or
										    (= new_k!59 0)
										    (= new_k!60 0)
										    (= new_k!61 0)
										    (= new_k!62 0)
										    (= new_k!63 0)
										    (= new_k!64 0)
										    (= new_k!65 0)
										    (= new_k!66 0)
										    (= new_k!67 0)
										    (= new_k!68 0)
										    (= new_k!69 0)
										    (= new_k!70 0)
										    (= (ite (= cy!1!0 x!31) (- new_k!70 1) new_k!70) 0))
										   x!31
										   0)))
									    (or
									     cs!834
									     (=
									      v!2'
									      (ite (or
										    (= new_k!81 0)
										    (= new_k!82 0)
										    (= new_k!83 0)
										    (= new_k!84 0)
										    (= new_k!85 0)
										    (= new_k!86 0)
										    (= new_k!87 0)
										    (= new_k!88 0)
										    (= new_k!89 0)
										    (= new_k!90 0)
										    (= new_k!91 0)
										    (= new_k!92 0)
										    (= (ite (= cy!2!0 x!32) (- new_k!92 1) new_k!92) 0))
										   x!32
										   0))))
									   (= round' 3)
									   cs!848
									   cs!849
									   cs!850
									   cs!851)
									  (and
									   (= round 3)
									   cs!848
									   cs!849
									   cs!850
									   cs!851
									   (= round' round)
									   cs!852)))))))))))))))))))))))))))))))))))))))

;;
;; Transition system
;;
(define-transition-system OM
  state
  init
  trans
)

;;
;; Query: validity
;;
(query OM
       (or
        (not
	 (cond
	  ((= source 3) good_p!2)
	  ((= source 2) good_p!1)
	  (else good_p!0)))
        (< round 3)
        (and
	 (or (not good_p!0) (= v!0 val))
	 (or (not good_p!1) (= v!1 val))
	 (or (not good_p!2) (= v!2 val)))))


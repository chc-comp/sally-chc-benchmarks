;; State type:
;;  cx!i!j: channel from process i to relay j
;;  cy!i!j: channel from relay j to process i
;;  good_p!i: true if process i is non-faulty
;;  good_r!j: true if relay k is non-faulty
;;  v!i: result produced by process i
;;  round: global round counter
;;
;; Encoding:
;;  channels store a real value. We encode "nothing sent" as 0.
;;
;; Parameters:
;;  source: id of the source process (integer between 1 and 4)
;;  val: value sent by the source, if its not faulty.
;;  val is assumed non-zero.
;;

(define-state-type state
  ((cx!0!0 Real)
   (cx!0!1 Real)
   (cx!0!2 Real)
   (cx!0!3 Real)
   (cx!0!4 Real)
   (cx!0!5 Real)
   (cx!0!6 Real)
   (cx!0!7 Real)
   (cx!0!8 Real)
   (cx!0!9 Real)
   (cx!0!10 Real)
   (cx!1!0 Real)
   (cx!1!1 Real)
   (cx!1!2 Real)
   (cx!1!3 Real)
   (cx!1!4 Real)
   (cx!1!5 Real)
   (cx!1!6 Real)
   (cx!1!7 Real)
   (cx!1!8 Real)
   (cx!1!9 Real)
   (cx!1!10 Real)
   (cx!2!0 Real)
   (cx!2!1 Real)
   (cx!2!2 Real)
   (cx!2!3 Real)
   (cx!2!4 Real)
   (cx!2!5 Real)
   (cx!2!6 Real)
   (cx!2!7 Real)
   (cx!2!8 Real)
   (cx!2!9 Real)
   (cx!2!10 Real)
   (cx!3!0 Real)
   (cx!3!1 Real)
   (cx!3!2 Real)
   (cx!3!3 Real)
   (cx!3!4 Real)
   (cx!3!5 Real)
   (cx!3!6 Real)
   (cx!3!7 Real)
   (cx!3!8 Real)
   (cx!3!9 Real)
   (cx!3!10 Real)
   (cy!0!0 Real)
   (cy!0!1 Real)
   (cy!0!2 Real)
   (cy!0!3 Real)
   (cy!0!4 Real)
   (cy!0!5 Real)
   (cy!0!6 Real)
   (cy!0!7 Real)
   (cy!0!8 Real)
   (cy!0!9 Real)
   (cy!0!10 Real)
   (cy!1!0 Real)
   (cy!1!1 Real)
   (cy!1!2 Real)
   (cy!1!3 Real)
   (cy!1!4 Real)
   (cy!1!5 Real)
   (cy!1!6 Real)
   (cy!1!7 Real)
   (cy!1!8 Real)
   (cy!1!9 Real)
   (cy!1!10 Real)
   (cy!2!0 Real)
   (cy!2!1 Real)
   (cy!2!2 Real)
   (cy!2!3 Real)
   (cy!2!4 Real)
   (cy!2!5 Real)
   (cy!2!6 Real)
   (cy!2!7 Real)
   (cy!2!8 Real)
   (cy!2!9 Real)
   (cy!2!10 Real)
   (cy!3!0 Real)
   (cy!3!1 Real)
   (cy!3!2 Real)
   (cy!3!3 Real)
   (cy!3!4 Real)
   (cy!3!5 Real)
   (cy!3!6 Real)
   (cy!3!7 Real)
   (cy!3!8 Real)
   (cy!3!9 Real)
   (cy!3!10 Real)
   (good_p!0 Bool)
   (good_p!1 Bool)
   (good_p!2 Bool)
   (good_p!3 Bool)
   (good_r!0 Bool)
   (good_r!1 Bool)
   (good_r!2 Bool)
   (good_r!3 Bool)
   (good_r!4 Bool)
   (good_r!5 Bool)
   (good_r!6 Bool)
   (good_r!7 Bool)
   (good_r!8 Bool)
   (good_r!9 Bool)
   (good_r!10 Bool)
   (v!0 Real)
   (v!1 Real)
   (v!2 Real)
   (v!3 Real)
   (round Real)
   ;; parameters
   (source Real)
   (val Real)))


;;
;; Initial states
;;
(define-states init state
  (and
   (= round 0)
   (= cx!0!0 0)
   (= cx!0!1 0)
   (= cx!0!2 0)
   (= cx!0!3 0)
   (= cx!0!4 0)
   (= cx!0!5 0)
   (= cx!0!6 0)
   (= cx!0!7 0)
   (= cx!0!8 0)
   (= cx!0!9 0)
   (= cx!0!10 0)
   (= cx!1!0 0)
   (= cx!1!1 0)
   (= cx!1!2 0)
   (= cx!1!3 0)
   (= cx!1!4 0)
   (= cx!1!5 0)
   (= cx!1!6 0)
   (= cx!1!7 0)
   (= cx!1!8 0)
   (= cx!1!9 0)
   (= cx!1!10 0)
   (= cx!2!0 0)
   (= cx!2!1 0)
   (= cx!2!2 0)
   (= cx!2!3 0)
   (= cx!2!4 0)
   (= cx!2!5 0)
   (= cx!2!6 0)
   (= cx!2!7 0)
   (= cx!2!8 0)
   (= cx!2!9 0)
   (= cx!2!10 0)
   (= cx!3!0 0)
   (= cx!3!1 0)
   (= cx!3!2 0)
   (= cx!3!3 0)
   (= cx!3!4 0)
   (= cx!3!5 0)
   (= cx!3!6 0)
   (= cx!3!7 0)
   (= cx!3!8 0)
   (= cx!3!9 0)
   (= cx!3!10 0)
   (= cy!0!0 0)
   (= cy!0!1 0)
   (= cy!0!2 0)
   (= cy!0!3 0)
   (= cy!0!4 0)
   (= cy!0!5 0)
   (= cy!0!6 0)
   (= cy!0!7 0)
   (= cy!0!8 0)
   (= cy!0!9 0)
   (= cy!0!10 0)
   (= cy!1!0 0)
   (= cy!1!1 0)
   (= cy!1!2 0)
   (= cy!1!3 0)
   (= cy!1!4 0)
   (= cy!1!5 0)
   (= cy!1!6 0)
   (= cy!1!7 0)
   (= cy!1!8 0)
   (= cy!1!9 0)
   (= cy!1!10 0)
   (= cy!2!0 0)
   (= cy!2!1 0)
   (= cy!2!2 0)
   (= cy!2!3 0)
   (= cy!2!4 0)
   (= cy!2!5 0)
   (= cy!2!6 0)
   (= cy!2!7 0)
   (= cy!2!8 0)
   (= cy!2!9 0)
   (= cy!2!10 0)
   (= cy!3!0 0)
   (= cy!3!1 0)
   (= cy!3!2 0)
   (= cy!3!3 0)
   (= cy!3!4 0)
   (= cy!3!5 0)
   (= cy!3!6 0)
   (= cy!3!7 0)
   (= cy!3!8 0)
   (= cy!3!9 0)
   (= cy!3!10 0)
   ;;
   ;; Constraints on val and source
   ;;
   (or (= source 1) (= source 2) (= source 3) (= source 4))
   (not (= val 0))
   ;;
   ;; Fault model
   ;;
   (and good_p!0 good_p!1 good_p!2 good_p!3)
   (or
    (and
     (not good_r!0)
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!1)
     good_r!0
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!2)
     good_r!0
     good_r!1
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!3)
     good_r!0
     good_r!1
     good_r!2
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!4)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!5)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!6
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!6)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!7
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!7)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!8
     good_r!9
     good_r!10)
    (and
     (not good_r!8)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!9
     good_r!10)
    (and
     (not good_r!9)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!10)
    (and
     (not good_r!10)
     good_r!0
     good_r!1
     good_r!2
     good_r!3
     good_r!4
     good_r!5
     good_r!6
     good_r!7
     good_r!8
     good_r!9))))

;;
;; Transition relation
;; 
(define-transition trans state
  (let ((cond!1 (= source 2))
	(cond!2 (= source 3))
	(cond!3 (= source 4))
	(cs!755 (not good_r!0))
	(cs!757 (not good_r!1))
	(cs!759 (not good_r!2))
	(cs!761 (not good_r!3))
	(cs!763 (not good_r!4))
	(cs!765 (not good_r!5))
	(cs!767 (not good_r!6))
	(cs!769 (not good_r!7))
	(cs!771 (not good_r!8))
	(cs!773 (not good_r!9))
	(cs!808 (not good_r!10))
	(cs!821 (not good_p!0))
	(cs!833 (not good_p!1))
	(cs!845 (not good_p!2))
	(cs!857 (not good_p!3))
	(cs!869
	 (and
	  (= cx!0!0' cx!0!0)
	  (= cx!0!1' cx!0!1)
	  (= cx!0!2' cx!0!2)
	  (= cx!0!3' cx!0!3)
	  (= cx!0!4' cx!0!4)
	  (= cx!0!5' cx!0!5)
	  (= cx!0!6' cx!0!6)
	  (= cx!0!7' cx!0!7)
	  (= cx!0!8' cx!0!8)
	  (= cx!0!9' cx!0!9)
	  (= cx!0!10' cx!0!10)
	  (= cx!1!0' cx!1!0)
	  (= cx!1!1' cx!1!1)
	  (= cx!1!2' cx!1!2)
	  (= cx!1!3' cx!1!3)
	  (= cx!1!4' cx!1!4)
	  (= cx!1!5' cx!1!5)
	  (= cx!1!6' cx!1!6)
	  (= cx!1!7' cx!1!7)
	  (= cx!1!8' cx!1!8)
	  (= cx!1!9' cx!1!9)
	  (= cx!1!10' cx!1!10)
	  (= cx!2!0' cx!2!0)
	  (= cx!2!1' cx!2!1)
	  (= cx!2!2' cx!2!2)
	  (= cx!2!3' cx!2!3)
	  (= cx!2!4' cx!2!4)
	  (= cx!2!5' cx!2!5)
	  (= cx!2!6' cx!2!6)
	  (= cx!2!7' cx!2!7)
	  (= cx!2!8' cx!2!8)
	  (= cx!2!9' cx!2!9)
	  (= cx!2!10' cx!2!10)
	  (= cx!3!0' cx!3!0)
	  (= cx!3!1' cx!3!1)
	  (= cx!3!2' cx!3!2)
	  (= cx!3!3' cx!3!3)
	  (= cx!3!4' cx!3!4)
	  (= cx!3!5' cx!3!5)
	  (= cx!3!6' cx!3!6)
	  (= cx!3!7' cx!3!7)
	  (= cx!3!8' cx!3!8)
	  (= cx!3!9' cx!3!9)
	  (= cx!3!10' cx!3!10)))
	(cs!870
	 (and
	  (= cy!0!0' cy!0!0)
	  (= cy!0!1' cy!0!1)
	  (= cy!0!2' cy!0!2)
	  (= cy!0!3' cy!0!3)
	  (= cy!0!4' cy!0!4)
	  (= cy!0!5' cy!0!5)
	  (= cy!0!6' cy!0!6)
	  (= cy!0!7' cy!0!7)
	  (= cy!0!8' cy!0!8)
	  (= cy!0!9' cy!0!9)
	  (= cy!0!10' cy!0!10)
	  (= cy!1!0' cy!1!0)
	  (= cy!1!1' cy!1!1)
	  (= cy!1!2' cy!1!2)
	  (= cy!1!3' cy!1!3)
	  (= cy!1!4' cy!1!4)
	  (= cy!1!5' cy!1!5)
	  (= cy!1!6' cy!1!6)
	  (= cy!1!7' cy!1!7)
	  (= cy!1!8' cy!1!8)
	  (= cy!1!9' cy!1!9)
	  (= cy!1!10' cy!1!10)
	  (= cy!2!0' cy!2!0)
	  (= cy!2!1' cy!2!1)
	  (= cy!2!2' cy!2!2)
	  (= cy!2!3' cy!2!3)
	  (= cy!2!4' cy!2!4)
	  (= cy!2!5' cy!2!5)
	  (= cy!2!6' cy!2!6)
	  (= cy!2!7' cy!2!7)
	  (= cy!2!8' cy!2!8)
	  (= cy!2!9' cy!2!9)
	  (= cy!2!10' cy!2!10)
	  (= cy!3!0' cy!3!0)
	  (= cy!3!1' cy!3!1)
	  (= cy!3!2' cy!3!2)
	  (= cy!3!3' cy!3!3)
	  (= cy!3!4' cy!3!4)
	  (= cy!3!5' cy!3!5)
	  (= cy!3!6' cy!3!6)
	  (= cy!3!7' cy!3!7)
	  (= cy!3!8' cy!3!8)
	  (= cy!3!9' cy!3!9)
	  (= cy!3!10' cy!3!10)))
	(cs!871
	 (and
	  (= good_p!0' good_p!0)
	  (= good_p!1' good_p!1)
	  (= good_p!2' good_p!2)
	  (= good_p!3' good_p!3)))
	(cs!872
	 (and
	  (= good_r!0' good_r!0)
	  (= good_r!1' good_r!1)
	  (= good_r!2' good_r!2)
	  (= good_r!3' good_r!3)
	  (= good_r!4' good_r!4)
	  (= good_r!5' good_r!5)
	  (= good_r!6' good_r!6)
	  (= good_r!7' good_r!7)
	  (= good_r!8' good_r!8)
	  (= good_r!9' good_r!9)
	  (= good_r!10' good_r!10)))
	(cs!873
	 (and (= v!0' v!0) (= v!1' v!1) (= v!2' v!2) (= v!3' v!3))))
    (let ((cs!756
	   (cond
	    (cond!3 cx!3!0)
	    (cond!2 cx!2!0)
	    (cond!1 cx!1!0)
	    (else cx!0!0)))
	  (cs!758
	   (cond
	    (cond!3 cx!3!1)
	    (cond!2 cx!2!1)
	    (cond!1 cx!1!1)
	    (else cx!0!1)))
	  (cs!760
	   (cond
	    (cond!3 cx!3!2)
	    (cond!2 cx!2!2)
	    (cond!1 cx!1!2)
	    (else cx!0!2)))
	  (cs!762
	   (cond
	    (cond!3 cx!3!3)
	    (cond!2 cx!2!3)
	    (cond!1 cx!1!3)
	    (else cx!0!3)))
	  (cs!764
	   (cond
	    (cond!3 cx!3!4)
	    (cond!2 cx!2!4)
	    (cond!1 cx!1!4)
	    (else cx!0!4)))
	  (cs!766
	   (cond
	    (cond!3 cx!3!5)
	    (cond!2 cx!2!5)
	    (cond!1 cx!1!5)
	    (else cx!0!5)))
	  (cs!768
	   (cond
	    (cond!3 cx!3!6)
	    (cond!2 cx!2!6)
	    (cond!1 cx!1!6)
	    (else cx!0!6)))
	  (cs!770
	   (cond
	    (cond!3 cx!3!7)
	    (cond!2 cx!2!7)
	    (cond!1 cx!1!7)
	    (else cx!0!7)))
	  (cs!772
	   (cond
	    (cond!3 cx!3!8)
	    (cond!2 cx!2!8)
	    (cond!1 cx!1!8)
	    (else cx!0!8)))
	  (cs!774
	   (cond
	    (cond!3 cx!3!9)
	    (cond!2 cx!2!9)
	    (cond!1 cx!1!9)
	    (else cx!0!9)))
	  (cs!820
	   (cond
	    (cond!3 cx!3!10)
	    (cond!2 cx!2!10)
	    (cond!1 cx!1!10)
	    (else cx!0!10))))
      (let ((new_k!23 (ite (= cy!0!9 cy!0!10) 2 0))
	    (new_k!41 (ite (= cy!1!9 cy!1!10) 2 0))
	    (new_k!59 (ite (= cy!2!9 cy!2!10) 2 0))
	    (new_k!77 (ite (= cy!3!9 cy!3!10) 2 0)))
	(let ((cs!918 (= new_k!23 0))
	      (cs!926 (= new_k!41 0))
	      (cs!934 (= new_k!59 0))
	      (cs!942 (= new_k!77 0)))
	  (let ((new_k!24
		 (cond
		  (cs!918 1)
		  ((= cy!0!8 cy!0!10) (+ new_k!23 1))
		  (else (- new_k!23 1))))
		(new_x!12 (ite cs!918 cy!0!8 cy!0!10))
		(new_k!42
		 (cond
		  (cs!926 1)
		  ((= cy!1!8 cy!1!10) (+ new_k!41 1))
		  (else (- new_k!41 1))))
		(new_x!19 (ite cs!926 cy!1!8 cy!1!10))
		(new_k!60
		 (cond
		  (cs!934 1)
		  ((= cy!2!8 cy!2!10) (+ new_k!59 1))
		  (else (- new_k!59 1))))
		(new_x!26 (ite cs!934 cy!2!8 cy!2!10))
		(new_k!78
		 (cond
		  (cs!942 1)
		  ((= cy!3!8 cy!3!10) (+ new_k!77 1))
		  (else (- new_k!77 1))))
		(new_x!33 (ite cs!942 cy!3!8 cy!3!10)))
	    (let ((cs!919 (= new_k!24 0))
		  (cs!927 (= new_k!42 0))
		  (cs!935 (= new_k!60 0))
		  (cs!943 (= new_k!78 0)))
	      (let ((new_k!25
		     (cond
		      (cs!919 1)
		      ((= cy!0!7 new_x!12) (+ new_k!24 1))
		      (else (- new_k!24 1))))
		    (new_x!13 (ite cs!919 cy!0!7 new_x!12))
		    (new_k!43
		     (cond
		      (cs!927 1)
		      ((= cy!1!7 new_x!19) (+ new_k!42 1))
		      (else (- new_k!42 1))))
		    (new_x!20 (ite cs!927 cy!1!7 new_x!19))
		    (new_k!61
		     (cond
		      (cs!935 1)
		      ((= cy!2!7 new_x!26) (+ new_k!60 1))
		      (else (- new_k!60 1))))
		    (new_x!27 (ite cs!935 cy!2!7 new_x!26))
		    (new_k!79
		     (cond
		      (cs!943 1)
		      ((= cy!3!7 new_x!33) (+ new_k!78 1))
		      (else (- new_k!78 1))))
		    (new_x!34 (ite cs!943 cy!3!7 new_x!33)))
		(let ((cs!920 (= new_k!25 0))
		      (cs!928 (= new_k!43 0))
		      (cs!936 (= new_k!61 0))
		      (cs!944 (= new_k!79 0)))
		  (let ((new_k!26
			 (cond
			  (cs!920 1)
			  ((= cy!0!6 new_x!13) (+ new_k!25 1))
			  (else (- new_k!25 1))))
			(new_x!14 (ite cs!920 cy!0!6 new_x!13))
			(new_k!44
			 (cond
			  (cs!928 1)
			  ((= cy!1!6 new_x!20) (+ new_k!43 1))
			  (else (- new_k!43 1))))
			(new_x!21 (ite cs!928 cy!1!6 new_x!20))
			(new_k!62
			 (cond
			  (cs!936 1)
			  ((= cy!2!6 new_x!27) (+ new_k!61 1))
			  (else (- new_k!61 1))))
			(new_x!28 (ite cs!936 cy!2!6 new_x!27))
			(new_k!80
			 (cond
			  (cs!944 1)
			  ((= cy!3!6 new_x!34) (+ new_k!79 1))
			  (else (- new_k!79 1))))
			(new_x!35 (ite cs!944 cy!3!6 new_x!34)))
		    (let ((cs!921 (= new_k!26 0))
			  (cs!929 (= new_k!44 0))
			  (cs!937 (= new_k!62 0))
			  (cs!945 (= new_k!80 0)))
		      (let ((new_k!27
			     (cond
			      (cs!921 1)
			      ((= cy!0!5 new_x!14) (+ new_k!26 1))
			      (else (- new_k!26 1))))
			    (new_x!15 (ite cs!921 cy!0!5 new_x!14))
			    (new_k!45
			     (cond
			      (cs!929 1)
			      ((= cy!1!5 new_x!21) (+ new_k!44 1))
			      (else (- new_k!44 1))))
			    (new_x!22 (ite cs!929 cy!1!5 new_x!21))
			    (new_k!63
			     (cond
			      (cs!937 1)
			      ((= cy!2!5 new_x!28) (+ new_k!62 1))
			      (else (- new_k!62 1))))
			    (new_x!29 (ite cs!937 cy!2!5 new_x!28))
			    (new_k!81
			     (cond
			      (cs!945 1)
			      ((= cy!3!5 new_x!35) (+ new_k!80 1))
			      (else (- new_k!80 1))))
			    (new_x!36 (ite cs!945 cy!3!5 new_x!35)))
			(let ((cs!922 (= new_k!27 0))
			      (cs!930 (= new_k!45 0))
			      (cs!938 (= new_k!63 0))
			      (cs!946 (= new_k!81 0)))
			  (let ((new_k!28
				 (cond
				  (cs!922 1)
				  ((= cy!0!4 new_x!15) (+ new_k!27 1))
				  (else (- new_k!27 1))))
				(new_x!16 (ite cs!922 cy!0!4 new_x!15))
				(new_k!46
				 (cond
				  (cs!930 1)
				  ((= cy!1!4 new_x!22) (+ new_k!45 1))
				  (else (- new_k!45 1))))
				(new_x!23 (ite cs!930 cy!1!4 new_x!22))
				(new_k!64
				 (cond
				  (cs!938 1)
				  ((= cy!2!4 new_x!29) (+ new_k!63 1))
				  (else (- new_k!63 1))))
				(new_x!30 (ite cs!938 cy!2!4 new_x!29))
				(new_k!82
				 (cond
				  (cs!946 1)
				  ((= cy!3!4 new_x!36) (+ new_k!81 1))
				  (else (- new_k!81 1))))
				(new_x!37 (ite cs!946 cy!3!4 new_x!36)))
			    (let ((cs!923 (= new_k!28 0))
				  (cs!931 (= new_k!46 0))
				  (cs!939 (= new_k!64 0))
				  (cs!947 (= new_k!82 0)))
			      (let ((new_k!29
				     (cond
				      (cs!923 1)
				      ((= cy!0!3 new_x!16) (+ new_k!28 1))
				      (else (- new_k!28 1))))
				    (new_x!17 (ite cs!923 cy!0!3 new_x!16))
				    (new_k!47
				     (cond
				      (cs!931 1)
				      ((= cy!1!3 new_x!23) (+ new_k!46 1))
				      (else (- new_k!46 1))))
				    (new_x!24 (ite cs!931 cy!1!3 new_x!23))
				    (new_k!65
				     (cond
				      (cs!939 1)
				      ((= cy!2!3 new_x!30) (+ new_k!64 1))
				      (else (- new_k!64 1))))
				    (new_x!31 (ite cs!939 cy!2!3 new_x!30))
				    (new_k!83
				     (cond
				      (cs!947 1)
				      ((= cy!3!3 new_x!37) (+ new_k!82 1))
				      (else (- new_k!82 1))))
				    (new_x!38 (ite cs!947 cy!3!3 new_x!37)))
				(let ((cs!924 (= new_k!29 0))
				      (cs!932 (= new_k!47 0))
				      (cs!940 (= new_k!65 0))
				      (cs!948 (= new_k!83 0)))
				  (let ((new_k!30
					 (cond
					  (cs!924 1)
					  ((= cy!0!2 new_x!17) (+ new_k!29 1))
					  (else (- new_k!29 1))))
					(new_x!18 (ite cs!924 cy!0!2 new_x!17))
					(new_k!48
					 (cond
					  (cs!932 1)
					  ((= cy!1!2 new_x!24) (+ new_k!47 1))
					  (else (- new_k!47 1))))
					(new_x!25 (ite cs!932 cy!1!2 new_x!24))
					(new_k!66
					 (cond
					  (cs!940 1)
					  ((= cy!2!2 new_x!31) (+ new_k!65 1))
					  (else (- new_k!65 1))))
					(new_x!32 (ite cs!940 cy!2!2 new_x!31))
					(new_k!84
					 (cond
					  (cs!948 1)
					  ((= cy!3!2 new_x!38) (+ new_k!83 1))
					  (else (- new_k!83 1))))
					(new_x!39 (ite cs!948 cy!3!2 new_x!38)))
				    (let ((cs!925 (= new_k!30 0))
					  (cs!933 (= new_k!48 0))
					  (cs!941 (= new_k!66 0))
					  (cs!949 (= new_k!84 0)))
				      (let ((x!26
					     (cond
					      ((=
						(cond
						 (cs!925 1)
						 ((= cy!0!1 new_x!18) (+ new_k!30 1))
						 (else (- new_k!30 1)))
						0)
					       cy!0!0)
					      (cs!925 cy!0!1)
					      (else new_x!18)))
					    (x!27
					     (cond
					      ((=
						(cond
						 (cs!933 1)
						 ((= cy!1!1 new_x!25) (+ new_k!48 1))
						 (else (- new_k!48 1)))
						0)
					       cy!1!0)
					      (cs!933 cy!1!1)
					      (else new_x!25)))
					    (x!28
					     (cond
					      ((=
						(cond
						 (cs!941 1)
						 ((= cy!2!1 new_x!32) (+ new_k!66 1))
						 (else (- new_k!66 1)))
						0)
					       cy!2!0)
					      (cs!941 cy!2!1)
					      (else new_x!32)))
					    (x!29
					     (cond
					      ((=
						(cond
						 (cs!949 1)
						 ((= cy!3!1 new_x!39) (+ new_k!84 1))
						 (else (- new_k!84 1)))
						0)
					       cy!3!0)
					      (cs!949 cy!3!1)
					      (else new_x!39))))
					(let ((new_k!31 (ite (= cy!0!10 x!26) 5 6))
					      (new_k!49 (ite (= cy!1!10 x!27) 5 6))
					      (new_k!67 (ite (= cy!2!10 x!28) 5 6))
					      (new_k!85 (ite (= cy!3!10 x!29) 5 6)))
					  (let ((new_k!32
						 (ite (= cy!0!9 x!26) (- new_k!31 1) new_k!31))
						(new_k!50 (ite (= cy!1!9 x!27) (- new_k!49 1) new_k!49))
						(new_k!68 (ite (= cy!2!9 x!28) (- new_k!67 1) new_k!67))
						(new_k!86
						 (ite (= cy!3!9 x!29) (- new_k!85 1) new_k!85)))
					    (let ((new_k!33
						   (ite (= cy!0!8 x!26) (- new_k!32 1) new_k!32))
						  (new_k!51 (ite (= cy!1!8 x!27) (- new_k!50 1) new_k!50))
						  (new_k!69 (ite (= cy!2!8 x!28) (- new_k!68 1) new_k!68))
						  (new_k!87
						   (ite (= cy!3!8 x!29) (- new_k!86 1) new_k!86)))
					      (let ((new_k!34
						     (ite (= cy!0!7 x!26) (- new_k!33 1) new_k!33))
						    (new_k!52 (ite (= cy!1!7 x!27) (- new_k!51 1) new_k!51))
						    (new_k!70 (ite (= cy!2!7 x!28) (- new_k!69 1) new_k!69))
						    (new_k!88
						     (ite (= cy!3!7 x!29) (- new_k!87 1) new_k!87)))
						(let ((new_k!35
						       (ite (= cy!0!6 x!26) (- new_k!34 1) new_k!34))
						      (new_k!53 (ite (= cy!1!6 x!27) (- new_k!52 1) new_k!52))
						      (new_k!71 (ite (= cy!2!6 x!28) (- new_k!70 1) new_k!70))
						      (new_k!89
						       (ite (= cy!3!6 x!29) (- new_k!88 1) new_k!88)))
						  (let ((new_k!36
							 (ite (= cy!0!5 x!26) (- new_k!35 1) new_k!35))
							(new_k!54 (ite (= cy!1!5 x!27) (- new_k!53 1) new_k!53))
							(new_k!72 (ite (= cy!2!5 x!28) (- new_k!71 1) new_k!71))
							(new_k!90
							 (ite (= cy!3!5 x!29) (- new_k!89 1) new_k!89)))
						    (let ((new_k!37
							   (ite (= cy!0!4 x!26) (- new_k!36 1) new_k!36))
							  (new_k!55 (ite (= cy!1!4 x!27) (- new_k!54 1) new_k!54))
							  (new_k!73 (ite (= cy!2!4 x!28) (- new_k!72 1) new_k!72))
							  (new_k!91
							   (ite (= cy!3!4 x!29) (- new_k!90 1) new_k!90)))
						      (let ((new_k!38
							     (ite (= cy!0!3 x!26) (- new_k!37 1) new_k!37))
							    (new_k!56 (ite (= cy!1!3 x!27) (- new_k!55 1) new_k!55))
							    (new_k!74 (ite (= cy!2!3 x!28) (- new_k!73 1) new_k!73))
							    (new_k!92
							     (ite (= cy!3!3 x!29) (- new_k!91 1) new_k!91)))
							(let ((new_k!39
							       (ite (= cy!0!2 x!26) (- new_k!38 1) new_k!38))
							      (new_k!57 (ite (= cy!1!2 x!27) (- new_k!56 1) new_k!56))
							      (new_k!75 (ite (= cy!2!2 x!28) (- new_k!74 1) new_k!74))
							      (new_k!93
							       (ite (= cy!3!2 x!29) (- new_k!92 1) new_k!92)))
							  (let ((new_k!40
								 (ite (= cy!0!1 x!26) (- new_k!39 1) new_k!39))
								(new_k!58 (ite (= cy!1!1 x!27) (- new_k!57 1) new_k!57))
								(new_k!76 (ite (= cy!2!1 x!28) (- new_k!75 1) new_k!75))
								(new_k!94
								 (ite (= cy!3!1 x!29) (- new_k!93 1) new_k!93)))
							    (and
							     (= source' source)
							     (= val' val)
							     (or
							      (and
							       (= round 0)
							       (and
								(or
								 cs!821
								 (/= 1 source)
								 (and
								  (= cx!0!0' val)
								  (= cx!0!1' val)
								  (= cx!0!2' val)
								  (= cx!0!3' val)
								  (= cx!0!4' val)
								  (= cx!0!5' val)
								  (= cx!0!6' val)
								  (= cx!0!7' val)
								  (= cx!0!8' val)
								  (= cx!0!9' val)
								  (= cx!0!10' val)))
								(or
								 cs!833
								 (/= 2 source)
								 (and
								  (= cx!1!0' val)
								  (= cx!1!1' val)
								  (= cx!1!2' val)
								  (= cx!1!3' val)
								  (= cx!1!4' val)
								  (= cx!1!5' val)
								  (= cx!1!6' val)
								  (= cx!1!7' val)
								  (= cx!1!8' val)
								  (= cx!1!9' val)
								  (= cx!1!10' val)))
								(or
								 cs!845
								 (/= 3 source)
								 (and
								  (= cx!2!0' val)
								  (= cx!2!1' val)
								  (= cx!2!2' val)
								  (= cx!2!3' val)
								  (= cx!2!4' val)
								  (= cx!2!5' val)
								  (= cx!2!6' val)
								  (= cx!2!7' val)
								  (= cx!2!8' val)
								  (= cx!2!9' val)
								  (= cx!2!10' val)))
								(or
								 cs!857
								 (/= 4 source)
								 (and
								  (= cx!3!0' val)
								  (= cx!3!1' val)
								  (= cx!3!2' val)
								  (= cx!3!3' val)
								  (= cx!3!4' val)
								  (= cx!3!5' val)
								  (= cx!3!6' val)
								  (= cx!3!7' val)
								  (= cx!3!8' val)
								  (= cx!3!9' val)
								  (= cx!3!10' val)))
								(or
								 cs!821
								 (= 1 source)
								 (and
								  (= cx!0!0' 0)
								  (= cx!0!1' 0)
								  (= cx!0!2' 0)
								  (= cx!0!3' 0)
								  (= cx!0!4' 0)
								  (= cx!0!5' 0)
								  (= cx!0!6' 0)
								  (= cx!0!7' 0)
								  (= cx!0!8' 0)
								  (= cx!0!9' 0)
								  (= cx!0!10' 0)))
								(or
								 cs!833
								 (= 2 source)
								 (and
								  (= cx!1!0' 0)
								  (= cx!1!1' 0)
								  (= cx!1!2' 0)
								  (= cx!1!3' 0)
								  (= cx!1!4' 0)
								  (= cx!1!5' 0)
								  (= cx!1!6' 0)
								  (= cx!1!7' 0)
								  (= cx!1!8' 0)
								  (= cx!1!9' 0)
								  (= cx!1!10' 0)))
								(or
								 cs!845
								 (= 3 source)
								 (and
								  (= cx!2!0' 0)
								  (= cx!2!1' 0)
								  (= cx!2!2' 0)
								  (= cx!2!3' 0)
								  (= cx!2!4' 0)
								  (= cx!2!5' 0)
								  (= cx!2!6' 0)
								  (= cx!2!7' 0)
								  (= cx!2!8' 0)
								  (= cx!2!9' 0)
								  (= cx!2!10' 0)))
								(or
								 cs!857
								 (= 4 source)
								 (and
								  (= cx!3!0' 0)
								  (= cx!3!1' 0)
								  (= cx!3!2' 0)
								  (= cx!3!3' 0)
								  (= cx!3!4' 0)
								  (= cx!3!5' 0)
								  (= cx!3!6' 0)
								  (= cx!3!7' 0)
								  (= cx!3!8' 0)
								  (= cx!3!9' 0)
								  (= cx!3!10' 0))))
							       (= round' 1)
							       cs!870
							       cs!871
							       cs!872
							       cs!873)
							      (and
							       (= round 1)
							       (and
								(or cs!755 (= cy!0!0' cs!756))
								(or cs!755 (= cy!1!0' cs!756))
								(or cs!755 (= cy!2!0' cs!756))
								(or cs!755 (= cy!3!0' cs!756))
								(or cs!757 (= cy!0!1' cs!758))
								(or cs!757 (= cy!1!1' cs!758))
								(or cs!757 (= cy!2!1' cs!758))
								(or cs!757 (= cy!3!1' cs!758))
								(or cs!759 (= cy!0!2' cs!760))
								(or cs!759 (= cy!1!2' cs!760))
								(or cs!759 (= cy!2!2' cs!760))
								(or cs!759 (= cy!3!2' cs!760))
								(or cs!761 (= cy!0!3' cs!762))
								(or cs!761 (= cy!1!3' cs!762))
								(or cs!761 (= cy!2!3' cs!762))
								(or cs!761 (= cy!3!3' cs!762))
								(or cs!763 (= cy!0!4' cs!764))
								(or cs!763 (= cy!1!4' cs!764))
								(or cs!763 (= cy!2!4' cs!764))
								(or cs!763 (= cy!3!4' cs!764))
								(or cs!765 (= cy!0!5' cs!766))
								(or cs!765 (= cy!1!5' cs!766))
								(or cs!765 (= cy!2!5' cs!766))
								(or cs!765 (= cy!3!5' cs!766))
								(or cs!767 (= cy!0!6' cs!768))
								(or cs!767 (= cy!1!6' cs!768))
								(or cs!767 (= cy!2!6' cs!768))
								(or cs!767 (= cy!3!6' cs!768))
								(or cs!769 (= cy!0!7' cs!770))
								(or cs!769 (= cy!1!7' cs!770))
								(or cs!769 (= cy!2!7' cs!770))
								(or cs!769 (= cy!3!7' cs!770))
								(or cs!771 (= cy!0!8' cs!772))
								(or cs!771 (= cy!1!8' cs!772))
								(or cs!771 (= cy!2!8' cs!772))
								(or cs!771 (= cy!3!8' cs!772))
								(or cs!773 (= cy!0!9' cs!774))
								(or cs!773 (= cy!1!9' cs!774))
								(or cs!773 (= cy!2!9' cs!774))
								(or cs!773 (= cy!3!9' cs!774))
								(or cs!808 (= cy!0!10' cs!820))
								(or cs!808 (= cy!1!10' cs!820))
								(or cs!808 (= cy!2!10' cs!820))
								(or cs!808 (= cy!3!10' cs!820)))
							       (= round' 2)
							       cs!869
							       cs!871
							       cs!872
							       cs!873)
							      (and
							       (= round 2)
							       (and
								(or
								 cs!821
								 (=
								  v!0'
								  (ite (or
									(= new_k!31 0)
									(= new_k!32 0)
									(= new_k!33 0)
									(= new_k!34 0)
									(= new_k!35 0)
									(= new_k!36 0)
									(= new_k!37 0)
									(= new_k!38 0)
									(= new_k!39 0)
									(= new_k!40 0)
									(= (ite (= cy!0!0 x!26) (- new_k!40 1) new_k!40) 0))
								       x!26
								       0)))
								(or
								 cs!833
								 (=
								  v!1'
								  (ite (or
									(= new_k!49 0)
									(= new_k!50 0)
									(= new_k!51 0)
									(= new_k!52 0)
									(= new_k!53 0)
									(= new_k!54 0)
									(= new_k!55 0)
									(= new_k!56 0)
									(= new_k!57 0)
									(= new_k!58 0)
									(= (ite (= cy!1!0 x!27) (- new_k!58 1) new_k!58) 0))
								       x!27
								       0)))
								(or
								 cs!845
								 (=
								  v!2'
								  (ite (or
									(= new_k!67 0)
									(= new_k!68 0)
									(= new_k!69 0)
									(= new_k!70 0)
									(= new_k!71 0)
									(= new_k!72 0)
									(= new_k!73 0)
									(= new_k!74 0)
									(= new_k!75 0)
									(= new_k!76 0)
									(= (ite (= cy!2!0 x!28) (- new_k!76 1) new_k!76) 0))
								       x!28
								       0)))
								(or
								 cs!857
								 (=
								  v!3'
								  (ite (or
									(= new_k!85 0)
									(= new_k!86 0)
									(= new_k!87 0)
									(= new_k!88 0)
									(= new_k!89 0)
									(= new_k!90 0)
									(= new_k!91 0)
									(= new_k!92 0)
									(= new_k!93 0)
									(= new_k!94 0)
									(= (ite (= cy!3!0 x!29) (- new_k!94 1) new_k!94) 0))
								       x!29
								       0))))
							       (= round' 3)
							       cs!869
							       cs!870
							       cs!871
							       cs!872)
							      (and
							       (= round 3)
							       cs!869
							       cs!870
							       cs!871
							       cs!872
							       (= round' round)
							       cs!873)))))))))))))))))))))))))))))))))


;;
;; Transition system
;;
(define-transition-system OM
  state
  init
  trans
)

;;
;; Query: validity
;;
(query OM
      (or
        (not
          (cond
            ((= source 4) good_p!3)
            ((= source 3) good_p!2)
            ((= source 2) good_p!1)
            (else good_p!0)))
        (< round 3)
        (and
          (or (not good_p!0) (= v!0 val))
          (or (not good_p!1) (= v!1 val))
          (or (not good_p!2) (= v!2 val))
          (or (not good_p!3) (= v!3 val)))))
 
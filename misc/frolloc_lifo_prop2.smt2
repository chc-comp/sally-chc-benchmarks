(set-logic HORN)
(declare-fun invariant (Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Real Bool Real Real Real Real Real Real Real Real) Bool)

;; Initial state
(assert
  (forall ((state.elem!aba Real) (state.elem!ptr Real) (state.elem!val Real) (state.head!aba Real) (state.head!ptr Real) (state.head!val Real) (state.last Real) (state.last_o Real) (state.mem!0!aba Real) (state.mem!0!ptr Real) (state.mem!0!val Real) (state.mem!1!aba Real) (state.mem!1!ptr Real) (state.mem!1!val Real) (state.mem!2!aba Real) (state.mem!2!ptr Real) (state.mem!2!val Real) (state.mem!3!aba Real) (state.mem!3!ptr Real) (state.mem!3!val Real) (state.mem!4!aba Real) (state.mem!4!ptr Real) (state.mem!4!val Real) (state.mem!5!aba Real) (state.mem!5!ptr Real) (state.mem!5!val Real) (state.mem!6!aba Real) (state.mem!6!ptr Real) (state.mem!6!val Real) (state.mem!7!aba Real) (state.mem!7!ptr Real) (state.mem!7!val Real) (state.mem!8!aba Real) (state.mem!8!ptr Real) (state.mem!8!val Real) (state.mem!9!aba Real) (state.mem!9!ptr Real) (state.mem!9!val Real) (state.new!aba Real) (state.new!ptr Real) (state.new!val Real) (state.next!aba Real) (state.next!ptr Real) (state.next!val Real) (state.ok_e Bool) (state.old!aba Real) (state.old!ptr Real) (state.old!val Real) (state.pc_d Real) (state.pc_e Real) (state.queue!aba Real) (state.queue!ptr Real) (state.queue!val Real))
    (=> (let ((l0 (= |state.pc_d| 0))) (let ((l1 (= |state.queue!aba| 0))) (let ((l2 (= |state.queue!ptr| 0))) (let ((l3 (= |state.queue!val| 0))) (let ((l4 (= |state.mem!0!aba| 0))) (let ((l5 (= |state.mem!0!ptr| 0))) (let ((l6 (= |state.mem!0!val| 0))) (let ((l7 (= |state.mem!1!aba| 0))) (let ((l8 (= |state.mem!1!ptr| 0))) (let ((l9 (= |state.mem!1!val| 0))) (let ((l10 (= |state.mem!2!aba| 0))) (let ((l11 (= |state.mem!2!ptr| 0))) (let ((l12 (= |state.mem!2!val| 0))) (let ((l13 (= |state.mem!3!aba| 0))) (let ((l14 (= |state.mem!3!ptr| 0))) (let ((l15 (= |state.mem!3!val| 0))) (let ((l16 (= |state.mem!4!aba| 0))) (let ((l17 (= |state.mem!4!ptr| 0))) (let ((l18 (= |state.mem!4!val| 0))) (let ((l19 (= |state.mem!5!aba| 0))) (let ((l20 (= |state.mem!5!ptr| 0))) (let ((l21 (= |state.mem!5!val| 0))) (let ((l22 (= |state.mem!6!aba| 0))) (let ((l23 (= |state.mem!6!ptr| 0))) (let ((l24 (= |state.mem!6!val| 0))) (let ((l25 (= |state.mem!7!aba| 0))) (let ((l26 (= |state.mem!7!ptr| 0))) (let ((l27 (= |state.mem!7!val| 0))) (let ((l28 (= |state.mem!8!aba| 0))) (let ((l29 (= |state.mem!8!ptr| 0))) (let ((l30 (= |state.mem!8!val| 0))) (let ((l31 (= |state.mem!9!aba| 0))) (let ((l32 (= |state.mem!9!ptr| 0))) (let ((l33 (= |state.mem!9!val| 0))) (let ((l34 (= |state.pc_e| 0))) (let ((l35 (= |state.elem!aba| 0))) (let ((l36 (= |state.elem!ptr| 2))) (let ((l37 (= |state.elem!val| 33))) (let ((l38 (= |state.last_o| 0))) (let ((l39 (= |state.ok_e| true))) (let ((l40 (and l0 l1 l2 l3 l4 l5 l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l19 l20 l21 l22 l23 l24 l25 l26 l27 l28 l29 l30 l31 l32 l33 l34 l35 l36 l37 l38 l39))) l40)))))))))))))))))))))))))))))))))))))))))
        (invariant state.elem!aba state.elem!ptr state.elem!val state.head!aba state.head!ptr state.head!val state.last state.last_o state.mem!0!aba state.mem!0!ptr state.mem!0!val state.mem!1!aba state.mem!1!ptr state.mem!1!val state.mem!2!aba state.mem!2!ptr state.mem!2!val state.mem!3!aba state.mem!3!ptr state.mem!3!val state.mem!4!aba state.mem!4!ptr state.mem!4!val state.mem!5!aba state.mem!5!ptr state.mem!5!val state.mem!6!aba state.mem!6!ptr state.mem!6!val state.mem!7!aba state.mem!7!ptr state.mem!7!val state.mem!8!aba state.mem!8!ptr state.mem!8!val state.mem!9!aba state.mem!9!ptr state.mem!9!val state.new!aba state.new!ptr state.new!val state.next!aba state.next!ptr state.next!val state.ok_e state.old!aba state.old!ptr state.old!val state.pc_d state.pc_e state.queue!aba state.queue!ptr state.queue!val))
  )
)

;; Transition relation
(assert
  (forall ((state.elem!aba Real) (next.elem!aba Real) (state.elem!ptr Real) (next.elem!ptr Real) (state.elem!val Real) (next.elem!val Real) (state.head!aba Real) (next.head!aba Real) (state.head!ptr Real) (next.head!ptr Real) (state.head!val Real) (next.head!val Real) (state.last Real) (next.last Real) (state.last_o Real) (next.last_o Real) (state.mem!0!aba Real) (next.mem!0!aba Real) (state.mem!0!ptr Real) (next.mem!0!ptr Real) (state.mem!0!val Real) (next.mem!0!val Real) (state.mem!1!aba Real) (next.mem!1!aba Real) (state.mem!1!ptr Real) (next.mem!1!ptr Real) (state.mem!1!val Real) (next.mem!1!val Real) (state.mem!2!aba Real) (next.mem!2!aba Real) (state.mem!2!ptr Real) (next.mem!2!ptr Real) (state.mem!2!val Real) (next.mem!2!val Real) (state.mem!3!aba Real) (next.mem!3!aba Real) (state.mem!3!ptr Real) (next.mem!3!ptr Real) (state.mem!3!val Real) (next.mem!3!val Real) (state.mem!4!aba Real) (next.mem!4!aba Real) (state.mem!4!ptr Real) (next.mem!4!ptr Real) (state.mem!4!val Real) (next.mem!4!val Real) (state.mem!5!aba Real) (next.mem!5!aba Real) (state.mem!5!ptr Real) (next.mem!5!ptr Real) (state.mem!5!val Real) (next.mem!5!val Real) (state.mem!6!aba Real) (next.mem!6!aba Real) (state.mem!6!ptr Real) (next.mem!6!ptr Real) (state.mem!6!val Real) (next.mem!6!val Real) (state.mem!7!aba Real) (next.mem!7!aba Real) (state.mem!7!ptr Real) (next.mem!7!ptr Real) (state.mem!7!val Real) (next.mem!7!val Real) (state.mem!8!aba Real) (next.mem!8!aba Real) (state.mem!8!ptr Real) (next.mem!8!ptr Real) (state.mem!8!val Real) (next.mem!8!val Real) (state.mem!9!aba Real) (next.mem!9!aba Real) (state.mem!9!ptr Real) (next.mem!9!ptr Real) (state.mem!9!val Real) (next.mem!9!val Real) (state.new!aba Real) (next.new!aba Real) (state.new!ptr Real) (next.new!ptr Real) (state.new!val Real) (next.new!val Real) (state.next!aba Real) (next.next!aba Real) (state.next!ptr Real) (next.next!ptr Real) (state.next!val Real) (next.next!val Real) (state.ok_e Bool) (next.ok_e Bool) (state.old!aba Real) (next.old!aba Real) (state.old!ptr Real) (next.old!ptr Real) (state.old!val Real) (next.old!val Real) (state.pc_d Real) (next.pc_d Real) (state.pc_e Real) (next.pc_e Real) (state.queue!aba Real) (next.queue!aba Real) (state.queue!ptr Real) (next.queue!ptr Real) (state.queue!val Real) (next.queue!val Real))
    (=> (and (invariant state.elem!aba state.elem!ptr state.elem!val state.head!aba state.head!ptr state.head!val state.last state.last_o state.mem!0!aba state.mem!0!ptr state.mem!0!val state.mem!1!aba state.mem!1!ptr state.mem!1!val state.mem!2!aba state.mem!2!ptr state.mem!2!val state.mem!3!aba state.mem!3!ptr state.mem!3!val state.mem!4!aba state.mem!4!ptr state.mem!4!val state.mem!5!aba state.mem!5!ptr state.mem!5!val state.mem!6!aba state.mem!6!ptr state.mem!6!val state.mem!7!aba state.mem!7!ptr state.mem!7!val state.mem!8!aba state.mem!8!ptr state.mem!8!val state.mem!9!aba state.mem!9!ptr state.mem!9!val state.new!aba state.new!ptr state.new!val state.next!aba state.next!ptr state.next!val state.ok_e state.old!aba state.old!ptr state.old!val state.pc_d state.pc_e state.queue!aba state.queue!ptr state.queue!val)
             (let ((l0 (= |state.pc_d| 0))) (let ((l1 (= |next.head!aba| |state.queue!aba|))) (let ((l2 (= |next.head!ptr| |state.queue!ptr|))) (let ((l3 (= |next.head!val| |state.queue!val|))) (let ((l4 (= |next.pc_d| 1))) (let ((l5 (= |next.last| |state.last|))) (let ((l6 (= |next.mem!0!aba| |state.mem!0!aba|))) (let ((l7 (= |next.mem!0!ptr| |state.mem!0!ptr|))) (let ((l8 (= |next.mem!0!val| |state.mem!0!val|))) (let ((l9 (= |next.mem!1!aba| |state.mem!1!aba|))) (let ((l10 (= |next.mem!1!ptr| |state.mem!1!ptr|))) (let ((l11 (= |next.mem!1!val| |state.mem!1!val|))) (let ((l12 (= |next.mem!2!aba| |state.mem!2!aba|))) (let ((l13 (= |next.mem!2!ptr| |state.mem!2!ptr|))) (let ((l14 (= |next.mem!2!val| |state.mem!2!val|))) (let ((l15 (= |next.mem!3!aba| |state.mem!3!aba|))) (let ((l16 (= |next.mem!3!ptr| |state.mem!3!ptr|))) (let ((l17 (= |next.mem!3!val| |state.mem!3!val|))) (let ((l18 (= |next.mem!4!aba| |state.mem!4!aba|))) (let ((l19 (= |next.mem!4!ptr| |state.mem!4!ptr|))) (let ((l20 (= |next.mem!4!val| |state.mem!4!val|))) (let ((l21 (= |next.mem!5!aba| |state.mem!5!aba|))) (let ((l22 (= |next.mem!5!ptr| |state.mem!5!ptr|))) (let ((l23 (= |next.mem!5!val| |state.mem!5!val|))) (let ((l24 (= |next.mem!6!aba| |state.mem!6!aba|))) (let ((l25 (= |next.mem!6!ptr| |state.mem!6!ptr|))) (let ((l26 (= |next.mem!6!val| |state.mem!6!val|))) (let ((l27 (= |next.mem!7!aba| |state.mem!7!aba|))) (let ((l28 (= |next.mem!7!ptr| |state.mem!7!ptr|))) (let ((l29 (= |next.mem!7!val| |state.mem!7!val|))) (let ((l30 (= |next.mem!8!aba| |state.mem!8!aba|))) (let ((l31 (= |next.mem!8!ptr| |state.mem!8!ptr|))) (let ((l32 (= |next.mem!8!val| |state.mem!8!val|))) (let ((l33 (= |next.mem!9!aba| |state.mem!9!aba|))) (let ((l34 (= |next.mem!9!ptr| |state.mem!9!ptr|))) (let ((l35 (= |next.mem!9!val| |state.mem!9!val|))) (let ((l36 (and l6 l7 l8 l9 l10 l11 l12 l13 l14 l15 l16 l17 l18 l19 l20 l21 l22 l23 l24 l25 l26 l27 l28 l29 l30 l31 l32 l33 l34 l35))) (let ((l37 (= |next.next!aba| |state.next!aba|))) (let ((l38 (= |next.next!ptr| |state.next!ptr|))) (let ((l39 (= |next.next!val| |state.next!val|))) (let ((l40 (and l37 l38 l39))) (let ((l41 (= |next.queue!aba| |state.queue!aba|))) (let ((l42 (= |next.queue!ptr| |state.queue!ptr|))) (let ((l43 (= |next.queue!val| |state.queue!val|))) (let ((l44 (and l41 l42 l43))) (let ((l45 (and l0 l1 l2 l3 l4 l5 l36 l40 l44))) (let ((l46 (= |state.pc_d| 1))) (let ((l47 (= |state.head!ptr| 0))) (let ((l48 (= |next.last| 0))) (let ((l49 (= |next.pc_d| 4))) (let ((l50 (= |next.head!aba| |state.head!aba|))) (let ((l51 (= |next.head!ptr| |state.head!ptr|))) (let ((l52 (= |next.head!val| |state.head!val|))) (let ((l53 (and l50 l51 l52))) (let ((l54 (and l46 l47 l48 l49 l53 l36 l40 l44))) (let ((l55 (not l47))) (let ((l56 (= |next.pc_d| 2))) (let ((l57 (= |state.head!ptr| 10))) (let ((l58 (= |state.head!ptr| 9))) (let ((l59 (= |state.head!ptr| 8))) (let ((l60 (= |state.head!ptr| 7))) (let ((l61 (= |state.head!ptr| 6))) (let ((l62 (= |state.head!ptr| 5))) (let ((l63 (= |state.head!ptr| 4))) (let ((l64 (= |state.head!ptr| 3))) (let ((l65 (= |state.head!ptr| 2))) (let ((l66 (ite l65 |state.mem!1!aba| |state.mem!0!aba|))) (let ((l67 (ite l64 |state.mem!2!aba| l66))) (let ((l68 (ite l63 |state.mem!3!aba| l67))) (let ((l69 (ite l62 |state.mem!4!aba| l68))) (let ((l70 (ite l61 |state.mem!5!aba| l69))) (let ((l71 (ite l60 |state.mem!6!aba| l70))) (let ((l72 (ite l59 |state.mem!7!aba| l71))) (let ((l73 (ite l58 |state.mem!8!aba| l72))) (let ((l74 (ite l57 |state.mem!9!aba| l73))) (let ((l75 (+ l74 1))) (let ((l76 (= |next.next!aba| l75))) (let ((l77 (ite l65 |state.mem!1!ptr| |state.mem!0!ptr|))) (let ((l78 (ite l64 |state.mem!2!ptr| l77))) (let ((l79 (ite l63 |state.mem!3!ptr| l78))) (let ((l80 (ite l62 |state.mem!4!ptr| l79))) (let ((l81 (ite l61 |state.mem!5!ptr| l80))) (let ((l82 (ite l60 |state.mem!6!ptr| l81))) (let ((l83 (ite l59 |state.mem!7!ptr| l82))) (let ((l84 (ite l58 |state.mem!8!ptr| l83))) (let ((l85 (ite l57 |state.mem!9!ptr| l84))) (let ((l86 (= |next.next!ptr| l85))) (let ((l87 (and l46 l55 l56 l53 l5 l36 l76 l86 l39 l44))) (let ((l88 (= |state.pc_d| 2))) (let ((l89 (= |state.queue!aba| |state.head!aba|))) (let ((l90 (= |state.queue!ptr| |state.head!ptr|))) (let ((l91 (= |state.queue!val| |state.head!val|))) (let ((l92 (= |next.queue!aba| |state.next!aba|))) (let ((l93 (= |next.queue!ptr| |state.next!ptr|))) (let ((l94 (= |next.queue!val| |state.next!val|))) (let ((l95 (= |next.pc_d| 3))) (let ((l96 (= |next.last| |state.head!ptr|))) (let ((l97 (and l88 l89 l90 l91 l92 l93 l94 l95 l96 l53 l36 l40))) (let ((l98 (not l89))) (let ((l99 (not l90))) (let ((l100 (not l91))) (let ((l101 (or l98 l99 l100))) (let ((l102 (= |next.pc_d| 0))) (let ((l103 (and l88 l101 l102 l53 l5 l36 l40 l44))) (let ((l104 (= |state.pc_d| 3))) (let ((l105 (and l104 l102 l53 l5 l36 l40 l44))) (let ((l106 (= |state.pc_d| 4))) (let ((l107 (= |next.pc_d| |state.pc_d|))) (let ((l108 (and l106 l53 l5 l36 l40 l107 l44))) (let ((l109 (or l45 l54 l87 l97 l103 l105 l108))) (let ((l110 (= |next.elem!aba| |state.elem!aba|))) (let ((l111 (= |next.elem!ptr| |state.elem!ptr|))) (let ((l112 (= |next.elem!val| |state.elem!val|))) (let ((l113 (and l110 l111 l112))) (let ((l114 (= |next.new!aba| |state.new!aba|))) (let ((l115 (= |next.new!ptr| |state.new!ptr|))) (let ((l116 (= |next.new!val| |state.new!val|))) (let ((l117 (and l114 l115 l116))) (let ((l118 (= |next.old!aba| |state.old!aba|))) (let ((l119 (= |next.old!ptr| |state.old!ptr|))) (let ((l120 (= |next.old!val| |state.old!val|))) (let ((l121 (and l118 l119 l120))) (let ((l122 (= |next.pc_e| |state.pc_e|))) (let ((l123 (and l109 l113 l117 l121 l122))) (let ((l124 (= |state.pc_e| 0))) (let ((l125 (= |next.old!aba| |state.queue!aba|))) (let ((l126 (= |next.old!ptr| |state.queue!ptr|))) (let ((l127 (= |next.old!val| |state.queue!val|))) (let ((l128 (= |next.pc_e| 1))) (let ((l129 (and l124 l125 l126 l127 l128 l113 l36 l117 l44))) (let ((l130 (= |state.pc_e| 1))) (let ((l131 (= |next.pc_e| 2))) (let ((l132 (= |state.elem!ptr| 1))) (let ((l133 (= |state.elem!ptr| 10))) (let ((l134 (= |state.elem!ptr| 9))) (let ((l135 (= |state.elem!ptr| 8))) (let ((l136 (= |state.elem!ptr| 7))) (let ((l137 (= |state.elem!ptr| 6))) (let ((l138 (= |state.elem!ptr| 5))) (let ((l139 (= |state.elem!ptr| 4))) (let ((l140 (= |state.elem!ptr| 3))) (let ((l141 (= |state.elem!ptr| 2))) (let ((l142 (ite l141 |state.mem!1!aba| |state.mem!0!aba|))) (let ((l143 (ite l140 |state.mem!2!aba| l142))) (let ((l144 (ite l139 |state.mem!3!aba| l143))) (let ((l145 (ite l138 |state.mem!4!aba| l144))) (let ((l146 (ite l137 |state.mem!5!aba| l145))) (let ((l147 (ite l136 |state.mem!6!aba| l146))) (let ((l148 (ite l135 |state.mem!7!aba| l147))) (let ((l149 (ite l134 |state.mem!8!aba| l148))) (let ((l150 (ite l133 |state.mem!9!aba| l149))) (let ((l151 (ite l132 l150 |state.mem!0!aba|))) (let ((l152 (= |next.mem!0!aba| l151))) (let ((l153 (ite l132 |state.old!ptr| |state.mem!0!ptr|))) (let ((l154 (= |next.mem!0!ptr| l153))) (let ((l155 (ite l141 |state.mem!1!val| |state.mem!0!val|))) (let ((l156 (ite l140 |state.mem!2!val| l155))) (let ((l157 (ite l139 |state.mem!3!val| l156))) (let ((l158 (ite l138 |state.mem!4!val| l157))) (let ((l159 (ite l137 |state.mem!5!val| l158))) (let ((l160 (ite l136 |state.mem!6!val| l159))) (let ((l161 (ite l135 |state.mem!7!val| l160))) (let ((l162 (ite l134 |state.mem!8!val| l161))) (let ((l163 (ite l133 |state.mem!9!val| l162))) (let ((l164 (+ l163 1))) (let ((l165 (ite l132 l164 |state.mem!0!val|))) (let ((l166 (= |next.mem!0!val| l165))) (let ((l167 (ite l141 l150 |state.mem!1!aba|))) (let ((l168 (= |next.mem!1!aba| l167))) (let ((l169 (ite l141 |state.old!ptr| |state.mem!1!ptr|))) (let ((l170 (= |next.mem!1!ptr| l169))) (let ((l171 (ite l141 l164 |state.mem!1!val|))) (let ((l172 (= |next.mem!1!val| l171))) (let ((l173 (ite l140 l150 |state.mem!2!aba|))) (let ((l174 (= |next.mem!2!aba| l173))) (let ((l175 (ite l140 |state.old!ptr| |state.mem!2!ptr|))) (let ((l176 (= |next.mem!2!ptr| l175))) (let ((l177 (ite l140 l164 |state.mem!2!val|))) (let ((l178 (= |next.mem!2!val| l177))) (let ((l179 (ite l139 l150 |state.mem!3!aba|))) (let ((l180 (= |next.mem!3!aba| l179))) (let ((l181 (ite l139 |state.old!ptr| |state.mem!3!ptr|))) (let ((l182 (= |next.mem!3!ptr| l181))) (let ((l183 (ite l139 l164 |state.mem!3!val|))) (let ((l184 (= |next.mem!3!val| l183))) (let ((l185 (ite l138 l150 |state.mem!4!aba|))) (let ((l186 (= |next.mem!4!aba| l185))) (let ((l187 (ite l138 |state.old!ptr| |state.mem!4!ptr|))) (let ((l188 (= |next.mem!4!ptr| l187))) (let ((l189 (ite l138 l164 |state.mem!4!val|))) (let ((l190 (= |next.mem!4!val| l189))) (let ((l191 (ite l137 l150 |state.mem!5!aba|))) (let ((l192 (= |next.mem!5!aba| l191))) (let ((l193 (ite l137 |state.old!ptr| |state.mem!5!ptr|))) (let ((l194 (= |next.mem!5!ptr| l193))) (let ((l195 (ite l137 l164 |state.mem!5!val|))) (let ((l196 (= |next.mem!5!val| l195))) (let ((l197 (ite l136 l150 |state.mem!6!aba|))) (let ((l198 (= |next.mem!6!aba| l197))) (let ((l199 (ite l136 |state.old!ptr| |state.mem!6!ptr|))) (let ((l200 (= |next.mem!6!ptr| l199))) (let ((l201 (ite l136 l164 |state.mem!6!val|))) (let ((l202 (= |next.mem!6!val| l201))) (let ((l203 (ite l135 l150 |state.mem!7!aba|))) (let ((l204 (= |next.mem!7!aba| l203))) (let ((l205 (ite l135 |state.old!ptr| |state.mem!7!ptr|))) (let ((l206 (= |next.mem!7!ptr| l205))) (let ((l207 (ite l135 l164 |state.mem!7!val|))) (let ((l208 (= |next.mem!7!val| l207))) (let ((l209 (ite l134 l150 |state.mem!8!aba|))) (let ((l210 (= |next.mem!8!aba| l209))) (let ((l211 (ite l134 |state.old!ptr| |state.mem!8!ptr|))) (let ((l212 (= |next.mem!8!ptr| l211))) (let ((l213 (ite l134 l164 |state.mem!8!val|))) (let ((l214 (= |next.mem!8!val| l213))) (let ((l215 (ite l133 l150 |state.mem!9!aba|))) (let ((l216 (= |next.mem!9!aba| l215))) (let ((l217 (ite l133 |state.old!ptr| |state.mem!9!ptr|))) (let ((l218 (= |next.mem!9!ptr| l217))) (let ((l219 (ite l133 l164 |state.mem!9!val|))) (let ((l220 (= |next.mem!9!val| l219))) (let ((l221 (and l130 l131 l113 l152 l154 l166 l168 l170 l172 l174 l176 l178 l180 l182 l184 l186 l188 l190 l192 l194 l196 l198 l200 l202 l204 l206 l208 l210 l212 l214 l216 l218 l220 l117 l121 l44))) (let ((l222 (= |state.pc_e| 2))) (let ((l223 (= |next.pc_e| 3))) (let ((l224 (+ |state.old!aba| 1))) (let ((l225 (= |next.new!aba| l224))) (let ((l226 (= |next.new!ptr| |state.elem!ptr|))) (let ((l227 (and l222 l223 l113 l36 l225 l226 l116 l121 l44))) (let ((l228 (= |state.pc_e| 3))) (let ((l229 (= |state.queue!aba| |state.old!aba|))) (let ((l230 (= |state.queue!ptr| |state.old!ptr|))) (let ((l231 (= |state.queue!val| |state.old!val|))) (let ((l232 (= |next.queue!aba| |state.new!aba|))) (let ((l233 (= |next.queue!ptr| |state.new!ptr|))) (let ((l234 (= |next.queue!val| |state.new!val|))) (let ((l235 (= |next.pc_e| 4))) (let ((l236 (and l228 l229 l230 l231 l232 l233 l234 l235 l113 l36 l117 l121))) (let ((l237 (not l229))) (let ((l238 (not l230))) (let ((l239 (not l231))) (let ((l240 (or l237 l238 l239))) (let ((l241 (= |next.pc_e| 0))) (let ((l242 (and l228 l240 l241 l113 l36 l117 l121 l44))) (let ((l243 (= |state.pc_e| 4))) (let ((l244 (< |state.elem!ptr| 10))) (let ((l245 (+ |state.elem!ptr| 1))) (let ((l246 (= |next.elem!ptr| l245))) (let ((l247 (and l243 l244 l241 l110 l246 l112 l36 l117 l121 l44))) (let ((l248 (not l244))) (let ((l249 (and l243 l248 l113 l36 l117 l121 l122 l44))) (let ((l250 (or l129 l221 l227 l236 l242 l247 l249))) (let ((l251 (and l250 l5 l40 l53 l107))) (let ((l252 (or l123 l251))) (let ((l253 (ite l141 |state.mem!1!ptr| |state.mem!0!ptr|))) (let ((l254 (ite l140 |state.mem!2!ptr| l253))) (let ((l255 (ite l139 |state.mem!3!ptr| l254))) (let ((l256 (ite l138 |state.mem!4!ptr| l255))) (let ((l257 (ite l137 |state.mem!5!ptr| l256))) (let ((l258 (ite l136 |state.mem!6!ptr| l257))) (let ((l259 (ite l135 |state.mem!7!ptr| l258))) (let ((l260 (ite l134 |state.mem!8!ptr| l259))) (let ((l261 (ite l133 |state.mem!9!ptr| l260))) (let ((l262 (= l261 |state.last_o|))) (let ((l263 (= |next.last_o| |state.elem!ptr|))) (let ((l264 (= |next.ok_e| true))) (let ((l265 (and l228 l235 l262 l263 l264))) (let ((l266 (not l262))) (let ((l267 (= |next.ok_e| false))) (let ((l268 (= |next.last_o| |state.last_o|))) (let ((l269 (and l228 l235 l266 l267 l268))) (let ((l270 (= |next.last_o| |state.next!ptr|))) (let ((l271 (= |next.ok_e| |state.ok_e|))) (let ((l272 (and l88 l95 l270 l271))) (let ((l273 (not l228))) (let ((l274 (not l235))) (let ((l275 (or l273 l274 l266))) (let ((l276 (or l273 l274 l262))) (let ((l277 (not l88))) (let ((l278 (not l95))) (let ((l279 (or l277 l278))) (let ((l280 (and l275 l276 l279 l268 l271))) (let ((l281 (or l265 l269 l272 l280))) (let ((l282 (and l252 l281))) l282)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
        )
        (invariant next.elem!aba next.elem!ptr next.elem!val next.head!aba next.head!ptr next.head!val next.last next.last_o next.mem!0!aba next.mem!0!ptr next.mem!0!val next.mem!1!aba next.mem!1!ptr next.mem!1!val next.mem!2!aba next.mem!2!ptr next.mem!2!val next.mem!3!aba next.mem!3!ptr next.mem!3!val next.mem!4!aba next.mem!4!ptr next.mem!4!val next.mem!5!aba next.mem!5!ptr next.mem!5!val next.mem!6!aba next.mem!6!ptr next.mem!6!val next.mem!7!aba next.mem!7!ptr next.mem!7!val next.mem!8!aba next.mem!8!ptr next.mem!8!val next.mem!9!aba next.mem!9!ptr next.mem!9!val next.new!aba next.new!ptr next.new!val next.next!aba next.next!ptr next.next!val next.ok_e next.old!aba next.old!ptr next.old!val next.pc_d next.pc_e next.queue!aba next.queue!ptr next.queue!val)
    )
  )
)

;; Property
(assert
  (forall ((state.elem!aba Real) (state.elem!ptr Real) (state.elem!val Real) (state.head!aba Real) (state.head!ptr Real) (state.head!val Real) (state.last Real) (state.last_o Real) (state.mem!0!aba Real) (state.mem!0!ptr Real) (state.mem!0!val Real) (state.mem!1!aba Real) (state.mem!1!ptr Real) (state.mem!1!val Real) (state.mem!2!aba Real) (state.mem!2!ptr Real) (state.mem!2!val Real) (state.mem!3!aba Real) (state.mem!3!ptr Real) (state.mem!3!val Real) (state.mem!4!aba Real) (state.mem!4!ptr Real) (state.mem!4!val Real) (state.mem!5!aba Real) (state.mem!5!ptr Real) (state.mem!5!val Real) (state.mem!6!aba Real) (state.mem!6!ptr Real) (state.mem!6!val Real) (state.mem!7!aba Real) (state.mem!7!ptr Real) (state.mem!7!val Real) (state.mem!8!aba Real) (state.mem!8!ptr Real) (state.mem!8!val Real) (state.mem!9!aba Real) (state.mem!9!ptr Real) (state.mem!9!val Real) (state.new!aba Real) (state.new!ptr Real) (state.new!val Real) (state.next!aba Real) (state.next!ptr Real) (state.next!val Real) (state.ok_e Bool) (state.old!aba Real) (state.old!ptr Real) (state.old!val Real) (state.pc_d Real) (state.pc_e Real) (state.queue!aba Real) (state.queue!ptr Real) (state.queue!val Real))
    (=> (invariant state.elem!aba state.elem!ptr state.elem!val state.head!aba state.head!ptr state.head!val state.last state.last_o state.mem!0!aba state.mem!0!ptr state.mem!0!val state.mem!1!aba state.mem!1!ptr state.mem!1!val state.mem!2!aba state.mem!2!ptr state.mem!2!val state.mem!3!aba state.mem!3!ptr state.mem!3!val state.mem!4!aba state.mem!4!ptr state.mem!4!val state.mem!5!aba state.mem!5!ptr state.mem!5!val state.mem!6!aba state.mem!6!ptr state.mem!6!val state.mem!7!aba state.mem!7!ptr state.mem!7!val state.mem!8!aba state.mem!8!ptr state.mem!8!val state.mem!9!aba state.mem!9!ptr state.mem!9!val state.new!aba state.new!ptr state.new!val state.next!aba state.next!ptr state.next!val state.ok_e state.old!aba state.old!ptr state.old!val state.pc_d state.pc_e state.queue!aba state.queue!ptr state.queue!val)
        |state.ok_e|
    )
  )
)

;; Check the property
(check-sat)

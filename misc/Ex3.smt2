(set-logic HORN)
(declare-fun invariant (Real Real Real Real Real Real Real Real Real Real Real) Bool)

;; Initial state
(assert
  (forall ((state.Ex3_top_Add_Constant_output_1 Real) (state.Ex3_top_Add_Out1_output_1 Real) (state.Ex3_top_Add_Sum_output_1 Real) (state.Ex3_top_Add_Unit_Delay_output_1 Real) (state.Ex3_top_Sub_Constant_output_1 Real) (state.Ex3_top_Sub_Out1_output_1 Real) (state.Ex3_top_Sub_Sum_output_1 Real) (state.Ex3_top_Sub_Unit_Delay_output_1 Real) (state.time Real) (state.time_arr!0 Real) (state.time_arr!1 Real))
    (=> (let ((l0 (= |state.Ex3_top_Add_Unit_Delay_output_1| 0))) (let ((l1 (< |state.time_arr!0| 0))) (let ((l2 (not l1))) (let ((l3 (< |state.time_arr!0| 5))) (let ((l4 (and l2 l3))) (let ((l5 (= |state.Ex3_top_Sub_Unit_Delay_output_1| 0))) (let ((l6 (< |state.time_arr!1| 0))) (let ((l7 (not l6))) (let ((l8 (< |state.time_arr!1| 5))) (let ((l9 (and l7 l8))) (let ((l10 (= |state.time| 0))) (let ((l11 (and l0 l4 l5 l9 l10))) (let ((l12 (= |state.Ex3_top_Add_Out1_output_1| |state.Ex3_top_Add_Unit_Delay_output_1|))) (let ((l13 (+ |state.Ex3_top_Add_Unit_Delay_output_1| 1))) (let ((l14 (= |state.Ex3_top_Add_Sum_output_1| l13))) (let ((l15 (= |state.Ex3_top_Add_Constant_output_1| 1))) (let ((l16 (= |state.Ex3_top_Sub_Out1_output_1| |state.Ex3_top_Sub_Unit_Delay_output_1|))) (let ((l17 (+ |state.Ex3_top_Sub_Unit_Delay_output_1| 1))) (let ((l18 (= |state.Ex3_top_Sub_Sum_output_1| l17))) (let ((l19 (= |state.Ex3_top_Sub_Constant_output_1| 1))) (let ((l20 (and l12 l14 l15 l16 l18 l19))) (let ((l21 (and l11 l20))) l21))))))))))))))))))))))
        (invariant state.Ex3_top_Add_Constant_output_1 state.Ex3_top_Add_Out1_output_1 state.Ex3_top_Add_Sum_output_1 state.Ex3_top_Add_Unit_Delay_output_1 state.Ex3_top_Sub_Constant_output_1 state.Ex3_top_Sub_Out1_output_1 state.Ex3_top_Sub_Sum_output_1 state.Ex3_top_Sub_Unit_Delay_output_1 state.time state.time_arr!0 state.time_arr!1))
  )
)

;; Transition relation
(assert
  (forall ((state.Ex3_top_Add_Constant_output_1 Real) (next.Ex3_top_Add_Constant_output_1 Real) (state.Ex3_top_Add_Out1_output_1 Real) (next.Ex3_top_Add_Out1_output_1 Real) (state.Ex3_top_Add_Sum_output_1 Real) (next.Ex3_top_Add_Sum_output_1 Real) (state.Ex3_top_Add_Unit_Delay_output_1 Real) (next.Ex3_top_Add_Unit_Delay_output_1 Real) (state.Ex3_top_Sub_Constant_output_1 Real) (next.Ex3_top_Sub_Constant_output_1 Real) (state.Ex3_top_Sub_Out1_output_1 Real) (next.Ex3_top_Sub_Out1_output_1 Real) (state.Ex3_top_Sub_Sum_output_1 Real) (next.Ex3_top_Sub_Sum_output_1 Real) (state.Ex3_top_Sub_Unit_Delay_output_1 Real) (next.Ex3_top_Sub_Unit_Delay_output_1 Real) (state.time Real) (next.time Real) (state.time_arr!0 Real) (next.time_arr!0 Real) (state.time_arr!1 Real) (next.time_arr!1 Real))
    (=> (and (invariant state.Ex3_top_Add_Constant_output_1 state.Ex3_top_Add_Out1_output_1 state.Ex3_top_Add_Sum_output_1 state.Ex3_top_Add_Unit_Delay_output_1 state.Ex3_top_Sub_Constant_output_1 state.Ex3_top_Sub_Out1_output_1 state.Ex3_top_Sub_Sum_output_1 state.Ex3_top_Sub_Unit_Delay_output_1 state.time state.time_arr!0 state.time_arr!1)
             (let ((l0 (= |next.Ex3_top_Add_Unit_Delay_output_1| |state.Ex3_top_Add_Sum_output_1|))) (let ((l1 (= |state.time| |state.time_arr!0|))) (let ((l2 (+ |state.time| 5))) (let ((l3 (< |next.time_arr!0| l2))) (let ((l4 (not l3))) (let ((l5 (<= |next.time_arr!0| l2))) (let ((l6 (and l4 l5))) (let ((l7 (= |next.Ex3_top_Sub_Unit_Delay_output_1| |state.Ex3_top_Sub_Unit_Delay_output_1|))) (let ((l8 (= |next.time_arr!1| |state.time_arr!1|))) (let ((l9 (and l0 l1 l6 l7 l8))) (let ((l10 (= |next.Ex3_top_Sub_Unit_Delay_output_1| |state.Ex3_top_Sub_Sum_output_1|))) (let ((l11 (= |state.time| |state.time_arr!1|))) (let ((l12 (< |next.time_arr!1| l2))) (let ((l13 (not l12))) (let ((l14 (<= |next.time_arr!1| l2))) (let ((l15 (and l13 l14))) (let ((l16 (= |next.Ex3_top_Add_Unit_Delay_output_1| |state.Ex3_top_Add_Unit_Delay_output_1|))) (let ((l17 (= |next.time_arr!0| |state.time_arr!0|))) (let ((l18 (and l10 l11 l15 l16 l17))) (let ((l19 (or l9 l18))) (let ((l20 (= |next.time| |state.time|))) (let ((l21 (and l19 l20))) (let ((l22 (< |state.time| |state.time_arr!0|))) (let ((l23 (< |state.time| |state.time_arr!1|))) (let ((l24 (<= |next.time| |state.time_arr!0|))) (let ((l25 (<= |next.time| |state.time_arr!1|))) (let ((l26 (= |next.time| |state.time_arr!0|))) (let ((l27 (= |next.time| |state.time_arr!1|))) (let ((l28 (or l26 l27))) (let ((l29 (and l24 l25 l28))) (let ((l30 (and l22 l23 l29 l16 l17 l7 l8))) (let ((l31 (or l21 l30))) (let ((l32 (= |state.Ex3_top_Add_Out1_output_1| |state.Ex3_top_Add_Unit_Delay_output_1|))) (let ((l33 (+ |state.Ex3_top_Add_Unit_Delay_output_1| 1))) (let ((l34 (= |state.Ex3_top_Add_Sum_output_1| l33))) (let ((l35 (= |state.Ex3_top_Add_Constant_output_1| 1))) (let ((l36 (= |state.Ex3_top_Sub_Out1_output_1| |state.Ex3_top_Sub_Unit_Delay_output_1|))) (let ((l37 (+ |state.Ex3_top_Sub_Unit_Delay_output_1| 1))) (let ((l38 (= |state.Ex3_top_Sub_Sum_output_1| l37))) (let ((l39 (= |state.Ex3_top_Sub_Constant_output_1| 1))) (let ((l40 (and l32 l34 l35 l36 l38 l39))) (let ((l41 (= |next.Ex3_top_Add_Out1_output_1| |next.Ex3_top_Add_Unit_Delay_output_1|))) (let ((l42 (+ |next.Ex3_top_Add_Unit_Delay_output_1| 1))) (let ((l43 (= |next.Ex3_top_Add_Sum_output_1| l42))) (let ((l44 (= |next.Ex3_top_Add_Constant_output_1| 1))) (let ((l45 (= |next.Ex3_top_Sub_Out1_output_1| |next.Ex3_top_Sub_Unit_Delay_output_1|))) (let ((l46 (+ |next.Ex3_top_Sub_Unit_Delay_output_1| 1))) (let ((l47 (= |next.Ex3_top_Sub_Sum_output_1| l46))) (let ((l48 (= |next.Ex3_top_Sub_Constant_output_1| 1))) (let ((l49 (and l41 l43 l44 l45 l47 l48))) (let ((l50 (and l31 l40 l49))) l50)))))))))))))))))))))))))))))))))))))))))))))))))))
        )
        (invariant next.Ex3_top_Add_Constant_output_1 next.Ex3_top_Add_Out1_output_1 next.Ex3_top_Add_Sum_output_1 next.Ex3_top_Add_Unit_Delay_output_1 next.Ex3_top_Sub_Constant_output_1 next.Ex3_top_Sub_Out1_output_1 next.Ex3_top_Sub_Sum_output_1 next.Ex3_top_Sub_Unit_Delay_output_1 next.time next.time_arr!0 next.time_arr!1)
    )
  )
)

;; Property
(assert
  (forall ((state.Ex3_top_Add_Constant_output_1 Real) (state.Ex3_top_Add_Out1_output_1 Real) (state.Ex3_top_Add_Sum_output_1 Real) (state.Ex3_top_Add_Unit_Delay_output_1 Real) (state.Ex3_top_Sub_Constant_output_1 Real) (state.Ex3_top_Sub_Out1_output_1 Real) (state.Ex3_top_Sub_Sum_output_1 Real) (state.Ex3_top_Sub_Unit_Delay_output_1 Real) (state.time Real) (state.time_arr!0 Real) (state.time_arr!1 Real))
    (=> (invariant state.Ex3_top_Add_Constant_output_1 state.Ex3_top_Add_Out1_output_1 state.Ex3_top_Add_Sum_output_1 state.Ex3_top_Add_Unit_Delay_output_1 state.Ex3_top_Sub_Constant_output_1 state.Ex3_top_Sub_Out1_output_1 state.Ex3_top_Sub_Sum_output_1 state.Ex3_top_Sub_Unit_Delay_output_1 state.time state.time_arr!0 state.time_arr!1)
        (let ((l0 (- |state.Ex3_top_Sub_Unit_Delay_output_1| |state.Ex3_top_Add_Unit_Delay_output_1|))) (let ((l1 (<= l0 1))) (let ((l2 (- 1))) (let ((l3 (< l0 l2))) (let ((l4 (not l3))) (let ((l5 (and l1 l4))) l5))))))
    )
  )
)

;; Check the property
(check-sat)
